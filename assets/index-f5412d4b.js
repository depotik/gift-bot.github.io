import {u as useRoute, b as useRouter, c as computed, d as openBlock, e as createElementBlock, f as createBaseVNode, h as createStaticVNode, n as normalizeClass, r as ref, w as watch, i as createTextVNode, j as createCommentVNode, k as createVNode, t as toDisplayString, F as Fragment, l as renderList, m as normalizeStyle, p as onBeforeUnmount, q as inject, o as onMounted, v as createBlock, x as withCtx, T as Transition, y as TransitionGroup, z as withDirectives, A as vModelText, B as unref, C as withModifiers, a as onUnmounted, D as reactive, E as readonly, G as defineComponent, H as resolveComponent, I as provide, J as onBeforeMount, K as watchEffect, L as Teleport, M as nextTick, N as withKeys, O as onActivated, P as createRouter, Q as createWebHistory, R as createApp} from "./vendor-e679d7a1.js";
import {c as commonjsGlobal, g as getDefaultExportFromCjs, u as useTonWallet, a as useTonAddress, b as useTonConnectUI, T as TonConnectUIPlugin} from "./ui-737626fe.js";
!function() {
    const e = document.createElement("link").relList;
    if (!(e && e.supports && e.supports("modulepreload"))) {
        for (const e of document.querySelectorAll('link[rel="modulepreload"]'))
            t(e);
        new MutationObserver((e => {
                for (const a of e)
                    if ("childList" === a.type)
                        for (const e of a.addedNodes)
                            "LINK" === e.tagName && "modulepreload" === e.rel && t(e)
            }
        )).observe(document, {
            childList: !0,
            subtree: !0
        })
    }
    function t(e) {
        if (e.ep)
            return;
        e.ep = !0;
        const t = function(e) {
            const t = {};
            return e.integrity && (t.integrity = e.integrity),
            e.referrerPolicy && (t.referrerPolicy = e.referrerPolicy),
                "use-credentials" === e.crossOrigin ? t.credentials = "include" : "anonymous" === e.crossOrigin ? t.credentials = "omit" : t.credentials = "same-origin",
                t
        }(e);
        fetch(e.href, t)
    }
}();
const FooterMenu_vue_vue_type_style_index_0_scoped_e9d073a8_lang = ""
    , _export_sfc$1 = (e, t) => {
    const a = e.__vccOpts || e;
    for (const [s,i] of t)
        a[s] = i;
    return a
}
    , _hoisted_1$D = {
    class: "footer-menu"
}
    , _sfc_main$G = {
    __name: "FooterMenu",
    setup(e) {
        const t = useRoute()
            , a = useRouter()
            , s = computed(( () => t.path))
            , i = e => {
                s.value !== e && a.push(e)
            }
        ;
        return (e, t) => (openBlock(),
            createElementBlock("nav", _hoisted_1$D, [createBaseVNode("div", {
                class: normalizeClass(["footer-tab", {
                    "footer-tab-active": "/" === s.value
                }]),
                onClick: t[0] || (t[0] = e => i("/"))
            }, t[5] || (t[5] = [createStaticVNode('<div class="footer-icon" data-v-e9d073a8><div class="main-icon" data-v-e9d073a8><div class="main-square" data-v-e9d073a8></div><div class="main-square" data-v-e9d073a8></div><div class="main-square" data-v-e9d073a8></div><div class="main-square" data-v-e9d073a8></div></div></div><div class="footer-label" data-v-e9d073a8>Main</div>', 2)]), 2), createBaseVNode("div", {
                class: normalizeClass(["footer-tab", {
                    "footer-tab-active": "/weekly" === s.value
                }]),
                onClick: t[1] || (t[1] = e => i("/weekly"))
            }, t[6] || (t[6] = [createBaseVNode("div", {
                class: "footer-icon"
            }, [createBaseVNode("img", {
                src: "/images/effects/lightning.svg",
                alt: "Weekly",
                class: "icon-image"
            })], -1), createBaseVNode("div", {
                class: "footer-label"
            }, "Weekly", -1)]), 2), createBaseVNode("div", {
                class: normalizeClass(["footer-tab", {
                    "footer-tab-active": "/jackpot" === s.value
                }]),
                onClick: t[2] || (t[2] = e => i("/jackpot"))
            }, t[7] || (t[7] = [createBaseVNode("div", {
                class: "footer-icon"
            }, [createBaseVNode("img", {
                src: "/images/effects/jackpot.svg",
                alt: "JackPot",
                class: "icon-image"
            })], -1), createBaseVNode("div", {
                class: "footer-label"
            }, "JackPot", -1)]), 2), createBaseVNode("div", {
                class: normalizeClass(["footer-tab", {
                    "footer-tab-active": "/upgrade" === s.value
                }]),
                onClick: t[3] || (t[3] = e => i("/upgrade"))
            }, t[8] || (t[8] = [createBaseVNode("div", {
                class: "footer-icon"
            }, [createBaseVNode("img", {
                src: "/images/effects/upgrade.svg",
                alt: "Upgrade",
                class: "icon-image"
            })], -1), createBaseVNode("div", {
                class: "footer-label"
            }, "Upgrade", -1)]), 2), createBaseVNode("div", {
                class: normalizeClass(["footer-tab", {
                    "footer-tab-active": "/profile" === s.value
                }]),
                onClick: t[4] || (t[4] = e => i("/profile"))
            }, t[9] || (t[9] = [createBaseVNode("div", {
                class: "footer-icon"
            }, [createBaseVNode("img", {
                src: "/images/effects/profile.svg",
                alt: "Profile",
                class: "icon-image"
            })], -1), createBaseVNode("div", {
                class: "footer-label"
            }, "Profile", -1)]), 2)]))
    }
}
    , FooterMenu = _export_sfc$1(_sfc_main$G, [["__scopeId", "data-v-e9d073a8"]]);
function bind(e, t) {
    return function() {
        return e.apply(t, arguments)
    }
}
const {toString: toString} = Object.prototype
    , {getPrototypeOf: getPrototypeOf} = Object
    , kindOf = (cache = Object.create(null),
        e => {
            const t = toString.call(e);
            return cache[t] || (cache[t] = t.slice(8, -1).toLowerCase())
        }
);
var cache;
const kindOfTest = e => (e = e.toLowerCase(),
    t => kindOf(t) === e)
    , typeOfTest = e => t => typeof t === e
    , {isArray: isArray} = Array
    , isUndefined = typeOfTest("undefined");
function isBuffer(e) {
    return null !== e && !isUndefined(e) && null !== e.constructor && !isUndefined(e.constructor) && isFunction(e.constructor.isBuffer) && e.constructor.isBuffer(e)
}
const isArrayBuffer = kindOfTest("ArrayBuffer");
function isArrayBufferView(e) {
    let t;
    return t = "undefined" != typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(e) : e && e.buffer && isArrayBuffer(e.buffer),
        t
}
const isString = typeOfTest("string")
    , isFunction = typeOfTest("function")
    , isNumber = typeOfTest("number")
    , isObject = e => null !== e && "object" == typeof e
    , isBoolean = e => !0 === e || !1 === e
    , isPlainObject = e => {
    if ("object" !== kindOf(e))
        return !1;
    const t = getPrototypeOf(e);
    return !(null !== t && t !== Object.prototype && null !== Object.getPrototypeOf(t) || Symbol.toStringTag in e || Symbol.iterator in e)
}
    , isDate = kindOfTest("Date")
    , isFile = kindOfTest("File")
    , isBlob = kindOfTest("Blob")
    , isFileList = kindOfTest("FileList")
    , isStream = e => isObject(e) && isFunction(e.pipe)
    , isFormData = e => {
    let t;
    return e && ("function" == typeof FormData && e instanceof FormData || isFunction(e.append) && ("formdata" === (t = kindOf(e)) || "object" === t && isFunction(e.toString) && "[object FormData]" === e.toString()))
}
    , isURLSearchParams = kindOfTest("URLSearchParams")
    , [isReadableStream,isRequest,isResponse,isHeaders] = ["ReadableStream", "Request", "Response", "Headers"].map(kindOfTest)
    , trim = e => e.trim ? e.trim() : e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
function forEach(e, t, {allOwnKeys: a=!1}={}) {
    if (null == e)
        return;
    let s, i;
    if ("object" != typeof e && (e = [e]),
        isArray(e))
        for (s = 0,
                 i = e.length; s < i; s++)
            t.call(null, e[s], s, e);
    else {
        const i = a ? Object.getOwnPropertyNames(e) : Object.keys(e)
            , r = i.length;
        let o;
        for (s = 0; s < r; s++)
            o = i[s],
                t.call(null, e[o], o, e)
    }
}
function findKey(e, t) {
    t = t.toLowerCase();
    const a = Object.keys(e);
    let s, i = a.length;
    for (; i-- > 0; )
        if (s = a[i],
        t === s.toLowerCase())
            return s;
    return null
}
const _global = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self ? self : "undefined" != typeof window ? window : global
    , isContextDefined = e => !isUndefined(e) && e !== _global;
function merge() {
    const {caseless: e} = isContextDefined(this) && this || {}
        , t = {}
        , a = (a, s) => {
            const i = e && findKey(t, s) || s;
            isPlainObject(t[i]) && isPlainObject(a) ? t[i] = merge(t[i], a) : isPlainObject(a) ? t[i] = merge({}, a) : isArray(a) ? t[i] = a.slice() : t[i] = a
        }
    ;
    for (let s = 0, i = arguments.length; s < i; s++)
        arguments[s] && forEach(arguments[s], a);
    return t
}
const extend = (e, t, a, {allOwnKeys: s}={}) => (forEach(t, ( (t, s) => {
        a && isFunction(t) ? e[s] = bind(t, a) : e[s] = t
    }
), {
    allOwnKeys: s
}),
    e)
    , stripBOM = e => (65279 === e.charCodeAt(0) && (e = e.slice(1)),
    e)
    , inherits = (e, t, a, s) => {
    e.prototype = Object.create(t.prototype, s),
        e.prototype.constructor = e,
        Object.defineProperty(e, "super", {
            value: t.prototype
        }),
    a && Object.assign(e.prototype, a)
}
    , toFlatObject = (e, t, a, s) => {
    let i, r, o;
    const n = {};
    if (t = t || {},
    null == e)
        return t;
    do {
        for (i = Object.getOwnPropertyNames(e),
                 r = i.length; r-- > 0; )
            o = i[r],
            s && !s(o, e, t) || n[o] || (t[o] = e[o],
                n[o] = !0);
        e = !1 !== a && getPrototypeOf(e)
    } while (e && (!a || a(e, t)) && e !== Object.prototype);
    return t
}
    , endsWith = (e, t, a) => {
    e = String(e),
    (void 0 === a || a > e.length) && (a = e.length),
        a -= t.length;
    const s = e.indexOf(t, a);
    return -1 !== s && s === a
}
    , toArray = e => {
    if (!e)
        return null;
    if (isArray(e))
        return e;
    let t = e.length;
    if (!isNumber(t))
        return null;
    const a = new Array(t);
    for (; t-- > 0; )
        a[t] = e[t];
    return a
}
    , isTypedArray = (TypedArray = "undefined" != typeof Uint8Array && getPrototypeOf(Uint8Array),
    e => TypedArray && e instanceof TypedArray);
var TypedArray;
const forEachEntry = (e, t) => {
    const a = (e && e[Symbol.iterator]).call(e);
    let s;
    for (; (s = a.next()) && !s.done; ) {
        const a = s.value;
        t.call(e, a[0], a[1])
    }
}
    , matchAll = (e, t) => {
    let a;
    const s = [];
    for (; null !== (a = e.exec(t)); )
        s.push(a);
    return s
}
    , isHTMLForm = kindOfTest("HTMLFormElement")
    , toCamelCase = e => e.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g, (function(e, t, a) {
        return t.toUpperCase() + a
    }
))
    , hasOwnProperty = ( ({hasOwnProperty: e}) => (t, a) => e.call(t, a))(Object.prototype)
    , isRegExp = kindOfTest("RegExp")
    , reduceDescriptors = (e, t) => {
    const a = Object.getOwnPropertyDescriptors(e)
        , s = {};
    forEach(a, ( (a, i) => {
            let r;
            !1 !== (r = t(a, i, e)) && (s[i] = r || a)
        }
    )),
        Object.defineProperties(e, s)
}
    , freezeMethods = e => {
    reduceDescriptors(e, ( (t, a) => {
            if (isFunction(e) && -1 !== ["arguments", "caller", "callee"].indexOf(a))
                return !1;
            const s = e[a];
            isFunction(s) && (t.enumerable = !1,
                "writable"in t ? t.writable = !1 : t.set || (t.set = () => {
                        throw Error("Can not rewrite read-only method '" + a + "'")
                    }
                ))
        }
    ))
}
    , toObjectSet = (e, t) => {
    const a = {}
        , s = e => {
            e.forEach((e => {
                    a[e] = !0
                }
            ))
        }
    ;
    return isArray(e) ? s(e) : s(String(e).split(t)),
        a
}
    , noop = () => {}
    , toFiniteNumber = (e, t) => null != e && Number.isFinite(e = +e) ? e : t;
function isSpecCompliantForm(e) {
    return !!(e && isFunction(e.append) && "FormData" === e[Symbol.toStringTag] && e[Symbol.iterator])
}
const toJSONObject = e => {
    const t = new Array(10)
        , a = (e, s) => {
            if (isObject(e)) {
                if (t.indexOf(e) >= 0)
                    return;
                if (!("toJSON"in e)) {
                    t[s] = e;
                    const i = isArray(e) ? [] : {};
                    return forEach(e, ( (e, t) => {
                            const r = a(e, s + 1);
                            !isUndefined(r) && (i[t] = r)
                        }
                    )),
                        t[s] = void 0,
                        i
                }
            }
            return e
        }
    ;
    return a(e, 0)
}
    , isAsyncFn = kindOfTest("AsyncFunction")
    , isThenable = e => e && (isObject(e) || isFunction(e)) && isFunction(e.then) && isFunction(e.catch)
    , _setImmediate = (setImmediateSupported = "function" == typeof setImmediate,
    postMessageSupported = isFunction(_global.postMessage),
    setImmediateSupported ? setImmediate : postMessageSupported ? (token = `axios@${Math.random()}`,
            callbacks = [],
            _global.addEventListener("message", ( ({source: e, data: t}) => {
                    e === _global && t === token && callbacks.length && callbacks.shift()()
                }
            ), !1),
            e => {
                callbacks.push(e),
                    _global.postMessage(token, "*")
            }
    ) : e => setTimeout(e));
var setImmediateSupported, postMessageSupported, token, callbacks;
const asap = "undefined" != typeof queueMicrotask ? queueMicrotask.bind(_global) : "undefined" != typeof process && process.nextTick || _setImmediate
    , utils$1 = {
    isArray: isArray,
    isArrayBuffer: isArrayBuffer,
    isBuffer: isBuffer,
    isFormData: isFormData,
    isArrayBufferView: isArrayBufferView,
    isString: isString,
    isNumber: isNumber,
    isBoolean: isBoolean,
    isObject: isObject,
    isPlainObject: isPlainObject,
    isReadableStream: isReadableStream,
    isRequest: isRequest,
    isResponse: isResponse,
    isHeaders: isHeaders,
    isUndefined: isUndefined,
    isDate: isDate,
    isFile: isFile,
    isBlob: isBlob,
    isRegExp: isRegExp,
    isFunction: isFunction,
    isStream: isStream,
    isURLSearchParams: isURLSearchParams,
    isTypedArray: isTypedArray,
    isFileList: isFileList,
    forEach: forEach,
    merge: merge,
    extend: extend,
    trim: trim,
    stripBOM: stripBOM,
    inherits: inherits,
    toFlatObject: toFlatObject,
    kindOf: kindOf,
    kindOfTest: kindOfTest,
    endsWith: endsWith,
    toArray: toArray,
    forEachEntry: forEachEntry,
    matchAll: matchAll,
    isHTMLForm: isHTMLForm,
    hasOwnProperty: hasOwnProperty,
    hasOwnProp: hasOwnProperty,
    reduceDescriptors: reduceDescriptors,
    freezeMethods: freezeMethods,
    toObjectSet: toObjectSet,
    toCamelCase: toCamelCase,
    noop: noop,
    toFiniteNumber: toFiniteNumber,
    findKey: findKey,
    global: _global,
    isContextDefined: isContextDefined,
    isSpecCompliantForm: isSpecCompliantForm,
    toJSONObject: toJSONObject,
    isAsyncFn: isAsyncFn,
    isThenable: isThenable,
    setImmediate: _setImmediate,
    asap: asap
};
function AxiosError(e, t, a, s, i) {
    Error.call(this),
        Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = (new Error).stack,
        this.message = e,
        this.name = "AxiosError",
    t && (this.code = t),
    a && (this.config = a),
    s && (this.request = s),
    i && (this.response = i,
        this.status = i.status ? i.status : null)
}
utils$1.inherits(AxiosError, Error, {
    toJSON: function() {
        return {
            message: this.message,
            name: this.name,
            description: this.description,
            number: this.number,
            fileName: this.fileName,
            lineNumber: this.lineNumber,
            columnNumber: this.columnNumber,
            stack: this.stack,
            config: utils$1.toJSONObject(this.config),
            code: this.code,
            status: this.status
        }
    }
});
const prototype$1 = AxiosError.prototype
    , descriptors = {};
["ERR_BAD_OPTION_VALUE", "ERR_BAD_OPTION", "ECONNABORTED", "ETIMEDOUT", "ERR_NETWORK", "ERR_FR_TOO_MANY_REDIRECTS", "ERR_DEPRECATED", "ERR_BAD_RESPONSE", "ERR_BAD_REQUEST", "ERR_CANCELED", "ERR_NOT_SUPPORT", "ERR_INVALID_URL"].forEach((e => {
        descriptors[e] = {
            value: e
        }
    }
)),
    Object.defineProperties(AxiosError, descriptors),
    Object.defineProperty(prototype$1, "isAxiosError", {
        value: !0
    }),
    AxiosError.from = (e, t, a, s, i, r) => {
        const o = Object.create(prototype$1);
        return utils$1.toFlatObject(e, o, (function(e) {
                return e !== Error.prototype
            }
        ), (e => "isAxiosError" !== e)),
            AxiosError.call(o, e.message, t, a, s, i),
            o.cause = e,
            o.name = e.name,
        r && Object.assign(o, r),
            o
    }
;
const httpAdapter = null;
function isVisitable(e) {
    return utils$1.isPlainObject(e) || utils$1.isArray(e)
}
function removeBrackets(e) {
    return utils$1.endsWith(e, "[]") ? e.slice(0, -2) : e
}
function renderKey(e, t, a) {
    return e ? e.concat(t).map((function(e, t) {
            return e = removeBrackets(e),
                !a && t ? "[" + e + "]" : e
        }
    )).join(a ? "." : "") : t
}
function isFlatArray(e) {
    return utils$1.isArray(e) && !e.some(isVisitable)
}
const predicates = utils$1.toFlatObject(utils$1, {}, null, (function(e) {
        return /^is[A-Z]/.test(e)
    }
));
function toFormData(e, t, a) {
    if (!utils$1.isObject(e))
        throw new TypeError("target must be an object");
    t = t || new FormData;
    const s = (a = utils$1.toFlatObject(a, {
        metaTokens: !0,
        dots: !1,
        indexes: !1
    }, !1, (function(e, t) {
            return !utils$1.isUndefined(t[e])
        }
    ))).metaTokens
        , i = a.visitor || c
        , r = a.dots
        , o = a.indexes
        , n = (a.Blob || "undefined" != typeof Blob && Blob) && utils$1.isSpecCompliantForm(t);
    if (!utils$1.isFunction(i))
        throw new TypeError("visitor must be a function");
    function l(e) {
        if (null === e)
            return "";
        if (utils$1.isDate(e))
            return e.toISOString();
        if (!n && utils$1.isBlob(e))
            throw new AxiosError("Blob is not supported. Use a Buffer instead.");
        return utils$1.isArrayBuffer(e) || utils$1.isTypedArray(e) ? n && "function" == typeof Blob ? new Blob([e]) : Buffer.from(e) : e
    }
    function c(e, a, i) {
        let n = e;
        if (e && !i && "object" == typeof e)
            if (utils$1.endsWith(a, "{}"))
                a = s ? a : a.slice(0, -2),
                    e = JSON.stringify(e);
            else if (utils$1.isArray(e) && isFlatArray(e) || (utils$1.isFileList(e) || utils$1.endsWith(a, "[]")) && (n = utils$1.toArray(e)))
                return a = removeBrackets(a),
                    n.forEach((function(e, s) {
                            !utils$1.isUndefined(e) && null !== e && t.append(!0 === o ? renderKey([a], s, r) : null === o ? a : a + "[]", l(e))
                        }
                    )),
                    !1;
        return !!isVisitable(e) || (t.append(renderKey(i, a, r), l(e)),
            !1)
    }
    const d = []
        , h = Object.assign(predicates, {
        defaultVisitor: c,
        convertValue: l,
        isVisitable: isVisitable
    });
    if (!utils$1.isObject(e))
        throw new TypeError("data must be an object");
    return function e(a, s) {
        if (!utils$1.isUndefined(a)) {
            if (-1 !== d.indexOf(a))
                throw Error("Circular reference detected in " + s.join("."));
            d.push(a),
                utils$1.forEach(a, (function(a, r) {
                        !0 === (!(utils$1.isUndefined(a) || null === a) && i.call(t, a, utils$1.isString(r) ? r.trim() : r, s, h)) && e(a, s ? s.concat(r) : [r])
                    }
                )),
                d.pop()
        }
    }(e),
        t
}
function encode$1(e) {
    const t = {
        "!": "%21",
        "'": "%27",
        "(": "%28",
        ")": "%29",
        "~": "%7E",
        "%20": "+",
        "%00": "\0"
    };
    return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g, (function(e) {
            return t[e]
        }
    ))
}
function AxiosURLSearchParams(e, t) {
    this._pairs = [],
    e && toFormData(e, this, t)
}
const prototype = AxiosURLSearchParams.prototype;
function encode(e) {
    return encodeURIComponent(e).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]")
}
function buildURL(e, t, a) {
    if (!t)
        return e;
    const s = a && a.encode || encode;
    utils$1.isFunction(a) && (a = {
        serialize: a
    });
    const i = a && a.serialize;
    let r;
    if (r = i ? i(t, a) : utils$1.isURLSearchParams(t) ? t.toString() : new AxiosURLSearchParams(t,a).toString(s),
        r) {
        const t = e.indexOf("#");
        -1 !== t && (e = e.slice(0, t)),
            e += (-1 === e.indexOf("?") ? "?" : "&") + r
    }
    return e
}
prototype.append = function(e, t) {
    this._pairs.push([e, t])
}
    ,
    prototype.toString = function(e) {
        const t = e ? function(t) {
                return e.call(this, t, encode$1)
            }
            : encode$1;
        return this._pairs.map((function(e) {
                return t(e[0]) + "=" + t(e[1])
            }
        ), "").join("&")
    }
;
class InterceptorManager {
    constructor() {
        this.handlers = []
    }
    use(e, t, a) {
        return this.handlers.push({
            fulfilled: e,
            rejected: t,
            synchronous: !!a && a.synchronous,
            runWhen: a ? a.runWhen : null
        }),
        this.handlers.length - 1
    }
    eject(e) {
        this.handlers[e] && (this.handlers[e] = null)
    }
    clear() {
        this.handlers && (this.handlers = [])
    }
    forEach(e) {
        utils$1.forEach(this.handlers, (function(t) {
                null !== t && e(t)
            }
        ))
    }
}
const InterceptorManager$1 = InterceptorManager
    , transitionalDefaults = {
    silentJSONParsing: !0,
    forcedJSONParsing: !0,
    clarifyTimeoutError: !1
}
    , URLSearchParams$1 = "undefined" != typeof URLSearchParams ? URLSearchParams : AxiosURLSearchParams
    , FormData$1 = "undefined" != typeof FormData ? FormData : null
    , Blob$1 = "undefined" != typeof Blob ? Blob : null
    , platform$1 = {
    isBrowser: !0,
    classes: {
        URLSearchParams: URLSearchParams$1,
        FormData: FormData$1,
        Blob: Blob$1
    },
    protocols: ["http", "https", "file", "blob", "url", "data"]
}
    , hasBrowserEnv = "undefined" != typeof window && "undefined" != typeof document
    , _navigator = "object" == typeof navigator && navigator || void 0
    , hasStandardBrowserEnv = hasBrowserEnv && (!_navigator || ["ReactNative", "NativeScript", "NS"].indexOf(_navigator.product) < 0)
    , hasStandardBrowserWebWorkerEnv = "undefined" != typeof WorkerGlobalScope && self instanceof WorkerGlobalScope && "function" == typeof self.importScripts
    , origin = hasBrowserEnv && window.location.href || "http://localhost"
    , utils = Object.freeze(Object.defineProperty({
    __proto__: null,
    hasBrowserEnv: hasBrowserEnv,
    hasStandardBrowserEnv: hasStandardBrowserEnv,
    hasStandardBrowserWebWorkerEnv: hasStandardBrowserWebWorkerEnv,
    navigator: _navigator,
    origin: origin
}, Symbol.toStringTag, {
    value: "Module"
}))
    , platform = {
    ...utils,
    ...platform$1
};
function toURLEncodedForm(e, t) {
    return toFormData(e, new platform.classes.URLSearchParams, Object.assign({
        visitor: function(e, t, a, s) {
            return platform.isNode && utils$1.isBuffer(e) ? (this.append(t, e.toString("base64")),
                !1) : s.defaultVisitor.apply(this, arguments)
        }
    }, t))
}
function parsePropPath(e) {
    return utils$1.matchAll(/\w+|\[(\w*)]/g, e).map((e => "[]" === e[0] ? "" : e[1] || e[0]))
}
function arrayToObject(e) {
    const t = {}
        , a = Object.keys(e);
    let s;
    const i = a.length;
    let r;
    for (s = 0; s < i; s++)
        r = a[s],
            t[r] = e[r];
    return t
}
function formDataToJSON(e) {
    function t(e, a, s, i) {
        let r = e[i++];
        if ("__proto__" === r)
            return !0;
        const o = Number.isFinite(+r)
            , n = i >= e.length;
        if (r = !r && utils$1.isArray(s) ? s.length : r,
            n)
            return utils$1.hasOwnProp(s, r) ? s[r] = [s[r], a] : s[r] = a,
                !o;
        s[r] && utils$1.isObject(s[r]) || (s[r] = []);
        return t(e, a, s[r], i) && utils$1.isArray(s[r]) && (s[r] = arrayToObject(s[r])),
            !o
    }
    if (utils$1.isFormData(e) && utils$1.isFunction(e.entries)) {
        const a = {};
        return utils$1.forEachEntry(e, ( (e, s) => {
                t(parsePropPath(e), s, a, 0)
            }
        )),
            a
    }
    return null
}
function stringifySafely(e, t, a) {
    if (utils$1.isString(e))
        try {
            return (t || JSON.parse)(e),
                utils$1.trim(e)
        } catch (s) {
            if ("SyntaxError" !== s.name)
                throw s
        }
    return (a || JSON.stringify)(e)
}
const defaults = {
    transitional: transitionalDefaults,
    adapter: ["xhr", "http", "fetch"],
    transformRequest: [function(e, t) {
        const a = t.getContentType() || ""
            , s = a.indexOf("application/json") > -1
            , i = utils$1.isObject(e);
        i && utils$1.isHTMLForm(e) && (e = new FormData(e));
        if (utils$1.isFormData(e))
            return s ? JSON.stringify(formDataToJSON(e)) : e;
        if (utils$1.isArrayBuffer(e) || utils$1.isBuffer(e) || utils$1.isStream(e) || utils$1.isFile(e) || utils$1.isBlob(e) || utils$1.isReadableStream(e))
            return e;
        if (utils$1.isArrayBufferView(e))
            return e.buffer;
        if (utils$1.isURLSearchParams(e))
            return t.setContentType("application/x-www-form-urlencoded;charset=utf-8", !1),
                e.toString();
        let r;
        if (i) {
            if (a.indexOf("application/x-www-form-urlencoded") > -1)
                return toURLEncodedForm(e, this.formSerializer).toString();
            if ((r = utils$1.isFileList(e)) || a.indexOf("multipart/form-data") > -1) {
                const t = this.env && this.env.FormData;
                return toFormData(r ? {
                    "files[]": e
                } : e, t && new t, this.formSerializer)
            }
        }
        return i || s ? (t.setContentType("application/json", !1),
            stringifySafely(e)) : e
    }
    ],
    transformResponse: [function(e) {
        const t = this.transitional || defaults.transitional
            , a = t && t.forcedJSONParsing
            , s = "json" === this.responseType;
        if (utils$1.isResponse(e) || utils$1.isReadableStream(e))
            return e;
        if (e && utils$1.isString(e) && (a && !this.responseType || s)) {
            const a = !(t && t.silentJSONParsing) && s;
            try {
                return JSON.parse(e)
            } catch (i) {
                if (a) {
                    if ("SyntaxError" === i.name)
                        throw AxiosError.from(i, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);
                    throw i
                }
            }
        }
        return e
    }
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
        FormData: platform.classes.FormData,
        Blob: platform.classes.Blob
    },
    validateStatus: function(e) {
        return e >= 200 && e < 300
    },
    headers: {
        common: {
            Accept: "application/json, text/plain, */*",
            "Content-Type": void 0
        }
    }
};
utils$1.forEach(["delete", "get", "head", "post", "put", "patch"], (e => {
        defaults.headers[e] = {}
    }
));
const defaults$1 = defaults
    , ignoreDuplicateOf = utils$1.toObjectSet(["age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent"])
    , parseHeaders = e => {
    const t = {};
    let a, s, i;
    return e && e.split("\n").forEach((function(e) {
            i = e.indexOf(":"),
                a = e.substring(0, i).trim().toLowerCase(),
                s = e.substring(i + 1).trim(),
            !a || t[a] && ignoreDuplicateOf[a] || ("set-cookie" === a ? t[a] ? t[a].push(s) : t[a] = [s] : t[a] = t[a] ? t[a] + ", " + s : s)
        }
    )),
        t
}
    , $internals = Symbol("internals");
function normalizeHeader(e) {
    return e && String(e).trim().toLowerCase()
}
function normalizeValue(e) {
    return !1 === e || null == e ? e : utils$1.isArray(e) ? e.map(normalizeValue) : String(e)
}
function parseTokens(e) {
    const t = Object.create(null)
        , a = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
    let s;
    for (; s = a.exec(e); )
        t[s[1]] = s[2];
    return t
}
const isValidHeaderName = e => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim());
function matchHeaderValue(e, t, a, s, i) {
    return utils$1.isFunction(s) ? s.call(this, t, a) : (i && (t = a),
        utils$1.isString(t) ? utils$1.isString(s) ? -1 !== t.indexOf(s) : utils$1.isRegExp(s) ? s.test(t) : void 0 : void 0)
}
function formatHeader(e) {
    return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, ( (e, t, a) => t.toUpperCase() + a))
}
function buildAccessors(e, t) {
    const a = utils$1.toCamelCase(" " + t);
    ["get", "set", "has"].forEach((s => {
            Object.defineProperty(e, s + a, {
                value: function(e, a, i) {
                    return this[s].call(this, t, e, a, i)
                },
                configurable: !0
            })
        }
    ))
}
class AxiosHeaders {
    constructor(e) {
        e && this.set(e)
    }
    set(e, t, a) {
        const s = this;
        function i(e, t, a) {
            const i = normalizeHeader(t);
            if (!i)
                throw new Error("header name must be a non-empty string");
            const r = utils$1.findKey(s, i);
            (!r || void 0 === s[r] || !0 === a || void 0 === a && !1 !== s[r]) && (s[r || t] = normalizeValue(e))
        }
        const r = (e, t) => utils$1.forEach(e, ( (e, a) => i(e, a, t)));
        if (utils$1.isPlainObject(e) || e instanceof this.constructor)
            r(e, t);
        else if (utils$1.isString(e) && (e = e.trim()) && !isValidHeaderName(e))
            r(parseHeaders(e), t);
        else if (utils$1.isHeaders(e))
            for (const [o,n] of e.entries())
                i(n, o, a);
        else
            null != e && i(t, e, a);
        return this
    }
    get(e, t) {
        if (e = normalizeHeader(e)) {
            const a = utils$1.findKey(this, e);
            if (a) {
                const e = this[a];
                if (!t)
                    return e;
                if (!0 === t)
                    return parseTokens(e);
                if (utils$1.isFunction(t))
                    return t.call(this, e, a);
                if (utils$1.isRegExp(t))
                    return t.exec(e);
                throw new TypeError("parser must be boolean|regexp|function")
            }
        }
    }
    has(e, t) {
        if (e = normalizeHeader(e)) {
            const a = utils$1.findKey(this, e);
            return !(!a || void 0 === this[a] || t && !matchHeaderValue(this, this[a], a, t))
        }
        return !1
    }
    delete(e, t) {
        const a = this;
        let s = !1;
        function i(e) {
            if (e = normalizeHeader(e)) {
                const i = utils$1.findKey(a, e);
                !i || t && !matchHeaderValue(a, a[i], i, t) || (delete a[i],
                    s = !0)
            }
        }
        return utils$1.isArray(e) ? e.forEach(i) : i(e),
            s
    }
    clear(e) {
        const t = Object.keys(this);
        let a = t.length
            , s = !1;
        for (; a--; ) {
            const i = t[a];
            e && !matchHeaderValue(this, this[i], i, e, !0) || (delete this[i],
                s = !0)
        }
        return s
    }
    normalize(e) {
        const t = this
            , a = {};
        return utils$1.forEach(this, ( (s, i) => {
                const r = utils$1.findKey(a, i);
                if (r)
                    return t[r] = normalizeValue(s),
                        void delete t[i];
                const o = e ? formatHeader(i) : String(i).trim();
                o !== i && delete t[i],
                    t[o] = normalizeValue(s),
                    a[o] = !0
            }
        )),
            this
    }
    concat(...e) {
        return this.constructor.concat(this, ...e)
    }
    toJSON(e) {
        const t = Object.create(null);
        return utils$1.forEach(this, ( (a, s) => {
                null != a && !1 !== a && (t[s] = e && utils$1.isArray(a) ? a.join(", ") : a)
            }
        )),
            t
    }
    [Symbol.iterator]() {
        return Object.entries(this.toJSON())[Symbol.iterator]()
    }
    toString() {
        return Object.entries(this.toJSON()).map(( ([e,t]) => e + ": " + t)).join("\n")
    }
    get[Symbol.toStringTag]() {
        return "AxiosHeaders"
    }
    static from(e) {
        return e instanceof this ? e : new this(e)
    }
    static concat(e, ...t) {
        const a = new this(e);
        return t.forEach((e => a.set(e))),
            a
    }
    static accessor(e) {
        const t = (this[$internals] = this[$internals] = {
            accessors: {}
        }).accessors
            , a = this.prototype;
        function s(e) {
            const s = normalizeHeader(e);
            t[s] || (buildAccessors(a, e),
                t[s] = !0)
        }
        return utils$1.isArray(e) ? e.forEach(s) : s(e),
            this
    }
}
AxiosHeaders.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]),
    utils$1.reduceDescriptors(AxiosHeaders.prototype, ( ({value: e}, t) => {
            let a = t[0].toUpperCase() + t.slice(1);
            return {
                get: () => e,
                set(e) {
                    this[a] = e
                }
            }
        }
    )),
    utils$1.freezeMethods(AxiosHeaders);
const AxiosHeaders$1 = AxiosHeaders;
function transformData(e, t) {
    const a = this || defaults$1
        , s = t || a
        , i = AxiosHeaders$1.from(s.headers);
    let r = s.data;
    return utils$1.forEach(e, (function(e) {
            r = e.call(a, r, i.normalize(), t ? t.status : void 0)
        }
    )),
        i.normalize(),
        r
}
function isCancel(e) {
    return !(!e || !e.__CANCEL__)
}
function CanceledError(e, t, a) {
    AxiosError.call(this, null == e ? "canceled" : e, AxiosError.ERR_CANCELED, t, a),
        this.name = "CanceledError"
}
function settle(e, t, a) {
    const s = a.config.validateStatus;
    a.status && s && !s(a.status) ? t(new AxiosError("Request failed with status code " + a.status,[AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(a.status / 100) - 4],a.config,a.request,a)) : e(a)
}
function parseProtocol(e) {
    const t = /^([-+\w]{1,25})(:?\/\/|:)/.exec(e);
    return t && t[1] || ""
}
function speedometer(e, t) {
    e = e || 10;
    const a = new Array(e)
        , s = new Array(e);
    let i, r = 0, o = 0;
    return t = void 0 !== t ? t : 1e3,
        function(n) {
            const l = Date.now()
                , c = s[o];
            i || (i = l),
                a[r] = n,
                s[r] = l;
            let d = o
                , h = 0;
            for (; d !== r; )
                h += a[d++],
                    d %= e;
            if (r = (r + 1) % e,
            r === o && (o = (o + 1) % e),
            l - i < t)
                return;
            const p = c && l - c;
            return p ? Math.round(1e3 * h / p) : void 0
        }
}
function throttle(e, t) {
    let a, s, i = 0, r = 1e3 / t;
    const o = (t, r=Date.now()) => {
            i = r,
                a = null,
            s && (clearTimeout(s),
                s = null),
                e.apply(null, t)
        }
    ;
    return [ (...e) => {
        const t = Date.now()
            , n = t - i;
        n >= r ? o(e, t) : (a = e,
        s || (s = setTimeout(( () => {
                s = null,
                    o(a)
            }
        ), r - n)))
    }
        , () => a && o(a)]
}
utils$1.inherits(CanceledError, AxiosError, {
    __CANCEL__: !0
});
const progressEventReducer = (e, t, a=3) => {
    let s = 0;
    const i = speedometer(50, 250);
    return throttle((a => {
            const r = a.loaded
                , o = a.lengthComputable ? a.total : void 0
                , n = r - s
                , l = i(n);
            s = r;
            e({
                loaded: r,
                total: o,
                progress: o ? r / o : void 0,
                bytes: n,
                rate: l || void 0,
                estimated: l && o && r <= o ? (o - r) / l : void 0,
                event: a,
                lengthComputable: null != o,
                [t ? "download" : "upload"]: !0
            })
        }
    ), a)
}
    , progressEventDecorator = (e, t) => {
    const a = null != e;
    return [s => t[0]({
        lengthComputable: a,
        total: e,
        loaded: s
    }), t[1]]
}
    , asyncDecorator = e => (...t) => utils$1.asap(( () => e(...t)))
    , isURLSameOrigin = platform.hasStandardBrowserEnv ? (origin2 = new URL(platform.origin),
    isMSIE = platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent),
    e => (e = new URL(e,platform.origin),
    origin2.protocol === e.protocol && origin2.host === e.host && (isMSIE || origin2.port === e.port))) : () => !0;
var origin2, isMSIE;
const cookies = platform.hasStandardBrowserEnv ? {
    write(e, t, a, s, i, r) {
        const o = [e + "=" + encodeURIComponent(t)];
        utils$1.isNumber(a) && o.push("expires=" + new Date(a).toGMTString()),
        utils$1.isString(s) && o.push("path=" + s),
        utils$1.isString(i) && o.push("domain=" + i),
        !0 === r && o.push("secure"),
            document.cookie = o.join("; ")
    },
    read(e) {
        const t = document.cookie.match(new RegExp("(^|;\\s*)(" + e + ")=([^;]*)"));
        return t ? decodeURIComponent(t[3]) : null
    },
    remove(e) {
        this.write(e, "", Date.now() - 864e5)
    }
} : {
    write() {},
    read: () => null,
    remove() {}
};
function isAbsoluteURL(e) {
    return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)
}
function combineURLs(e, t) {
    return t ? e.replace(/\/?\/$/, "") + "/" + t.replace(/^\/+/, "") : e
}
function buildFullPath(e, t, a) {
    let s = !isAbsoluteURL(t);
    return e && (s || 0 == a) ? combineURLs(e, t) : t
}
const headersToObject = e => e instanceof AxiosHeaders$1 ? {
    ...e
} : e;
function mergeConfig(e, t) {
    t = t || {};
    const a = {};
    function s(e, t, a, s) {
        return utils$1.isPlainObject(e) && utils$1.isPlainObject(t) ? utils$1.merge.call({
            caseless: s
        }, e, t) : utils$1.isPlainObject(t) ? utils$1.merge({}, t) : utils$1.isArray(t) ? t.slice() : t
    }
    function i(e, t, a, i) {
        return utils$1.isUndefined(t) ? utils$1.isUndefined(e) ? void 0 : s(void 0, e, 0, i) : s(e, t, 0, i)
    }
    function r(e, t) {
        if (!utils$1.isUndefined(t))
            return s(void 0, t)
    }
    function o(e, t) {
        return utils$1.isUndefined(t) ? utils$1.isUndefined(e) ? void 0 : s(void 0, e) : s(void 0, t)
    }
    function n(a, i, r) {
        return r in t ? s(a, i) : r in e ? s(void 0, a) : void 0
    }
    const l = {
        url: r,
        method: r,
        data: r,
        baseURL: o,
        transformRequest: o,
        transformResponse: o,
        paramsSerializer: o,
        timeout: o,
        timeoutMessage: o,
        withCredentials: o,
        withXSRFToken: o,
        adapter: o,
        responseType: o,
        xsrfCookieName: o,
        xsrfHeaderName: o,
        onUploadProgress: o,
        onDownloadProgress: o,
        decompress: o,
        maxContentLength: o,
        maxBodyLength: o,
        beforeRedirect: o,
        transport: o,
        httpAgent: o,
        httpsAgent: o,
        cancelToken: o,
        socketPath: o,
        responseEncoding: o,
        validateStatus: n,
        headers: (e, t, a) => i(headersToObject(e), headersToObject(t), 0, !0)
    };
    return utils$1.forEach(Object.keys(Object.assign({}, e, t)), (function(s) {
            const r = l[s] || i
                , o = r(e[s], t[s], s);
            utils$1.isUndefined(o) && r !== n || (a[s] = o)
        }
    )),
        a
}
const resolveConfig = e => {
    const t = mergeConfig({}, e);
    let a, {data: s, withXSRFToken: i, xsrfHeaderName: r, xsrfCookieName: o, headers: n, auth: l} = t;
    if (t.headers = n = AxiosHeaders$1.from(n),
        t.url = buildURL(buildFullPath(t.baseURL, t.url, t.allowAbsoluteUrls), e.params, e.paramsSerializer),
    l && n.set("Authorization", "Basic " + btoa((l.username || "") + ":" + (l.password ? unescape(encodeURIComponent(l.password)) : ""))),
        utils$1.isFormData(s))
        if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv)
            n.setContentType(void 0);
        else if (!1 !== (a = n.getContentType())) {
            const [e,...t] = a ? a.split(";").map((e => e.trim())).filter(Boolean) : [];
            n.setContentType([e || "multipart/form-data", ...t].join("; "))
        }
    if (platform.hasStandardBrowserEnv && (i && utils$1.isFunction(i) && (i = i(t)),
    i || !1 !== i && isURLSameOrigin(t.url))) {
        const e = r && o && cookies.read(o);
        e && n.set(r, e)
    }
    return t
}
    , isXHRAdapterSupported = "undefined" != typeof XMLHttpRequest
    , xhrAdapter = isXHRAdapterSupported && function(e) {
    return new Promise((function(t, a) {
            const s = resolveConfig(e);
            let i = s.data;
            const r = AxiosHeaders$1.from(s.headers).normalize();
            let o, n, l, c, d, {responseType: h, onUploadProgress: p, onDownloadProgress: u} = s;
            function m() {
                c && c(),
                d && d(),
                s.cancelToken && s.cancelToken.unsubscribe(o),
                s.signal && s.signal.removeEventListener("abort", o)
            }
            let f = new XMLHttpRequest;
            function v() {
                if (!f)
                    return;
                const s = AxiosHeaders$1.from("getAllResponseHeaders"in f && f.getAllResponseHeaders());
                settle((function(e) {
                        t(e),
                            m()
                    }
                ), (function(e) {
                        a(e),
                            m()
                    }
                ), {
                    data: h && "text" !== h && "json" !== h ? f.response : f.responseText,
                    status: f.status,
                    statusText: f.statusText,
                    headers: s,
                    config: e,
                    request: f
                }),
                    f = null
            }
            f.open(s.method.toUpperCase(), s.url, !0),
                f.timeout = s.timeout,
                "onloadend"in f ? f.onloadend = v : f.onreadystatechange = function() {
                    f && 4 === f.readyState && (0 !== f.status || f.responseURL && 0 === f.responseURL.indexOf("file:")) && setTimeout(v)
                }
                ,
                f.onabort = function() {
                    f && (a(new AxiosError("Request aborted",AxiosError.ECONNABORTED,e,f)),
                        f = null)
                }
                ,
                f.onerror = function() {
                    a(new AxiosError("Network Error",AxiosError.ERR_NETWORK,e,f)),
                        f = null
                }
                ,
                f.ontimeout = function() {
                    let t = s.timeout ? "timeout of " + s.timeout + "ms exceeded" : "timeout exceeded";
                    const i = s.transitional || transitionalDefaults;
                    s.timeoutErrorMessage && (t = s.timeoutErrorMessage),
                        a(new AxiosError(t,i.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,e,f)),
                        f = null
                }
                ,
            void 0 === i && r.setContentType(null),
            "setRequestHeader"in f && utils$1.forEach(r.toJSON(), (function(e, t) {
                    f.setRequestHeader(t, e)
                }
            )),
            utils$1.isUndefined(s.withCredentials) || (f.withCredentials = !!s.withCredentials),
            h && "json" !== h && (f.responseType = s.responseType),
            u && ([l,d] = progressEventReducer(u, !0),
                f.addEventListener("progress", l)),
            p && f.upload && ([n,c] = progressEventReducer(p),
                f.upload.addEventListener("progress", n),
                f.upload.addEventListener("loadend", c)),
            (s.cancelToken || s.signal) && (o = t => {
                f && (a(!t || t.type ? new CanceledError(null,e,f) : t),
                    f.abort(),
                    f = null)
            }
                ,
            s.cancelToken && s.cancelToken.subscribe(o),
            s.signal && (s.signal.aborted ? o() : s.signal.addEventListener("abort", o)));
            const g = parseProtocol(s.url);
            g && -1 === platform.protocols.indexOf(g) ? a(new AxiosError("Unsupported protocol " + g + ":",AxiosError.ERR_BAD_REQUEST,e)) : f.send(i || null)
        }
    ))
}
    , composeSignals = (e, t) => {
    const {length: a} = e = e ? e.filter(Boolean) : [];
    if (t || a) {
        let a, s = new AbortController;
        const i = function(e) {
            if (!a) {
                a = !0,
                    o();
                const t = e instanceof Error ? e : this.reason;
                s.abort(t instanceof AxiosError ? t : new CanceledError(t instanceof Error ? t.message : t))
            }
        };
        let r = t && setTimeout(( () => {
                r = null,
                    i(new AxiosError(`timeout ${t} of ms exceeded`,AxiosError.ETIMEDOUT))
            }
        ), t);
        const o = () => {
                e && (r && clearTimeout(r),
                    r = null,
                    e.forEach((e => {
                            e.unsubscribe ? e.unsubscribe(i) : e.removeEventListener("abort", i)
                        }
                    )),
                    e = null)
            }
        ;
        e.forEach((e => e.addEventListener("abort", i)));
        const {signal: n} = s;
        return n.unsubscribe = () => utils$1.asap(o),
            n
    }
}
    , composeSignals$1 = composeSignals
    , streamChunk = function*(e, t) {
    let a = e.byteLength;
    if (!t || a < t)
        return void (yield e);
    let s, i = 0;
    for (; i < a; )
        s = i + t,
            yield e.slice(i, s),
            i = s
}
    , readBytes = async function*(e, t) {
    for await(const a of readStream(e))
        yield*streamChunk(a, t)
}
    , readStream = async function*(e) {
    if (e[Symbol.asyncIterator])
        return void (yield*e);
    const t = e.getReader();
    try {
        for (; ; ) {
            const {done: e, value: a} = await t.read();
            if (e)
                break;
            yield a
        }
    } finally {
        await t.cancel()
    }
}
    , trackStream = (e, t, a, s) => {
    const i = readBytes(e, t);
    let r, o = 0, n = e => {
            r || (r = !0,
            s && s(e))
        }
    ;
    return new ReadableStream({
        async pull(e) {
            try {
                const {done: t, value: s} = await i.next();
                if (t)
                    return n(),
                        void e.close();
                let r = s.byteLength;
                if (a) {
                    let e = o += r;
                    a(e)
                }
                e.enqueue(new Uint8Array(s))
            } catch (t) {
                throw n(t),
                    t
            }
        },
        cancel: e => (n(e),
            i.return())
    },{
        highWaterMark: 2
    })
}
    , isFetchSupported = "function" == typeof fetch && "function" == typeof Request && "function" == typeof Response
    , isReadableStreamSupported = isFetchSupported && "function" == typeof ReadableStream
    , encodeText = isFetchSupported && ("function" == typeof TextEncoder ? (encoder = new TextEncoder,
    e => encoder.encode(e)) : async e => new Uint8Array(await new Response(e).arrayBuffer()));
var encoder;
const test = (e, ...t) => {
    try {
        return !!e(...t)
    } catch (a) {
        return !1
    }
}
    , supportsRequestStream = isReadableStreamSupported && test(( () => {
        let e = !1;
        const t = new Request(platform.origin,{
            body: new ReadableStream,
            method: "POST",
            get duplex() {
                return e = !0,
                    "half"
            }
        }).headers.has("Content-Type");
        return e && !t
    }
))
    , DEFAULT_CHUNK_SIZE = 65536
    , supportsResponseStream = isReadableStreamSupported && test(( () => utils$1.isReadableStream(new Response("").body)))
    , resolvers = {
    stream: supportsResponseStream && (e => e.body)
};
var res;
isFetchSupported && (res = new Response,
    ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((e => {
            !resolvers[e] && (resolvers[e] = utils$1.isFunction(res[e]) ? t => t[e]() : (t, a) => {
                    throw new AxiosError(`Response type '${e}' is not supported`,AxiosError.ERR_NOT_SUPPORT,a)
                }
            )
        }
    )));
const getBodyLength = async e => {
    if (null == e)
        return 0;
    if (utils$1.isBlob(e))
        return e.size;
    if (utils$1.isSpecCompliantForm(e)) {
        const t = new Request(platform.origin,{
            method: "POST",
            body: e
        });
        return (await t.arrayBuffer()).byteLength
    }
    return utils$1.isArrayBufferView(e) || utils$1.isArrayBuffer(e) ? e.byteLength : (utils$1.isURLSearchParams(e) && (e += ""),
        utils$1.isString(e) ? (await encodeText(e)).byteLength : void 0)
}
    , resolveBodyLength = async (e, t) => {
    const a = utils$1.toFiniteNumber(e.getContentLength());
    return null == a ? getBodyLength(t) : a
}
    , fetchAdapter = isFetchSupported && (async e => {
        let {url: t, method: a, data: s, signal: i, cancelToken: r, timeout: o, onDownloadProgress: n, onUploadProgress: l, responseType: c, headers: d, withCredentials: h="same-origin", fetchOptions: p} = resolveConfig(e);
        c = c ? (c + "").toLowerCase() : "text";
        let u, m = composeSignals$1([i, r && r.toAbortSignal()], o);
        const f = m && m.unsubscribe && ( () => {
                m.unsubscribe()
            }
        );
        let v;
        try {
            if (l && supportsRequestStream && "get" !== a && "head" !== a && 0 !== (v = await resolveBodyLength(d, s))) {
                let e, a = new Request(t,{
                    method: "POST",
                    body: s,
                    duplex: "half"
                });
                if (utils$1.isFormData(s) && (e = a.headers.get("content-type")) && d.setContentType(e),
                    a.body) {
                    const [e,t] = progressEventDecorator(v, progressEventReducer(asyncDecorator(l)));
                    s = trackStream(a.body, DEFAULT_CHUNK_SIZE, e, t)
                }
            }
            utils$1.isString(h) || (h = h ? "include" : "omit");
            const i = "credentials"in Request.prototype;
            u = new Request(t,{
                ...p,
                signal: m,
                method: a.toUpperCase(),
                headers: d.normalize().toJSON(),
                body: s,
                duplex: "half",
                credentials: i ? h : void 0
            });
            let r = await fetch(u);
            const o = supportsResponseStream && ("stream" === c || "response" === c);
            if (supportsResponseStream && (n || o && f)) {
                const e = {};
                ["status", "statusText", "headers"].forEach((t => {
                        e[t] = r[t]
                    }
                ));
                const t = utils$1.toFiniteNumber(r.headers.get("content-length"))
                    , [a,s] = n && progressEventDecorator(t, progressEventReducer(asyncDecorator(n), !0)) || [];
                r = new Response(trackStream(r.body, DEFAULT_CHUNK_SIZE, a, ( () => {
                        s && s(),
                        f && f()
                    }
                )),e)
            }
            c = c || "text";
            let g = await resolvers[utils$1.findKey(resolvers, c) || "text"](r, e);
            return !o && f && f(),
                await new Promise(( (t, a) => {
                        settle(t, a, {
                            data: g,
                            headers: AxiosHeaders$1.from(r.headers),
                            status: r.status,
                            statusText: r.statusText,
                            config: e,
                            request: u
                        })
                    }
                ))
        } catch (g) {
            if (f && f(),
            g && "TypeError" === g.name && /fetch/i.test(g.message))
                throw Object.assign(new AxiosError("Network Error",AxiosError.ERR_NETWORK,e,u), {
                    cause: g.cause || g
                });
            throw AxiosError.from(g, g && g.code, e, u)
        }
    }
)
    , knownAdapters = {
    http: httpAdapter,
    xhr: xhrAdapter,
    fetch: fetchAdapter
};
utils$1.forEach(knownAdapters, ( (e, t) => {
        if (e) {
            try {
                Object.defineProperty(e, "name", {
                    value: t
                })
            } catch (a) {}
            Object.defineProperty(e, "adapterName", {
                value: t
            })
        }
    }
));
const renderReason = e => `- ${e}`
    , isResolvedHandle = e => utils$1.isFunction(e) || null === e || !1 === e
    , adapters = {
    getAdapter: e => {
        e = utils$1.isArray(e) ? e : [e];
        const {length: t} = e;
        let a, s;
        const i = {};
        for (let r = 0; r < t; r++) {
            let t;
            if (a = e[r],
                s = a,
            !isResolvedHandle(a) && (s = knownAdapters[(t = String(a)).toLowerCase()],
            void 0 === s))
                throw new AxiosError(`Unknown adapter '${t}'`);
            if (s)
                break;
            i[t || "#" + r] = s
        }
        if (!s) {
            const e = Object.entries(i).map(( ([e,t]) => `adapter ${e} ` + (!1 === t ? "is not supported by the environment" : "is not available in the build")));
            throw new AxiosError("There is no suitable adapter to dispatch the request " + (t ? e.length > 1 ? "since :\n" + e.map(renderReason).join("\n") : " " + renderReason(e[0]) : "as no adapter specified"),"ERR_NOT_SUPPORT")
        }
        return s
    }
    ,
    adapters: knownAdapters
};
function throwIfCancellationRequested(e) {
    if (e.cancelToken && e.cancelToken.throwIfRequested(),
    e.signal && e.signal.aborted)
        throw new CanceledError(null,e)
}
function dispatchRequest(e) {
    throwIfCancellationRequested(e),
        e.headers = AxiosHeaders$1.from(e.headers),
        e.data = transformData.call(e, e.transformRequest),
    -1 !== ["post", "put", "patch"].indexOf(e.method) && e.headers.setContentType("application/x-www-form-urlencoded", !1);
    return adapters.getAdapter(e.adapter || defaults$1.adapter)(e).then((function(t) {
            return throwIfCancellationRequested(e),
                t.data = transformData.call(e, e.transformResponse, t),
                t.headers = AxiosHeaders$1.from(t.headers),
                t
        }
    ), (function(t) {
            return isCancel(t) || (throwIfCancellationRequested(e),
            t && t.response && (t.response.data = transformData.call(e, e.transformResponse, t.response),
                t.response.headers = AxiosHeaders$1.from(t.response.headers))),
                Promise.reject(t)
        }
    ))
}
const VERSION = "1.8.4"
    , validators$1 = {};
["object", "boolean", "number", "function", "string", "symbol"].forEach(( (e, t) => {
        validators$1[e] = function(a) {
            return typeof a === e || "a" + (t < 1 ? "n " : " ") + e
        }
    }
));
const deprecatedWarnings = {};
function assertOptions(e, t, a) {
    if ("object" != typeof e)
        throw new AxiosError("options must be an object",AxiosError.ERR_BAD_OPTION_VALUE);
    const s = Object.keys(e);
    let i = s.length;
    for (; i-- > 0; ) {
        const r = s[i]
            , o = t[r];
        if (o) {
            const t = e[r]
                , a = void 0 === t || o(t, r, e);
            if (!0 !== a)
                throw new AxiosError("option " + r + " must be " + a,AxiosError.ERR_BAD_OPTION_VALUE)
        } else if (!0 !== a)
            throw new AxiosError("Unknown option " + r,AxiosError.ERR_BAD_OPTION)
    }
}
validators$1.transitional = function(e, t, a) {
    return (s, i, r) => {
        if (!1 === e)
            throw new AxiosError(function(e, t) {
                return "[Axios v" + VERSION + "] Transitional option '" + e + "'" + t + (a ? ". " + a : "")
            }(i, " has been removed" + (t ? " in " + t : "")),AxiosError.ERR_DEPRECATED);
        return t && !deprecatedWarnings[i] && (deprecatedWarnings[i] = !0),
        !e || e(s, i, r)
    }
}
    ,
    validators$1.spelling = function(e) {
        return (e, t) => !0
    }
;
const validator = {
    assertOptions: assertOptions,
    validators: validators$1
}
    , validators = validator.validators;
class Axios {
    constructor(e) {
        this.defaults = e,
            this.interceptors = {
                request: new InterceptorManager$1,
                response: new InterceptorManager$1
            }
    }
    async request(e, t) {
        try {
            return await this._request(e, t)
        } catch (a) {
            if (a instanceof Error) {
                let e = {};
                Error.captureStackTrace ? Error.captureStackTrace(e) : e = new Error;
                const t = e.stack ? e.stack.replace(/^.+\n/, "") : "";
                try {
                    a.stack ? t && !String(a.stack).endsWith(t.replace(/^.+\n.+\n/, "")) && (a.stack += "\n" + t) : a.stack = t
                } catch (s) {}
            }
            throw a
        }
    }
    _request(e, t) {
        "string" == typeof e ? (t = t || {}).url = e : t = e || {},
            t = mergeConfig(this.defaults, t);
        const {transitional: a, paramsSerializer: s, headers: i} = t;
        void 0 !== a && validator.assertOptions(a, {
            silentJSONParsing: validators.transitional(validators.boolean),
            forcedJSONParsing: validators.transitional(validators.boolean),
            clarifyTimeoutError: validators.transitional(validators.boolean)
        }, !1),
        null != s && (utils$1.isFunction(s) ? t.paramsSerializer = {
            serialize: s
        } : validator.assertOptions(s, {
            encode: validators.function,
            serialize: validators.function
        }, !0)),
        void 0 !== t.allowAbsoluteUrls || (void 0 !== this.defaults.allowAbsoluteUrls ? t.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls : t.allowAbsoluteUrls = !0),
            validator.assertOptions(t, {
                baseUrl: validators.spelling("baseURL"),
                withXsrfToken: validators.spelling("withXSRFToken")
            }, !0),
            t.method = (t.method || this.defaults.method || "get").toLowerCase();
        let r = i && utils$1.merge(i.common, i[t.method]);
        i && utils$1.forEach(["delete", "get", "head", "post", "put", "patch", "common"], (e => {
                delete i[e]
            }
        )),
            t.headers = AxiosHeaders$1.concat(r, i);
        const o = [];
        let n = !0;
        this.interceptors.request.forEach((function(e) {
                "function" == typeof e.runWhen && !1 === e.runWhen(t) || (n = n && e.synchronous,
                    o.unshift(e.fulfilled, e.rejected))
            }
        ));
        const l = [];
        let c;
        this.interceptors.response.forEach((function(e) {
                l.push(e.fulfilled, e.rejected)
            }
        ));
        let d, h = 0;
        if (!n) {
            const e = [dispatchRequest.bind(this), void 0];
            for (e.unshift.apply(e, o),
                     e.push.apply(e, l),
                     d = e.length,
                     c = Promise.resolve(t); h < d; )
                c = c.then(e[h++], e[h++]);
            return c
        }
        d = o.length;
        let p = t;
        for (h = 0; h < d; ) {
            const e = o[h++]
                , t = o[h++];
            try {
                p = e(p)
            } catch (u) {
                t.call(this, u);
                break
            }
        }
        try {
            c = dispatchRequest.call(this, p)
        } catch (u) {
            return Promise.reject(u)
        }
        for (h = 0,
                 d = l.length; h < d; )
            c = c.then(l[h++], l[h++]);
        return c
    }
    getUri(e) {
        return buildURL(buildFullPath((e = mergeConfig(this.defaults, e)).baseURL, e.url, e.allowAbsoluteUrls), e.params, e.paramsSerializer)
    }
}
utils$1.forEach(["delete", "get", "head", "options"], (function(e) {
        Axios.prototype[e] = function(t, a) {
            return this.request(mergeConfig(a || {}, {
                method: e,
                url: t,
                data: (a || {}).data
            }))
        }
    }
)),
    utils$1.forEach(["post", "put", "patch"], (function(e) {
            function t(t) {
                return function(a, s, i) {
                    return this.request(mergeConfig(i || {}, {
                        method: e,
                        headers: t ? {
                            "Content-Type": "multipart/form-data"
                        } : {},
                        url: a,
                        data: s
                    }))
                }
            }
            Axios.prototype[e] = t(),
                Axios.prototype[e + "Form"] = t(!0)
        }
    ));
const Axios$1 = Axios;
class CancelToken {
    constructor(e) {
        if ("function" != typeof e)
            throw new TypeError("executor must be a function.");
        let t;
        this.promise = new Promise((function(e) {
                t = e
            }
        ));
        const a = this;
        this.promise.then((e => {
                if (!a._listeners)
                    return;
                let t = a._listeners.length;
                for (; t-- > 0; )
                    a._listeners[t](e);
                a._listeners = null
            }
        )),
            this.promise.then = e => {
                let t;
                const s = new Promise((e => {
                        a.subscribe(e),
                            t = e
                    }
                )).then(e);
                return s.cancel = function() {
                    a.unsubscribe(t)
                }
                    ,
                    s
            }
            ,
            e((function(e, s, i) {
                    a.reason || (a.reason = new CanceledError(e,s,i),
                        t(a.reason))
                }
            ))
    }
    throwIfRequested() {
        if (this.reason)
            throw this.reason
    }
    subscribe(e) {
        this.reason ? e(this.reason) : this._listeners ? this._listeners.push(e) : this._listeners = [e]
    }
    unsubscribe(e) {
        if (!this._listeners)
            return;
        const t = this._listeners.indexOf(e);
        -1 !== t && this._listeners.splice(t, 1)
    }
    toAbortSignal() {
        const e = new AbortController
            , t = t => {
                e.abort(t)
            }
        ;
        return this.subscribe(t),
            e.signal.unsubscribe = () => this.unsubscribe(t),
            e.signal
    }
    static source() {
        let e;
        return {
            token: new CancelToken((function(t) {
                    e = t
                }
            )),
            cancel: e
        }
    }
}
const CancelToken$1 = CancelToken;
function spread(e) {
    return function(t) {
        return e.apply(null, t)
    }
}
function isAxiosError(e) {
    return utils$1.isObject(e) && !0 === e.isAxiosError
}
const HttpStatusCode = {
    Continue: 100,
    SwitchingProtocols: 101,
    Processing: 102,
    EarlyHints: 103,
    Ok: 200,
    Created: 201,
    Accepted: 202,
    NonAuthoritativeInformation: 203,
    NoContent: 204,
    ResetContent: 205,
    PartialContent: 206,
    MultiStatus: 207,
    AlreadyReported: 208,
    ImUsed: 226,
    MultipleChoices: 300,
    MovedPermanently: 301,
    Found: 302,
    SeeOther: 303,
    NotModified: 304,
    UseProxy: 305,
    Unused: 306,
    TemporaryRedirect: 307,
    PermanentRedirect: 308,
    BadRequest: 400,
    Unauthorized: 401,
    PaymentRequired: 402,
    Forbidden: 403,
    NotFound: 404,
    MethodNotAllowed: 405,
    NotAcceptable: 406,
    ProxyAuthenticationRequired: 407,
    RequestTimeout: 408,
    Conflict: 409,
    Gone: 410,
    LengthRequired: 411,
    PreconditionFailed: 412,
    PayloadTooLarge: 413,
    UriTooLong: 414,
    UnsupportedMediaType: 415,
    RangeNotSatisfiable: 416,
    ExpectationFailed: 417,
    ImATeapot: 418,
    MisdirectedRequest: 421,
    UnprocessableEntity: 422,
    Locked: 423,
    FailedDependency: 424,
    TooEarly: 425,
    UpgradeRequired: 426,
    PreconditionRequired: 428,
    TooManyRequests: 429,
    RequestHeaderFieldsTooLarge: 431,
    UnavailableForLegalReasons: 451,
    InternalServerError: 500,
    NotImplemented: 501,
    BadGateway: 502,
    ServiceUnavailable: 503,
    GatewayTimeout: 504,
    HttpVersionNotSupported: 505,
    VariantAlsoNegotiates: 506,
    InsufficientStorage: 507,
    LoopDetected: 508,
    NotExtended: 510,
    NetworkAuthenticationRequired: 511
};
Object.entries(HttpStatusCode).forEach(( ([e,t]) => {
        HttpStatusCode[t] = e
    }
));
const HttpStatusCode$1 = HttpStatusCode;
function createInstance(e) {
    const t = new Axios$1(e)
        , a = bind(Axios$1.prototype.request, t);
    return utils$1.extend(a, Axios$1.prototype, t, {
        allOwnKeys: !0
    }),
        utils$1.extend(a, t, null, {
            allOwnKeys: !0
        }),
        a.create = function(t) {
            return createInstance(mergeConfig(e, t))
        }
        ,
        a
}
const axios = createInstance(defaults$1);
axios.Axios = Axios$1,
    axios.CanceledError = CanceledError,
    axios.CancelToken = CancelToken$1,
    axios.isCancel = isCancel,
    axios.VERSION = VERSION,
    axios.toFormData = toFormData,
    axios.AxiosError = AxiosError,
    axios.Cancel = axios.CanceledError,
    axios.all = function(e) {
        return Promise.all(e)
    }
    ,
    axios.spread = spread,
    axios.isAxiosError = isAxiosError,
    axios.mergeConfig = mergeConfig,
    axios.AxiosHeaders = AxiosHeaders$1,
    axios.formToJSON = e => formDataToJSON(utils$1.isHTMLForm(e) ? new FormData(e) : e),
    axios.getAdapter = adapters.getAdapter,
    axios.HttpStatusCode = HttpStatusCode$1,
    axios.default = axios;
const axios$1 = axios
    , Coin_vue_vue_type_style_index_0_scoped_b078ba53_lang = ""
    , _sfc_main$F = {
    __name: "Coin",
    props: {
        size: {
            type: String,
            default: "medium"
        }
    },
    setup: e => (t, a) => (openBlock(),
        createElementBlock("div", {
            class: normalizeClass(["coin", [e.size]])
        }, a[0] || (a[0] = [createBaseVNode("img", {
            class: "coin-image",
            src: "/images/actions/ton.svg",
            alt: "Coin"
        }, null, -1)]), 2))
}
    , Coin = _export_sfc$1(_sfc_main$F, [["__scopeId", "data-v-b078ba53"]])
    , CaseWin_vue_vue_type_style_index_0_scoped_5038a911_lang = ""
    , _hoisted_1$C = {
    key: 0,
    class: "unlucky-container"
}
    , _hoisted_2$z = {
    key: 1,
    class: "prize-showcase"
}
    , _hoisted_3$v = {
    class: "lights-container"
}
    , _hoisted_4$t = ["src"]
    , _hoisted_5$t = {
    key: 0,
    class: "prize-placeholder"
}
    , _hoisted_6$r = ["src"]
    , _hoisted_7$r = {
    key: 1,
    class: "prize-image error-image",
    src: "/images/placeholder.png",
    alt: "Prize Item Placeholder"
}
    , _hoisted_8$o = {
    class: "hint"
}
    , _hoisted_9$n = {
    class: "coin-wrapper"
}
    , _hoisted_10$m = {
    class: "price"
}
    , _hoisted_11$l = {
    key: 2,
    class: "coins-container"
}
    , _hoisted_12$l = {
    key: 2,
    class: "prizes-row"
}
    , _hoisted_13$k = ["src", "onLoad", "onError"]
    , _hoisted_14$j = {
    class: "hint"
}
    , _hoisted_15$h = {
    class: "coin-wrapper"
}
    , _hoisted_16$f = {
    class: "price"
}
    , _hoisted_17$d = {
    key: 0,
    class: "coins-container multi-coins"
}
    , _hoisted_18$c = {
    key: 3,
    class: "prizes-row"
}
    , _hoisted_19$b = ["src", "onLoad", "onError"]
    , _hoisted_20$9 = {
    class: "hint"
}
    , _hoisted_21$9 = {
    class: "coin-wrapper"
}
    , _hoisted_22$9 = {
    class: "price"
}
    , _hoisted_23$6 = {
    key: 0,
    class: "coins-container multi-coins"
}
    , _sfc_main$E = {
    __name: "CaseWin",
    props: {
        prize: {
            type: [Object, Array],
            default: () => ({
                image: "/images/placeholder.png",
                price: "0"
            })
        },
        caseNumber: {
            type: Number,
            default: 0
        },
        isBlackCase: {
            type: Boolean,
            default: !1
        }
    },
    setup(e, {expose: t}) {
        const a = e
            , s = computed(( () => Array.isArray(a.prize) && a.prize.length > 1))
            , i = computed(( () => Array.isArray(a.prize) ? a.prize.length : 1))
            , r = ref(!1)
            , o = ref(!1)
            , n = ref([])
            , l = ref({})
            , c = ref({})
            , d = computed(( () => {
                var e;
                return Array.isArray(a.prize) ? a.prize.reduce(( (e, t) => e + (parseFloat(t.price) || 0)), 0).toFixed(2) : (null == (e = a.prize) ? void 0 : e.price) || "0"
            }
        ));
        watch(( () => a.prize), (e => {
                e && (l.value = {},
                    c.value = {})
            }
        ), {
            immediate: !0
        });
        const h = e => {
                l.value[e] = !0
            }
            , p = (e, t) => {
                c.value[e] = !0
            }
        ;
        t({
            animateKeepIt: () => {
                r.value = !0,
                    setTimeout(( () => {
                            r.value = !1
                        }
                    ), 1500)
            }
            ,
            animateQuickSell: () => {
                o.value = !0;
                const e = parseFloat(d.value) / 10
                    , t = Math.floor(10 + Math.min(e, 15));
                n.value = Array(t).fill().map(( (e, t) => ({
                    id: t,
                    left: Math.floor(80 * Math.random()) + 10 + "%",
                    delay: .5 * Math.random(),
                    size: Math.floor(10 * Math.random()) + 16 + "px",
                    speed: .5 * Math.random() + 1.2 + "s"
                }))),
                    setTimeout(( () => {
                            o.value = !1,
                                n.value = []
                        }
                    ), 1500)
            }
        });
        const u = computed(( () => 22 === a.caseNumber && (!(!Array.isArray(a.prize) || 0 !== a.prize.length) || (!a.prize || a.prize && 0 === Object.keys(a.prize).length || a.prize && void 0 === a.prize.originalData))))
            , m = e => e && e.image ? e.image : "/images/placeholder.png"
            , f = e => e && e.price ? e.price : "0";
        return (t, d) => (openBlock(),
            createElementBlock("div", {
                class: normalizeClass(["win-container", {
                    "multi-prizes": s.value
                }])
            }, [u.value ? (openBlock(),
                createElementBlock("div", _hoisted_1$C, d[2] || (d[2] = [createBaseVNode("img", {
                    class: "unlucky-image",
                    src: "/images/effects/unlucky.png",
                    alt: "Unlucky"
                }, null, -1), createBaseVNode("div", {
                    class: "unlucky-text"
                }, [createTextVNode(" Unluck "), createBaseVNode("br"), createTextVNode(" You'll definitely get lucky next time, try again ")], -1)]))) : s.value ? 2 === i.value ? (openBlock(),
                createElementBlock("div", _hoisted_12$l, [(openBlock(!0),
                    createElementBlock(Fragment, null, renderList(e.prize, ( (e, t) => (openBlock(),
                        createElementBlock("div", {
                            key: t,
                            class: normalizeClass(["prize-tab", {
                                "black-backdrop-double": a.isBlackCase
                            }])
                        }, [createBaseVNode("img", {
                            class: "stars-bg",
                            src: "/images/effects/stars.png",
                            alt: "Stars",
                            style: normalizeStyle({
                                animationDelay: .5 * t + "s"
                            })
                        }, null, 4), createBaseVNode("img", {
                            class: "prize-item-image",
                            src: m(e),
                            alt: "Prize Item",
                            onLoad: e => h(t),
                            onError: a => p(t, m(e))
                        }, null, 40, _hoisted_13$k), createBaseVNode("div", _hoisted_14$j, [createBaseVNode("div", _hoisted_15$h, [createVNode(Coin, {
                            size: "small"
                        })]), createBaseVNode("div", _hoisted_16$f, toDisplayString(f(e)), 1)])], 2)))), 128)), o.value ? (openBlock(),
                    createElementBlock("div", _hoisted_17$d, [(openBlock(!0),
                        createElementBlock(Fragment, null, renderList(n.value, (e => (openBlock(),
                            createElementBlock("div", {
                                key: e.id,
                                class: "flying-coin",
                                style: normalizeStyle({
                                    left: e.left,
                                    animationDelay: e.delay + "s",
                                    width: e.size,
                                    height: e.size,
                                    animationDuration: e.speed
                                })
                            }, [createVNode(Coin, {
                                size: "small"
                            })], 4)))), 128))])) : createCommentVNode("", !0)])) : 3 === i.value ? (openBlock(),
                createElementBlock("div", _hoisted_18$c, [(openBlock(!0),
                    createElementBlock(Fragment, null, renderList(e.prize, ( (e, t) => (openBlock(),
                        createElementBlock("div", {
                            key: t,
                            class: normalizeClass(["prize-tab", {
                                "black-backdrop-triple": a.isBlackCase
                            }])
                        }, [createBaseVNode("img", {
                            class: "stars-bg",
                            src: "/images/effects/stars.png",
                            alt: "Stars",
                            style: normalizeStyle({
                                animationDelay: .5 * t + "s"
                            })
                        }, null, 4), createBaseVNode("img", {
                            class: "prize-item-image",
                            src: m(e),
                            alt: "Prize Item",
                            onLoad: e => h(t),
                            onError: a => p(t, m(e))
                        }, null, 40, _hoisted_19$b), createBaseVNode("div", _hoisted_20$9, [createBaseVNode("div", _hoisted_21$9, [createVNode(Coin, {
                            size: "small"
                        })]), createBaseVNode("div", _hoisted_22$9, toDisplayString(f(e)), 1)])], 2)))), 128)), o.value ? (openBlock(),
                    createElementBlock("div", _hoisted_23$6, [(openBlock(!0),
                        createElementBlock(Fragment, null, renderList(n.value, (e => (openBlock(),
                            createElementBlock("div", {
                                key: e.id,
                                class: "flying-coin",
                                style: normalizeStyle({
                                    left: e.left,
                                    animationDelay: e.delay + "s",
                                    width: e.size,
                                    height: e.size,
                                    animationDuration: e.speed
                                })
                            }, [createVNode(Coin, {
                                size: "small"
                            })], 4)))), 128))])) : createCommentVNode("", !0)])) : createCommentVNode("", !0) : (openBlock(),
                createElementBlock("div", _hoisted_2$z, [createBaseVNode("div", _hoisted_3$v, [createBaseVNode("img", {
                    class: normalizeClass(["lights", {
                        "black-lights": a.isBlackCase
                    }]),
                    src: a.isBlackCase ? "/images/effects/black_backdrop.svg" : "/images/effects/lights.png",
                    alt: "Background lights"
                }, null, 10, _hoisted_4$t), d[3] || (d[3] = createBaseVNode("img", {
                    class: "stars stars-animation",
                    src: "/images/effects/stars.png",
                    alt: "Stars"
                }, null, -1))]), l.value[0] || c.value[0] ? createCommentVNode("", !0) : (openBlock(),
                    createElementBlock("div", _hoisted_5$t, d[4] || (d[4] = [createBaseVNode("div", {
                        class: "loading-spinner"
                    }, null, -1)]))), createBaseVNode("img", {
                    class: normalizeClass(["prize-image", {
                        "keep-it-animation": r.value,
                        "quick-sell-animation": o.value,
                        loaded: l.value[0],
                        hidden: !l.value[0] && !c.value[0]
                    }]),
                    src: m(e.prize),
                    alt: "Prize Item",
                    onLoad: d[0] || (d[0] = e => h(0)),
                    onError: d[1] || (d[1] = t => p(0, m(e.prize)))
                }, null, 42, _hoisted_6$r), c.value[0] ? (openBlock(),
                    createElementBlock("img", _hoisted_7$r)) : createCommentVNode("", !0), createBaseVNode("div", _hoisted_8$o, [createBaseVNode("div", _hoisted_9$n, [createVNode(Coin, {
                    size: "small"
                })]), createBaseVNode("div", _hoisted_10$m, toDisplayString(f(e.prize)), 1)]), o.value ? (openBlock(),
                    createElementBlock("div", _hoisted_11$l, [(openBlock(!0),
                        createElementBlock(Fragment, null, renderList(n.value, (e => (openBlock(),
                            createElementBlock("div", {
                                key: e.id,
                                class: "flying-coin",
                                style: normalizeStyle({
                                    left: e.left,
                                    animationDelay: e.delay + "s",
                                    width: e.size,
                                    height: e.size,
                                    animationDuration: e.speed
                                })
                            }, [createVNode(Coin, {
                                size: "small"
                            })], 4)))), 128))])) : createCommentVNode("", !0)]))], 2))
    }
}
    , CaseWin = _export_sfc$1(_sfc_main$E, [["__scopeId", "data-v-5038a911"]])
    , CaseRoulette_vue_vue_type_style_index_0_scoped_bdd8d484_lang = ""
    , _hoisted_1$B = {
    class: "roulette-container"
}
    , _hoisted_2$y = ["src"]
    , _hoisted_3$u = {
    class: "hint"
}
    , _hoisted_4$s = {
    class: "coin-wrapper"
}
    , _hoisted_5$s = {
    class: "price"
}
    , _hoisted_6$q = {
    key: 1,
    class: "tab-item placeholder"
}
    , _hoisted_7$q = {
    key: 0,
    class: "error-text"
}
    , ITEM_WIDTH = 130
    , _sfc_main$D = {
    __name: "CaseRoulette",
    props: {
        items: {
            type: Array,
            required: !0,
            default: () => []
        },
        winningItemId: {
            type: Number,
            default: null
        },
        animationDuration: {
            type: Number,
            default: 7
        },
        isSpinning: {
            type: Boolean,
            default: !1
        },
        isBlackCase: {
            type: Boolean,
            default: !1
        }
    },
    emits: ["spinComplete"],
    setup(e, {expose: t, emit: a}) {
        const s = e
            , i = a
            , r = ref(0)
            , o = ref(!1)
            , n = ref(!1)
            , l = ref(!1)
            , c = ref(null)
            , d = ref(null);
        let h = null
            , p = null;
        const u = computed(( () => {
                    if (!s.items || !Array.isArray(s.items) || 0 === s.items.length)
                        return [];
                    const e = [];
                    for (let t = 0; t < 10; t++)
                        e.push(...s.items);
                    return e
                }
            ))
            , m = computed(( () => s.winningItemId && s.items && Array.isArray(s.items) && 0 !== s.items.length && s.items.find((e => e && e.id === s.winningItemId)) || null))
            , f = () => {
                o.value || (v(),
                    u.value && 0 !== u.value.length ? (o.value = !0,
                        l.value = !1,
                        r.value = 20,
                        n.value = !0,
                        h = setTimeout(( () => {
                                o.value && (n.value = !1,
                                    o.value = !1,
                                    i("spinComplete", m.value))
                            }
                        ), 1e3 * (s.animationDuration + 2)),
                        setTimeout(( () => {
                                d.value && d.value.offsetWidth;
                                const e = ( () => {
                                        if (!m.value)
                                            return Math.floor(200 * Math.random()) + 100;
                                        if (!u.value || 0 === u.value.length)
                                            return 100;
                                        const e = [];
                                        return u.value.forEach(( (t, a) => {
                                                t && t.id === s.winningItemId && e.push(a)
                                            }
                                        )),
                                            0 === e.length ? 100 : (e.find((e => e > 50)) || e[0]) * ITEM_WIDTH + 30 + (Math.floor(70 * Math.random()) + 1)
                                    }
                                )();
                                r.value = e;
                                const t = Date.now()
                                    , a = () => {
                                        const e = (Date.now() - t) / 1e3;
                                        if (e > s.animationDuration && n.value)
                                            return n.value = !1,
                                                o.value = !1,
                                                void i("spinComplete", m.value);
                                        o.value && e < s.animationDuration + 2 && (p = setTimeout(a, 1e3))
                                    }
                                ;
                                p = setTimeout(a, 1e3),
                                    setTimeout(( () => {
                                            n.value = !1,
                                                o.value = !1,
                                                setTimeout(( () => {
                                                        i("spinComplete", m.value),
                                                            v()
                                                    }
                                                ), 300)
                                        }
                                    ), 1e3 * s.animationDuration)
                            }
                        ), 300)) : i("spinComplete", null))
            }
            , v = () => {
                h && (clearTimeout(h),
                    h = null),
                p && (clearTimeout(p),
                    p = null)
            }
        ;
        return watch(( () => s.isSpinning), (e => {
                e && !o.value && f()
            }
        ), {
            immediate: !1
        }),
            onBeforeUnmount(( () => {
                    v()
                }
            )),
            t({
                startSpin: f,
                resetRoulette: () => {
                    v(),
                        o.value = !1,
                        n.value = !1,
                        r.value = 0,
                        l.value = !1
                }
                ,
                clearAllTimeouts: v
            }),
            (t, a) => (openBlock(),
                createElementBlock("div", {
                    class: "roulette-wrapper",
                    ref_key: "rouletteContainer",
                    ref: c
                }, [createBaseVNode("div", _hoisted_1$B, [a[1] || (a[1] = createBaseVNode("div", {
                    class: "bg"
                }, null, -1)), createBaseVNode("div", {
                    class: "items-container",
                    ref_key: "itemsContainer",
                    ref: d,
                    style: normalizeStyle({
                        transform: `translate(-50%, -50%) translateX(-${r.value}px)`,
                        transitionProperty: n.value ? "transform" : "none",
                        transitionDuration: `${e.animationDuration}s`,
                        transitionTimingFunction: "cubic-bezier(0.05, 0.1, 0.3, 1.0)"
                    })
                }, [u.value && u.value.length > 0 ? (openBlock(!0),
                    createElementBlock(Fragment, {
                        key: 0
                    }, renderList(u.value, ( (e, t) => (openBlock(),
                        createElementBlock("div", {
                            key: `item-${e && e.id ? e.id : t}-${t}`,
                            class: normalizeClass(["tab-item", [{
                                black_backdrop: s.isBlackCase
                            }, e && e.color ? `color${e.color}` : ""]])
                        }, [createBaseVNode("img", {
                            class: "item-image",
                            src: e && e.image ? e.image : "/images/placeholder.png",
                            alt: "Item",
                            loading: "lazy"
                        }, null, 8, _hoisted_2$y), createBaseVNode("div", _hoisted_3$u, [createBaseVNode("div", _hoisted_4$s, [createVNode(Coin, {
                            size: "small"
                        })]), createBaseVNode("div", _hoisted_5$s, toDisplayString(e && e.price ? e.price : "0"), 1)])], 2)))), 128)) : (openBlock(),
                    createElementBlock("div", _hoisted_6$q, [a[0] || (a[0] = createBaseVNode("div", {
                        class: "loading-placeholder"
                    }, null, -1)), l.value ? (openBlock(),
                        createElementBlock("div", _hoisted_7$q, "Loading error")) : createCommentVNode("", !0)]))], 4), a[2] || (a[2] = createStaticVNode('<div class="shadow-l" data-v-bdd8d484></div><div class="shadow-r" data-v-bdd8d484></div><div class="pointers-container" data-v-bdd8d484><img src="/images/effects/Union.svg" class="union-top" alt="" data-v-bdd8d484><img src="/images/effects/Union.svg" class="union-bottom" alt="" data-v-bdd8d484></div>', 3))])], 512))
    }
}
    , CaseRoulette = _export_sfc$1(_sfc_main$D, [["__scopeId", "data-v-bdd8d484"]])
    , CaseModal_vue_vue_type_style_index_0_scoped_ef0a99dc_lang = ""
    , _hoisted_1$A = {
    class: "modal"
}
    , _hoisted_2$x = {
    class: "case-1"
}
    , _hoisted_3$t = {
    key: 0,
    class: "api-error-container"
}
    , _hoisted_4$r = {
    class: "api-error"
}
    , _hoisted_5$r = {
    key: 1,
    class: "loading-container"
}
    , _hoisted_6$p = {
    class: "loading-text"
}
    , _hoisted_7$p = {
    class: "action-buttons"
}
    , _hoisted_8$n = ["disabled"]
    , _hoisted_9$m = ["disabled"]
    , _hoisted_10$l = {
    class: "button-label"
}
    , _hoisted_11$k = ["disabled"]
    , _hoisted_12$k = {
    class: "button-label"
}
    , _hoisted_13$j = {
    class: "price-tag"
}
    , _hoisted_14$i = {
    class: "price-value"
}
    , _hoisted_15$g = {
    class: "coin-small"
}
    , _hoisted_16$e = {
    key: 0,
    class: "free-deposit-case-container"
}
    , _hoisted_17$c = {
    key: 0,
    class: "insufficient-funds-container"
}
    , _hoisted_18$b = {
    key: 1,
    class: "frame-2087329029"
}
    , _hoisted_19$a = {
    class: "frame-2087329028"
}
    , _hoisted_20$8 = {
    class: "_12"
}
    , _hoisted_21$8 = {
    class: "_12-span2"
}
    , _hoisted_22$8 = {
    class: "button"
}
    , _hoisted_23$5 = {
    class: "frame-2087328873"
}
    , _hoisted_24$4 = {
    class: "label"
}
    , _hoisted_25$4 = {
    class: "coin-small"
}
    , _hoisted_26$4 = {
    key: 2,
    class: "frame-2087329031"
}
    , _hoisted_27$4 = {
    class: "button-cooldown"
}
    , _hoisted_28$4 = {
    class: "label-cooldown"
}
    , _hoisted_29$4 = {
    key: 3,
    class: "action-buttons",
    style: {
        "margin-top": "20px"
    }
}
    , _hoisted_30$4 = ["disabled"]
    , _hoisted_31$4 = {
    class: "price-tag"
}
    , _hoisted_32$4 = {
    class: "coin-small"
}
    , _hoisted_33$3 = ["disabled"]
    , _hoisted_34$2 = {
    class: "price-tag"
}
    , _hoisted_35$2 = {
    class: "coin-small"
}
    , _hoisted_36$2 = {
    key: 1,
    class: "free-case-container"
}
    , _hoisted_37$2 = {
    key: 0,
    class: "promo-error-container"
}
    , _hoisted_38$2 = {
    class: "promo-error"
}
    , _hoisted_39$2 = {
    key: 1,
    class: "checking-promo-container"
}
    , _hoisted_40$2 = {
    key: 2,
    class: "free-case-info"
}
    , _hoisted_41$2 = {
    key: 3,
    class: "insufficient-funds-container"
}
    , _hoisted_42$2 = {
    key: 4,
    class: "free-case-form"
}
    , _hoisted_43$2 = {
    class: "promo-input-container"
}
    , _hoisted_44$2 = ["disabled"]
    , _hoisted_45$2 = ["disabled"]
    , _hoisted_46$1 = {
    class: "price-tag"
}
    , _hoisted_47 = {
    class: "coin-small"
}
    , _hoisted_48 = {
    key: 5,
    class: "free-case-help"
}
    , _hoisted_49 = {
    key: 2,
    class: "insufficient-funds-container"
}
    , _hoisted_50 = {
    key: 3,
    class: "insufficient-funds-container"
}
    , _hoisted_51 = {
    key: 0,
    class: "multiplier-selector"
}
    , _hoisted_52 = {
    class: "action-buttons",
    style: {
        marginTop: "0",
        transition: "margin-top 0.3s cubic-bezier(0.23, 1, 0.32, 1)"
    }
}
    , _hoisted_53 = ["disabled"]
    , _hoisted_54 = {
    class: "price-tag"
}
    , _hoisted_55 = {
    class: "price-value"
}
    , _hoisted_56 = {
    class: "coin-small"
}
    , _hoisted_57 = ["disabled"]
    , _hoisted_58 = {
    class: "price-tag"
}
    , _hoisted_59 = {
    class: "price-value"
}
    , _hoisted_60 = {
    class: "coin-small"
}
    , _hoisted_61 = {
    key: 4,
    class: "prizes-section"
}
    , _hoisted_62 = {
    class: "prizes-grid"
}
    , _hoisted_63 = ["src"]
    , _hoisted_64 = {
    class: "hint prize-hint"
}
    , _hoisted_65 = {
    class: "coin-wrapper"
}
    , _hoisted_66 = {
    class: "price"
}
    , _sfc_main$C = {
    __name: "CaseModal",
    props: {
        isOpen: {
            type: Boolean,
            default: !1
        },
        caseNumber: {
            type: Number,
            default: 1
        }
    },
    emits: ["close"],
    setup(e, {emit: t}) {
        const a = e
            , s = t
            , i = useRouter()
            , r = inject("userStore")
            , o = ref(1)
            , n = ref(!1);
        let l = ref(null);
        const c = ref(!1);
        let d = null
            , h = null;
        const p = ref("")
            , u = ref(0)
            , m = ref("")
            , f = ref(!1)
            , v = ref(null)
            , g = ref(null)
            , y = ref(0);
        onMounted(( () => {
                const e = localStorage.getItem("demoopening");
                n.value = "true" === e
            }
        )),
            onBeforeUnmount(( () => {
                    window.turnstile && l.value && window.turnstile.remove(l.value),
                    g.value && (clearInterval(g.value),
                        g.value = null)
                }
            ));
        const _ = computed(( () => 22 === a.caseNumber))
            , b = computed(( () => 22 !== a.caseNumber && n.value))
            , k = computed(( () => !!b.value || r.canAfford(2 * u.value)))
            , w = computed(( () => !!b.value || r.canAfford(3 * u.value)))
            , B = computed(( () => !!b.value || r.canAfford(u.value)))
            , C = computed(( () => 0 === u.value))
            , x = computed(( () => C.value && null !== v.value))
            , S = computed(( () => !v.value || v.value.pay_user >= v.value.need_pay))
            , E = computed(( () => !!v.value && (v.value.count_open > 0 && y.value > 0)))
            , V = computed(( () => {
                const e = Math.max(0, Math.floor(y.value))
                    , t = Math.floor(e / 3600)
                    , a = Math.floor(e % 3600 / 60)
                    , s = e % 60;
                return `${t.toString().padStart(2, "0")}:${a.toString().padStart(2, "0")}:${s.toString().padStart(2, "0")}`
            }
        ))
            , N = ref("")
            , P = ref("")
            , A = ref(!1)
            , $ = ref(!1)
            , T = ref(!1)
            , M = ref(!1)
            , D = ref(null)
            , I = ref(7)
            , F = ref(!1)
            , L = ref(!1)
            , R = ref(!1)
            , O = ref(null)
            , z = ref(!1)
            , G = ref([])
            , j = ref([])
            , H = ref([])
            , U = ref([])
            , W = ref(null)
            , q = ref(1)
            , J = ref({
            1: [],
            2: [],
            3: []
        })
            , Y = computed(( () => _.value ? 1 : o.value))
            , K = ref([])
            , X = ref(!0)
            , Z = computed(( () => U.value.length > 0 && U.value.every((e => e))));
        watch(( () => o.value), ( (e, t) => {
                var a;
                q.value = t || 1;
                const s = _.value ? 1 : e;
                H.value = new Array(s).fill(!1),
                    U.value = new Array(s).fill(!1),
                    G.value = [];
                const i = [];
                for (let r = 0; r < s; r++)
                    if (r < ((null == (a = j.value) ? void 0 : a.length) || 0))
                        i.push(j.value[r]);
                    else {
                        const t = _.value ? 1 : e;
                        i.push(J.value[t][r] || [])
                    }
                j.value = i
            }
        ), {
            immediate: !0
        }),
            watch(Z, (e => {
                    e && M.value && (M.value = !1,
                        T.value = !0)
                }
            ), {
                immediate: !0
            });
        const Q = e => {
                if (!e || !Array.isArray(e) || 0 === e.length)
                    return [];
                const t = [...e];
                for (let a = t.length - 1; a > 0; a--) {
                    const e = Math.floor(Math.random() * (a + 1) + .8 * Math.random());
                    [t[a],t[e]] = [t[e], t[a]]
                }
                return t
            }
            , ee = async e => {
                h && (clearTimeout(h),
                    h = null),
                    h = setTimeout(( () => {
                            X.value = !1,
                                O.value = "Timeout loading case data. Please try again.",
                                j.value = new Array(Y.value).fill().map(( (e, t) => Array(10).fill().map(( (e, a) => ({
                                    id: a + 1 + 1e3 * t,
                                    name: "Timeout Error",
                                    image: "/images/placeholder.png",
                                    price: "0"
                                })))))
                        }
                    ), 1e4),
                d && d.abort(),
                    d = new AbortController;
                const t = d.signal;
                X.value = !0,
                    O.value = null;
                try {
                    const a = (await axios$1.get(`/api/load_skins.php?id=${e}`, {
                        withCredentials: !0,
                        signal: t
                    })).data;
                    if (!(a && a.case && a.skins && Array.isArray(a.skins)))
                        throw new Error("Wrong answer from API, please reload the APP");
                    if (p.value = a.case.title || "Case",
                        u.value = a.case.price || 0,
                        m.value = a.case.image || "",
                        f.value = !0 === a.case.is_black,
                        a.free ? (v.value = a.free,
                        a.free.count_open > 0 && a.free.until_next_open > 0 && (y.value = a.free.until_next_open,
                        g.value && clearInterval(g.value),
                            g.value = setInterval(( () => {
                                    y.value > 0 ? y.value-- : (clearInterval(g.value),
                                        g.value = null)
                                }
                            ), 1e3))) : (v.value = null,
                            y.value = 0,
                        g.value && (clearInterval(g.value),
                            g.value = null)),
                    22 === e) {
                        const e = a.skins.filter((e => e && e.name && e.img && void 0 !== e.price));
                        K.value = e.map(( (e, t) => ({
                            id: t + 1,
                            name: e.name,
                            image: e.img,
                            price: e.price,
                            color: e.color,
                            originalData: e
                        })))
                    } else {
                        const e = a.skins.filter((e => e && e.name && e.img && e.price));
                        K.value = e.map(( (e, t) => ({
                            id: t + 1,
                            name: e.name,
                            image: e.img,
                            price: e.price,
                            color: e.color,
                            originalData: e
                        })))
                    }
                    if (0 === K.value.length)
                        throw new Error("Case is not available.");
                    ( () => {
                            if (K.value && 0 !== K.value.length) {
                                for (let e = 1; e <= 3; e++) {
                                    J.value[e] = new Array(e).fill().map(( () => []));
                                    const t = [];
                                    for (let a = 0; a < e; a++) {
                                        if (a < t.length) {
                                            J.value[e][a] = t[a];
                                            continue
                                        }
                                        let s = [];
                                        K.value.forEach((e => {
                                                const t = parseFloat(e.price) || 0;
                                                let i = 1;
                                                i = t < 10 ? 5 : t < 50 ? 3 : t < 100 ? 2 : 1;
                                                for (let r = 0; r < i; r++)
                                                    s.push({
                                                        id: s.length + 1 + 1e3 * a,
                                                        name: e.name,
                                                        image: e.image,
                                                        price: e.price,
                                                        color: e.color,
                                                        originalData: e.originalData
                                                    })
                                            }
                                        )),
                                            s = Q(s);
                                        const i = []
                                            , r = 50;
                                        for (; i.length < r; ) {
                                            const e = Math.floor(5 * Math.random()) + 3
                                                , t = Math.min(Math.floor(Math.random() * (s.length - e)), s.length - e - 1)
                                                , a = Math.max(0, t)
                                                , r = Math.min(e, s.length - a);
                                            r > 0 && s.slice(a, a + r).forEach((e => {
                                                    e && e.id && i.push(e)
                                                }
                                            )),
                                                s = s.length < 10 ? [...s, ...s] : Q(s)
                                        }
                                        J.value[e][a] = i,
                                            t[a] = i
                                    }
                                }
                                j.value = J.value[Y.value] || []
                            }
                        }
                    )()
                } catch (a) {
                    if ("AbortError" === a.name)
                        return;
                    O.value = a.message || "Failed to load case data. Please try again.",
                        j.value = new Array(Y.value).fill().map(( (e, t) => Array(10).fill().map(( (e, a) => ({
                            id: a + 1 + 1e3 * t,
                            name: "Error",
                            image: "/images/placeholder.png",
                            price: "0"
                        })))))
                } finally {
                    d && d.signal === t && (d = null),
                    h && (clearTimeout(h),
                        h = null),
                        X.value = !1,
                        c.value = !1
                }
            }
            , te = async (e, t=!1, a=1) => {
                var s, i;
                try {
                    if (z.value = !0,
                        O.value = null,
                        b.value) {
                        if (await new Promise((e => setTimeout(e, 300 + 700 * Math.random()))),
                        22 === e && Math.random() < .3)
                            return {
                                success: !0,
                                winningItems: [],
                                isUnlucky: !0
                            };
                        const t = ( (e=1) => {
                                if (!K.value || 0 === K.value.length)
                                    return [];
                                const t = [...K.value].sort(( (e, t) => parseFloat(t.price) - parseFloat(e.price)))
                                    , a = t.slice(0, 3)
                                    , s = t.filter((e => parseFloat(e.price) > u.value && !a.includes(e)))
                                    , i = t.filter((e => parseFloat(e.price) <= u.value))
                                    , r = [];
                                for (let o = 0; o < e; o++) {
                                    if (Math.random() < .4)
                                        if (Math.random() < .33 && a.length > 0) {
                                            const e = Math.floor(Math.random() * a.length);
                                            r.push({
                                                ...a[e]
                                            })
                                        } else if (s.length > 0) {
                                            const e = Math.floor(Math.random() * s.length);
                                            r.push({
                                                ...s[e]
                                            })
                                        } else {
                                            const e = Math.floor(Math.random() * t.length);
                                            r.push({
                                                ...t[e]
                                            })
                                        }
                                    else if (i.length > 0) {
                                        const e = Math.floor(Math.random() * i.length);
                                        r.push({
                                            ...i[e]
                                        })
                                    } else {
                                        const e = Math.floor(Math.random() * t.length);
                                        r.push({
                                            ...t[e]
                                        })
                                    }
                                    r[o].id = Date.now() + o
                                }
                                return r
                            }
                        )(a);
                        return {
                            success: !0,
                            winningItems: t.map((e => ({
                                id: e.id,
                                name: e.name,
                                img: e.image,
                                price: e.price,
                                originalData: e
                            }))),
                            winningItem: t[0] ? {
                                id: t[0].id,
                                name: t[0].name,
                                img: t[0].image,
                                price: t[0].price
                            } : null
                        }
                    }
                    const s = t ? `/api/open_case.php?q=${e}&type=1&num=${a}` : `/api/open_case.php?q=${e}&num=${a}`
                        , i = await axios$1.get(s, {
                        withCredentials: !0
                    });
                    return 22 === e && "good" === i.data.status && i.data.win && 0 === i.data.win.length ? {
                        success: !0,
                        winningItems: [],
                        isUnlucky: !0
                    } : "good" === i.data.status && i.data.win && i.data.win.length > 0 ? {
                        success: !0,
                        winningItems: i.data.win,
                        winningItem: i.data.win[0]
                    } : i.data.error ? (O.value = i.data.error,
                        {
                            success: !1,
                            error: i.data.error
                        }) : (O.value = "Something went wrong, please try again later.",
                        {
                            success: !1,
                            error: "Something went wrong, please try again later."
                        })
                } catch (r) {
                    const e = (null == (i = null == (s = r.response) ? void 0 : s.data) ? void 0 : i.error) || "An error occurred, please try again later.";
                    return O.value = e,
                        {
                            success: !1,
                            error: e
                        }
                } finally {
                    z.value = !1
                }
            }
        ;
        watch([ () => r.balance, () => u.value], ( () => {
                3 !== o.value || w.value ? 2 !== o.value || k.value || (o.value = 1) : o.value = k.value ? 2 : 1
            }
        )),
            watch(x, (e => {
                    e && (o.value = 1)
                }
            )),
            watch([ () => a.isOpen, () => a.caseNumber], ( ([e,t]) => {
                    const a = localStorage.getItem("demoopening");
                    n.value = "true" === a,
                        e && !c.value ? (c.value = !0,
                            le(),
                            o.value = 1,
                            setTimeout(( () => {
                                    ee(t)
                                }
                            ), 100)) : e || (d && (d.abort(),
                            d = null),
                            c.value = !1)
                }
            ), {
                immediate: !0
            });
        const ae = async () => {
                if (x.value && n.value)
                    O.value = "This case is not available in demo mode";
                else {
                    if (!b.value) {
                        if (!B.value && !C.value)
                            return;
                        if (x.value && !S.value)
                            return void (O.value = "Deposit requirement not met");
                        if (x.value && E.value)
                            return void (O.value = "This case is on cooldown. Please wait.");
                        if (!C.value && !r.canAfford(u.value * o.value))
                            return void (O.value = "Not enough funds for multiple cases")
                    }
                    if (!T.value && !M.value) {
                        b.value && await new Promise((e => setTimeout(e, 100)));
                        try {
                            if (!j.value.every((e => e && Array.isArray(e) && e.length > 0))) {
                                await ee(a.caseNumber);
                                if (j.value.some((e => !e || !Array.isArray(e) || 0 === e.length)))
                                    throw new Error("Problem with loading case...")
                            }
                            const e = await te(a.caseNumber, !0, o.value);
                            if (!e.success)
                                return;
                            const t = e.winningItems;
                            if (C.value || b.value || r.subtractFromBalance(u.value * o.value),
                            22 === a.caseNumber && e.isUnlucky)
                                return D.value = [],
                                    void (T.value = !0);
                            let s = [];
                            if (1 === o.value) {
                                const e = t[0]
                                    , a = K.value.find((t => t.name === e.name && t.price === e.price));
                                s = [{
                                    id: Date.now(),
                                    name: e.name || "Item",
                                    image: e.img || "/images/placeholder.png",
                                    price: e.price || "0",
                                    color: (null == a ? void 0 : a.color) || null,
                                    originalData: e
                                }]
                            } else
                                s = t.map(( (e, t) => {
                                        const a = K.value.find((t => t.name === e.name && t.price === e.price));
                                        return {
                                            id: Date.now() + t,
                                            name: e.name || "Item",
                                            image: e.img || "/images/placeholder.png",
                                            price: e.price || "0",
                                            color: (null == a ? void 0 : a.color) || null,
                                            originalData: e
                                        }
                                    }
                                ));
                            const i = s[0];
                            for (let a = 0; a < Y.value; a++) {
                                let e, t = JSON.parse(JSON.stringify(j.value[a]));
                                e = Array.isArray(s) && s.length > a ? s[a] : s[0] || i;
                                const r = 23;
                                if (r < t.length)
                                    t[r] = {
                                        ...e,
                                        id: e.id
                                    };
                                else {
                                    t[Math.floor(t.length / 2)] = {
                                        ...e,
                                        id: e.id
                                    }
                                }
                                j.value[a] = t
                            }
                            D.value = 1 === o.value ? s[0] : s,
                                R.value = t.some((e => !0 === e.is_balance)),
                                H.value = new Array(Y.value).fill(!0),
                                U.value = new Array(Y.value).fill(!1),
                                M.value = !0
                        } catch (e) {
                            O.value = e.message || "Failed to start the case opening. Please try again."
                        }
                    }
                }
            }
            , se = async () => {
                if (x.value && n.value)
                    O.value = "This case is not available in demo mode";
                else {
                    if (!b.value) {
                        if (!B.value)
                            return;
                        if (x.value && !S.value)
                            return void (O.value = "Deposit requirement not met");
                        if (x.value && E.value)
                            return void (O.value = "This case is on cooldown. Please wait.")
                    }
                    if (!T.value && !M.value) {
                        b.value && await new Promise((e => setTimeout(e, 100)));
                        try {
                            const e = await te(a.caseNumber, !1, o.value);
                            if (!e.success)
                                return;
                            const t = e.winningItems;
                            if (b.value || r.subtractFromBalance(u.value * o.value),
                            22 === a.caseNumber && e.isUnlucky)
                                return D.value = [],
                                    void (T.value = !0);
                            if (1 === o.value) {
                                const e = t[0]
                                    , a = K.value.find((t => t.name === e.name && t.price === e.price));
                                D.value = {
                                    id: Date.now(),
                                    name: e.name,
                                    image: e.img,
                                    price: e.price,
                                    color: (null == a ? void 0 : a.color) || null,
                                    originalData: e
                                }
                            } else
                                D.value = t.map((e => {
                                        const t = K.value.find((t => t.name === e.name && t.price === e.price));
                                        return {
                                            id: Date.now() + 1e3 * Math.random(),
                                            name: e.name,
                                            image: e.img,
                                            price: e.price,
                                            color: (null == t ? void 0 : t.color) || null,
                                            originalData: e
                                        }
                                    }
                                ));
                            R.value = t.some((e => !0 === e.is_balance)),
                                T.value = !0,
                            R.value && !b.value && setTimeout(( () => {
                                    let e = 0;
                                    Array.isArray(D.value) ? D.value.forEach((t => {
                                            t.originalData && !0 === t.originalData.is_balance && (e += parseFloat(t.price || 0))
                                        }
                                    )) : D.value && D.value.originalData && !0 === D.value.originalData.is_balance && (e = parseFloat(D.value.price || 0)),
                                    e > 0 && r.addToBalance(e)
                                }
                            ), 300)
                        } catch (e) {
                            O.value = "Failed to open the case. Please try again."
                        }
                    }
                }
            }
            , ie = async () => {
                var e, t;
                if (P.value = "",
                    A.value = !1,
                    !N.value.trim())
                    return P.value = "Please enter a secret code",
                        void (A.value = !0);
                if (N.value.trim().length < 3)
                    return P.value = "Invalid secret code",
                        void (A.value = !0);
                try {
                    z.value = !0,
                        $.value = !0;
                    const e = new Promise((e => {
                            if (!window.turnstile)
                                throw new Error("Security service is not available. Please try again later.");
                            l.value = window.turnstile.render("#cf-turnstile-container", {
                                sitekey: "0x4AAAAAABPa5QxbwE8MAEq1",
                                callback: t => {
                                    e(t)
                                }
                                ,
                                size: "invisible"
                            })
                        }
                    ))
                        , t = await e
                        , a = await axios$1.post("/api/activate_free_case.php", {
                        promocode: N.value.trim(),
                        cf_secure: t
                    }, {
                        withCredentials: !0
                    });
                    window.turnstile && l.value && window.turnstile.reset(l.value),
                        a.data.success ? (await new Promise((e => setTimeout(e, 400))),
                            await ae()) : (P.value = a.data.error || "Invalid secret code",
                            A.value = !0)
                } catch (a) {
                    P.value = (null == (t = null == (e = a.response) ? void 0 : e.data) ? void 0 : t.error) || "Error activating the case. Please try again.",
                        A.value = !0
                } finally {
                    $.value = !1,
                        z.value = !1
                }
            }
            , re = () => {
                window.open("https://t.me/gifterint_official_bot", "_blank")
            }
            , oe = () => {
                F.value || L.value || (F.value = !0,
                W.value && W.value.animateKeepIt(),
                    setTimeout(( () => {
                            F.value = !1,
                                le(),
                                o.value = 1,
                                ee(a.caseNumber).catch((e => {}
                                ))
                        }
                    ), 1500))
            }
            , ne = async () => {
                var e, t, s;
                if (F.value || L.value)
                    return;
                let i = !1
                    , l = 0;
                if (n.value)
                    i = !0,
                        l = Array.isArray(D.value) ? D.value.reduce(( (e, t) => e + parseFloat(t.price || 0)), 0) : parseFloat((null == (e = D.value) ? void 0 : e.price) || 0);
                else
                    try {
                        if (Array.isArray(D.value)) {
                            const e = D.value.map((e => {
                                    var t;
                                    return null == (t = e.originalData) ? void 0 : t.id
                                }
                            )).filter((e => e));
                            if (0 === e.length)
                                throw new Error("No valid item IDs found");
                            const t = await axios$1.post("/api/sell_group_drop.php", e, {
                                withCredentials: !0,
                                headers: {
                                    "Content-Type": "application/json"
                                }
                            });
                            t.data.error ? (O.value = t.data.error,
                                i = !1) : !0 === t.data.status && t.data.total_price && (i = !0,
                                l = parseFloat(t.data.total_price))
                        } else {
                            const e = null == (s = null == (t = D.value) ? void 0 : t.originalData) ? void 0 : s.id;
                            if (!e)
                                throw new Error("Item ID not found");
                            const a = await axios$1.get(`/api/change_drop_status.php?id=${e}&status=sell`, {
                                withCredentials: !0
                            });
                            a.data.error ? (O.value = a.data.error,
                                i = !1) : !0 === a.data.status && a.data.price && (i = !0,
                                l = parseFloat(a.data.price))
                        }
                    } catch (c) {
                        O.value = c.message || "Error selling item(s). Please try again.",
                            i = !1
                    }
                i && (L.value = !0,
                W.value && W.value.animateQuickSell(),
                isNaN(l) || n.value || r.addToBalance(l)),
                    i ? setTimeout(( () => {
                            L.value = !1,
                                le(),
                                o.value = 1,
                                ee(a.caseNumber).catch((e => {}
                                ))
                        }
                    ), 1500) : L.value = !1
            }
            , le = () => {
                M.value = !1,
                    H.value = new Array(Y.value).fill(!1),
                    U.value = new Array(Y.value).fill(!1),
                    T.value = !1,
                    D.value = null,
                    O.value = null,
                    P.value = "",
                    A.value = !1,
                    N.value = "",
                    $.value = !1,
                    R.value = !1,
                    v.value = null,
                    y.value = 0,
                g.value && (clearInterval(g.value),
                    g.value = null),
                window.turnstile && l.value && window.turnstile.reset(l.value),
                    G.value.forEach((e => {
                            e && e.resetRoulette()
                        }
                    ))
            }
            , ce = () => {
                d && (d.abort(),
                    d = null),
                h && (clearTimeout(h),
                    h = null),
                    le(),
                window.turnstile && l.value && window.turnstile.reset(l.value),
                    F.value = !1,
                    L.value = !1,
                    c.value = !1,
                    s("close"),
                    setTimeout(( () => {
                            j.value = new Array(Y.value).fill().map(( () => []))
                        }
                    ), 500)
            }
            , de = () => {
                d && (d.abort(),
                    d = null),
                    c.value = !1,
                    X.value = !1,
                    ee(a.caseNumber)
            }
            , he = () => {
                ce(),
                    i.push("/profile?openDeposit=true")
            }
            , pe = () => {
                ce(),
                    i.push("/upgrade")
            }
        ;
        return (t, a) => (openBlock(),
            createBlock(Transition, {
                name: "modal-fade"
            }, {
                default: withCtx(( () => {
                        var t;
                        return [e.isOpen ? (openBlock(),
                            createElementBlock("div", {
                                key: 0,
                                class: "modal-overlay",
                                onClick: withModifiers(ce, ["self"])
                            }, [createBaseVNode("div", _hoisted_1$A, [a[49] || (a[49] = createBaseVNode("div", {
                                id: "cf-turnstile-container",
                                style: {
                                    display: "none"
                                }
                            }, null, -1)), createBaseVNode("div", _hoisted_2$x, toDisplayString(p.value), 1), O.value ? (openBlock(),
                                createElementBlock("div", _hoisted_3$t, [createBaseVNode("div", _hoisted_4$r, [createTextVNode(toDisplayString(O.value) + " ", 1), createBaseVNode("button", {
                                    class: "reload-button",
                                    onClick: de
                                }, "Reload")])])) : createCommentVNode("", !0), X.value || z.value ? (openBlock(),
                                createElementBlock("div", _hoisted_5$r, [a[13] || (a[13] = createBaseVNode("div", {
                                    class: "loading-spinner"
                                }, null, -1)), createBaseVNode("div", _hoisted_6$p, toDisplayString(z.value ? "Opening case..." : "Loading case data..."), 1)])) : T.value ? (openBlock(),
                                createElementBlock(Fragment, {
                                    key: 2
                                }, [createVNode(CaseWin, {
                                    ref_key: "winRef",
                                    ref: W,
                                    prize: D.value,
                                    caseNumber: e.caseNumber,
                                    "is-black-case": f.value
                                }, null, 8, ["prize", "caseNumber", "is-black-case"]), createBaseVNode("div", _hoisted_7$p, [_.value && (!D.value || Array.isArray(D.value) && 0 === D.value.length) ? (openBlock(),
                                    createElementBlock("button", {
                                        key: 0,
                                        class: "spin-button full-width-button",
                                        onClick: oe,
                                        disabled: F.value || L.value
                                    }, a[14] || (a[14] = [createBaseVNode("div", {
                                        class: "button-label"
                                    }, "Open Again", -1)]), 8, _hoisted_8$n)) : (openBlock(),
                                    createElementBlock(Fragment, {
                                        key: 1
                                    }, [createBaseVNode("button", {
                                        class: "spin-button",
                                        onClick: oe,
                                        disabled: F.value || L.value
                                    }, [createBaseVNode("div", _hoisted_10$l, toDisplayString(Array.isArray(D.value) && D.value.length > 1 ? "Keep it All" : "Keep it"), 1)], 8, _hoisted_9$m), R.value ? createCommentVNode("", !0) : (openBlock(),
                                        createElementBlock("button", {
                                            key: 0,
                                            class: "quick-spin-button",
                                            onClick: ne,
                                            disabled: F.value || L.value
                                        }, [createBaseVNode("div", _hoisted_12$k, toDisplayString(Array.isArray(D.value) && D.value.length > 1 ? "Quick Sell All" : "Quick Sell"), 1), createBaseVNode("div", _hoisted_13$j, [createBaseVNode("div", _hoisted_14$i, toDisplayString(Array.isArray(D.value) ? D.value.reduce(( (e, t) => e + parseFloat(t.price || 0)), 0).toFixed(2) : null == (t = D.value) ? void 0 : t.price), 1), createBaseVNode("div", _hoisted_15$g, [createVNode(Coin, {
                                            size: "small"
                                        })])])], 8, _hoisted_11$k)), R.value ? createCommentVNode("", !0) : (openBlock(),
                                        createElementBlock("button", {
                                            key: 1,
                                            class: "upgrade-button",
                                            onClick: pe
                                        }, a[15] || (a[15] = [createBaseVNode("div", {
                                            class: "button-label"
                                        }, "Upgrade", -1)])))], 64))])], 64)) : (openBlock(),
                                createElementBlock(Fragment, {
                                    key: 3
                                }, [createBaseVNode("div", {
                                    class: normalizeClass(["roulettes-container", `multiplier-${o.value}`])
                                }, [createVNode(TransitionGroup, {
                                    name: o.value > q.value ? "roulette-fade" : "roulette-none",
                                    tag: "div",
                                    class: "roulettes-transition-group"
                                }, {
                                    default: withCtx(( () => [(openBlock(!0),
                                        createElementBlock(Fragment, null, renderList(j.value, ( (e, t) => {
                                                var a, s;
                                                return openBlock(),
                                                    createElementBlock("div", {
                                                        key: `roulette-${t}`,
                                                        class: normalizeClass(["roulette-wrapper", {
                                                            "roulette-overlap": t > 0,
                                                            "first-roulette": 0 === t,
                                                            "last-roulette": t === j.value.length - 1
                                                        }]),
                                                        style: normalizeStyle({
                                                            zIndex: j.value.length - t,
                                                            marginTop: t > 0 ? "-20px" : "0",
                                                            transitionDelay: o.value > q.value ? .08 * t + "s" : "0s"
                                                        })
                                                    }, [createVNode(CaseRoulette, {
                                                        ref_for: !0,
                                                        ref: e => {
                                                            e && (G.value[t] = e)
                                                        }
                                                        ,
                                                        items: e,
                                                        "winning-item-id": Array.isArray(D.value) ? null == (a = D.value[t]) ? void 0 : a.id : null == (s = D.value) ? void 0 : s.id,
                                                        "animation-duration": I.value,
                                                        "is-spinning": H.value[t],
                                                        "is-black-case": f.value,
                                                        onSpinComplete: e => {
                                                            return (a = t) >= 0 && a < U.value.length && (H.value[a] = !1,
                                                                U.value[a] = !0),
                                                                void (Z.value && R.value && !b.value && setTimeout(( () => {
                                                                        let e = 0;
                                                                        Array.isArray(D.value) ? D.value.forEach((t => {
                                                                                t.originalData && !0 === t.originalData.is_balance && (e += parseFloat(t.price || 0))
                                                                            }
                                                                        )) : D.value && D.value.originalData && !0 === D.value.originalData.is_balance && (e = parseFloat(D.value.price || 0)),
                                                                        e > 0 && r.addToBalance(e)
                                                                    }
                                                                ), 300));
                                                            var a
                                                        }
                                                    }, null, 8, ["items", "winning-item-id", "animation-duration", "is-spinning", "is-black-case", "onSpinComplete"])], 6)
                                            }
                                        )), 128))])),
                                    _: 1
                                }, 8, ["name"])], 2), x.value ? (openBlock(),
                                    createElementBlock("div", _hoisted_16$e, [n.value ? (openBlock(),
                                        createElementBlock("div", _hoisted_17$c, a[16] || (a[16] = [createBaseVNode("div", {
                                            class: "insufficient-funds-message"
                                        }, [createBaseVNode("div", {
                                            class: "info-icon-container"
                                        }, [createBaseVNode("img", {
                                            src: "/images/actions/info.svg",
                                            alt: ""
                                        })]), createBaseVNode("div", {
                                            class: "insufficient-funds-text"
                                        }, "This case is not available in demo mode")], -1), createBaseVNode("div", {
                                            class: "case22-demo-help"
                                        }, [createBaseVNode("span", {
                                            class: "case22-demo-help-text"
                                        }, "Switch to real mode to open this case")], -1)]))) : E.value ? createCommentVNode("", !0) : (openBlock(),
                                        createElementBlock("div", _hoisted_18$b, [createBaseVNode("div", _hoisted_19$a, [a[20] || (a[20] = createBaseVNode("div", {
                                            class: "iconex-filled-info-circle"
                                        }, [createBaseVNode("img", {
                                            class: "info-circle",
                                            src: "/images/actions/info.svg",
                                            alt: "Info"
                                        })], -1)), createBaseVNode("div", _hoisted_20$8, [createBaseVNode("span", null, [a[17] || (a[17] = createBaseVNode("span", {
                                            class: "_12-span"
                                        }, " To open this case, you need to make a deposit of ", -1)), createBaseVNode("span", _hoisted_21$8, toDisplayString(v.value.need_pay) + " ton", 1), a[18] || (a[18] = createBaseVNode("span", {
                                            class: "_12-span"
                                        }, " within the last", -1)), a[19] || (a[19] = createBaseVNode("span", {
                                            class: "_12-span2"
                                        }, " 24 hours", -1))])])]), createBaseVNode("div", _hoisted_22$8, [a[21] || (a[21] = createBaseVNode("div", {
                                            class: "deposits-in-the-last-24-hours"
                                        }, " Deposits in the last 24 hours: ", -1)), createBaseVNode("div", _hoisted_23$5, [createBaseVNode("div", _hoisted_24$4, toDisplayString(v.value.pay_user), 1), createBaseVNode("div", _hoisted_25$4, [createVNode(Coin, {
                                            size: "small"
                                        })])])])])), E.value && !n.value ? (openBlock(),
                                        createElementBlock("div", _hoisted_26$4, [a[22] || (a[22] = createBaseVNode("div", {
                                            class: "frame-2087329028"
                                        }, [createBaseVNode("div", {
                                            class: "iconex-filled-info-circle"
                                        }, [createBaseVNode("img", {
                                            class: "info-circle",
                                            src: "/images/actions/info.svg",
                                            alt: "Info"
                                        })]), createBaseVNode("div", {
                                            class: "_12"
                                        }, " This case can only be opened once every 24 hours. Try opening other free cases ")], -1)), createBaseVNode("div", _hoisted_27$4, [createBaseVNode("div", _hoisted_28$4, toDisplayString(V.value), 1)])])) : createCommentVNode("", !0), !S.value || n.value || E.value ? n.value || E.value ? createCommentVNode("", !0) : (openBlock(),
                                        createElementBlock("button", {
                                            key: 4,
                                            class: "deposit-button",
                                            onClick: he,
                                            style: {
                                                "margin-top": "20px"
                                            }
                                        }, a[27] || (a[27] = [createBaseVNode("div", {
                                            class: "button-label"
                                        }, "Deposit", -1)]))) : (openBlock(),
                                        createElementBlock("div", _hoisted_29$4, [createBaseVNode("button", {
                                            class: "spin-button",
                                            onClick: a[0] || (a[0] = e => ae()),
                                            disabled: M.value || z.value || c.value
                                        }, [a[24] || (a[24] = createBaseVNode("div", {
                                            class: "button-label"
                                        }, "Spin", -1)), createBaseVNode("div", _hoisted_31$4, [a[23] || (a[23] = createBaseVNode("div", {
                                            class: "price-value"
                                        }, "0", -1)), createBaseVNode("div", _hoisted_32$4, [createVNode(Coin, {
                                            size: "small"
                                        })])])], 8, _hoisted_30$4), createBaseVNode("button", {
                                            class: "quick-spin-button",
                                            onClick: a[1] || (a[1] = e => se()),
                                            disabled: M.value || z.value || c.value
                                        }, [a[26] || (a[26] = createBaseVNode("div", {
                                            class: "button-label"
                                        }, "Quick Spin", -1)), createBaseVNode("div", _hoisted_34$2, [a[25] || (a[25] = createBaseVNode("div", {
                                            class: "price-value"
                                        }, "0", -1)), createBaseVNode("div", _hoisted_35$2, [createVNode(Coin, {
                                            size: "small"
                                        })])])], 8, _hoisted_33$3)]))])) : C.value ? (openBlock(),
                                    createElementBlock("div", _hoisted_36$2, [A.value ? (openBlock(),
                                        createElementBlock("div", _hoisted_37$2, [createBaseVNode("div", _hoisted_38$2, toDisplayString(P.value), 1)])) : createCommentVNode("", !0), $.value ? (openBlock(),
                                        createElementBlock("div", _hoisted_39$2, a[28] || (a[28] = [createBaseVNode("div", {
                                            class: "checking-promo-message"
                                        }, "Checking promocode...", -1)]))) : createCommentVNode("", !0), n.value ? n.value ? (openBlock(),
                                        createElementBlock("div", _hoisted_41$2, a[30] || (a[30] = [createBaseVNode("div", {
                                            class: "insufficient-funds-message"
                                        }, [createBaseVNode("div", {
                                            class: "info-icon-container"
                                        }, [createBaseVNode("img", {
                                            src: "/images/actions/info.svg",
                                            alt: ""
                                        })]), createBaseVNode("div", {
                                            class: "insufficient-funds-text"
                                        }, "This case is not available in demo mode")], -1), createBaseVNode("div", {
                                            class: "case22-demo-help"
                                        }, [createBaseVNode("span", {
                                            class: "case22-demo-help-text"
                                        }, "Switch to real mode to open this case")], -1)]))) : createCommentVNode("", !0) : (openBlock(),
                                        createElementBlock("div", _hoisted_40$2, a[29] || (a[29] = [createBaseVNode("div", {
                                            class: "info-icon-container"
                                        }, [createBaseVNode("img", {
                                            src: "/images/actions/info.svg",
                                            alt: "Info",
                                            class: "info-svg"
                                        })], -1), createBaseVNode("div", {
                                            class: "free-case-text"
                                        }, "To open this case, enter the secret code", -1)]))), n.value ? createCommentVNode("", !0) : (openBlock(),
                                        createElementBlock("div", _hoisted_42$2, [createBaseVNode("div", _hoisted_43$2, [withDirectives(createBaseVNode("input", {
                                            "onUpdate:modelValue": a[2] || (a[2] = e => N.value = e),
                                            type: "text",
                                            placeholder: "Secret Code",
                                            class: "promo-input",
                                            disabled: $.value
                                        }, null, 8, _hoisted_44$2), [[vModelText, N.value]])]), createBaseVNode("button", {
                                            class: "free-case-button",
                                            onClick: ie,
                                            disabled: M.value || z.value || c.value || $.value
                                        }, [a[32] || (a[32] = createBaseVNode("div", {
                                            class: "button-label"
                                        }, "Spin", -1)), createBaseVNode("div", _hoisted_46$1, [a[31] || (a[31] = createBaseVNode("div", {
                                            class: "price-value"
                                        }, "0", -1)), createBaseVNode("div", _hoisted_47, [createVNode(Coin, {
                                            size: "small"
                                        })])])], 8, _hoisted_45$2)])), n.value ? createCommentVNode("", !0) : (openBlock(),
                                        createElementBlock("div", _hoisted_48, [a[33] || (a[33] = createBaseVNode("span", {
                                            class: "free-case-help-text"
                                        }, "Search for secret codes in ", -1)), createBaseVNode("span", {
                                            class: "free-case-telegram",
                                            onClick: re
                                        }, "@gifter")]))])) : B.value ? _.value && n.value ? (openBlock(),
                                    createElementBlock("div", _hoisted_50, a[36] || (a[36] = [createBaseVNode("div", {
                                        class: "insufficient-funds-message"
                                    }, [createBaseVNode("div", {
                                        class: "info-icon-container"
                                    }, [createBaseVNode("img", {
                                        src: "/images/actions/info.svg",
                                        alt: ""
                                    })]), createBaseVNode("div", {
                                        class: "insufficient-funds-text"
                                    }, "This case is not available in demo mode")], -1), createBaseVNode("div", {
                                        class: "case22-demo-help"
                                    }, [createBaseVNode("span", {
                                        class: "case22-demo-help-text"
                                    }, "Switch to real mode to open this case")], -1)]))) : (openBlock(),
                                    createElementBlock(Fragment, {
                                        key: 4
                                    }, [x.value ? createCommentVNode("", !0) : (openBlock(),
                                        createElementBlock("div", _hoisted_51, [createBaseVNode("div", {
                                            class: normalizeClass(["multiplier-tabs", {
                                                "case22-tabs": _.value
                                            }])
                                        }, [_.value ? (openBlock(),
                                            createElementBlock(Fragment, {
                                                key: 1
                                            }, [createBaseVNode("div", {
                                                class: normalizeClass(["multiplier-tab", {
                                                    active: 1 === o.value,
                                                    disabled: M.value
                                                }]),
                                                onClick: a[6] || (a[6] = e => M.value ? null : o.value = 1)
                                            }, a[40] || (a[40] = [createBaseVNode("div", {
                                                class: "multiplier-text"
                                            }, "x1", -1)]), 2), createBaseVNode("div", {
                                                class: normalizeClass(["multiplier-tab", {
                                                    active: 10 === o.value,
                                                    disabled: !unref(r).canAfford(10 * u.value.value) || M.value
                                                }]),
                                                onClick: a[7] || (a[7] = e => !unref(r).canAfford(10 * u.value.value) || M.value ? null : o.value = 10)
                                            }, a[41] || (a[41] = [createBaseVNode("div", {
                                                class: "multiplier-text"
                                            }, "x10", -1)]), 2), createBaseVNode("div", {
                                                class: normalizeClass(["multiplier-tab", {
                                                    active: 50 === o.value,
                                                    disabled: !unref(r).canAfford(50 * u.value.value) || M.value
                                                }]),
                                                onClick: a[8] || (a[8] = e => !unref(r).canAfford(50 * u.value.value) || M.value ? null : o.value = 50)
                                            }, a[42] || (a[42] = [createBaseVNode("div", {
                                                class: "multiplier-text"
                                            }, "x50", -1)]), 2), createBaseVNode("div", {
                                                class: normalizeClass(["multiplier-tab", {
                                                    active: 100 === o.value,
                                                    disabled: !unref(r).canAfford(100 * u.value.value) || M.value
                                                }]),
                                                onClick: a[9] || (a[9] = e => !unref(r).canAfford(100 * u.value.value) || M.value ? null : o.value = 100)
                                            }, a[43] || (a[43] = [createBaseVNode("div", {
                                                class: "multiplier-text"
                                            }, "x100", -1)]), 2), createBaseVNode("div", {
                                                class: normalizeClass(["multiplier-tab", {
                                                    active: 1e3 === o.value,
                                                    disabled: !unref(r).canAfford(1e3 * u.value.value) || M.value
                                                }]),
                                                onClick: a[10] || (a[10] = e => !unref(r).canAfford(1e3 * u.value.value) || M.value ? null : o.value = 1e3)
                                            }, a[44] || (a[44] = [createBaseVNode("div", {
                                                class: "multiplier-text"
                                            }, "x1000", -1)]), 2)], 64)) : (openBlock(),
                                            createElementBlock(Fragment, {
                                                key: 0
                                            }, [createBaseVNode("div", {
                                                class: normalizeClass(["multiplier-tab", {
                                                    active: 1 === o.value,
                                                    disabled: M.value
                                                }]),
                                                onClick: a[3] || (a[3] = e => M.value ? null : o.value = 1)
                                            }, a[37] || (a[37] = [createBaseVNode("div", {
                                                class: "multiplier-text"
                                            }, "x1", -1)]), 2), createBaseVNode("div", {
                                                class: normalizeClass(["multiplier-tab", {
                                                    active: 2 === o.value,
                                                    disabled: !k.value || M.value
                                                }]),
                                                onClick: a[4] || (a[4] = e => !k.value || M.value ? null : o.value = 2)
                                            }, a[38] || (a[38] = [createBaseVNode("div", {
                                                class: "multiplier-text"
                                            }, "x2", -1)]), 2), createBaseVNode("div", {
                                                class: normalizeClass(["multiplier-tab", {
                                                    active: 3 === o.value,
                                                    disabled: !w.value || M.value
                                                }]),
                                                onClick: a[5] || (a[5] = e => !w.value || M.value ? null : o.value = 3)
                                            }, a[39] || (a[39] = [createBaseVNode("div", {
                                                class: "multiplier-text"
                                            }, "x3", -1)]), 2)], 64))], 2)])), createBaseVNode("div", _hoisted_52, [_.value ? createCommentVNode("", !0) : (openBlock(),
                                        createElementBlock("button", {
                                            key: 0,
                                            class: "spin-button",
                                            onClick: a[11] || (a[11] = e => ae()),
                                            disabled: M.value || z.value || c.value
                                        }, [a[45] || (a[45] = createBaseVNode("div", {
                                            class: "button-label"
                                        }, "Spin", -1)), createBaseVNode("div", _hoisted_54, [createBaseVNode("div", _hoisted_55, toDisplayString((u.value * o.value).toFixed(2)), 1), createBaseVNode("div", _hoisted_56, [createVNode(Coin, {
                                            size: "small"
                                        })])])], 8, _hoisted_53)), createBaseVNode("button", {
                                        class: "quick-spin-button",
                                        onClick: a[12] || (a[12] = e => se()),
                                        disabled: M.value || z.value || c.value
                                    }, [a[46] || (a[46] = createBaseVNode("div", {
                                        class: "button-label"
                                    }, "Quick Spin", -1)), createBaseVNode("div", _hoisted_58, [createBaseVNode("div", _hoisted_59, toDisplayString((u.value * o.value).toFixed(2)), 1), createBaseVNode("div", _hoisted_60, [createVNode(Coin, {
                                        size: "small"
                                    })])])], 8, _hoisted_57)])], 64)) : (openBlock(),
                                    createElementBlock("div", _hoisted_49, [a[35] || (a[35] = createBaseVNode("div", {
                                        class: "insufficient-funds-message"
                                    }, [createBaseVNode("div", {
                                        class: "info-icon-container"
                                    }, [createBaseVNode("img", {
                                        src: "/images/actions/info.svg",
                                        alt: ""
                                    })]), createBaseVNode("div", {
                                        class: "insufficient-funds-text"
                                    }, "Not enough funds")], -1)), createBaseVNode("button", {
                                        class: "deposit-button",
                                        onClick: he
                                    }, a[34] || (a[34] = [createBaseVNode("div", {
                                        class: "button-label"
                                    }, "Deposit", -1)]))]))], 64)), createBaseVNode("button", {
                                class: "close-button",
                                onClick: ce
                            }, a[47] || (a[47] = [createBaseVNode("svg", {
                                width: "24",
                                height: "24",
                                viewBox: "0 0 24 24",
                                fill: "none",
                                xmlns: "http://www.w3.org/2000/svg"
                            }, [createBaseVNode("path", {
                                d: "M18 6L6 18M6 6L18 18",
                                stroke: "white",
                                "stroke-width": "2",
                                "stroke-linecap": "round",
                                "stroke-linejoin": "round"
                            })], -1)])), X.value || z.value ? createCommentVNode("", !0) : (openBlock(),
                                createElementBlock("div", _hoisted_61, [a[48] || (a[48] = createBaseVNode("div", {
                                    class: "prizes-title"
                                }, "Possible prizes:", -1)), createBaseVNode("div", _hoisted_62, [(openBlock(!0),
                                    createElementBlock(Fragment, null, renderList(K.value, (e => (openBlock(),
                                        createElementBlock("div", {
                                            key: e.id,
                                            class: normalizeClass(["prize-item", [{
                                                black_backdrop: f.value
                                            }, e.color ? `color${e.color}` : ""]])
                                        }, [createBaseVNode("img", {
                                            class: "prize-image",
                                            src: e.image,
                                            alt: "Prize"
                                        }, null, 8, _hoisted_63), createBaseVNode("div", _hoisted_64, [createBaseVNode("div", _hoisted_65, [createVNode(Coin, {
                                            size: "small"
                                        })]), createBaseVNode("div", _hoisted_66, toDisplayString(e.price), 1)])], 2)))), 128))])]))])])) : createCommentVNode("", !0)]
                    }
                )),
                _: 1
            }))
    }
}
    , CaseModal = _export_sfc$1(_sfc_main$C, [["__scopeId", "data-v-ef0a99dc"]])
    , cookieUtils = {
    setCookie(e, t, a={}) {
        if ((a = {
            path: "/",
            secure: !0,
            sameSite: "None",
            expires: 365,
            ...a
        }).expires) {
            const e = new Date;
            e.setTime(e.getTime() + 24 * a.expires * 60 * 60 * 1e3),
                a.expires = e.toUTCString()
        }
        let s = `${encodeURIComponent(e)}=${encodeURIComponent(t)}`;
        for (const [i,r] of Object.entries(a))
            !0 === r ? s += `; ${i}` : !1 !== r && (s += `; ${i}=${r}`);
        return document.cookie = s,
            !0
    },
    getCookie(e) {
        const t = document.cookie.match(new RegExp("(?:^|; )" + e.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, "\\$1") + "=([^;]*)"));
        return t ? decodeURIComponent(t[1]) : null
    },
    deleteCookie(e) {
        this.setCookie(e, "", {
            expires: -1
        })
    }
};
class TelegramInitService {
    constructor() {
        this.isInitialized = !1,
            this.isAuthenticated = !1,
            this.error = null,
            this.user = null,
            this.baseUrl = "/api",
            axios$1.defaults.withCredentials = !0
    }
    async initialize() {
        try {
            const e = await this.validateWithCookie();
            if (e.success)
                return this.isInitialized = !0,
                    this.isAuthenticated = !0,
                    this.user = e.user,
                    {
                        success: !0,
                        user: this.user
                    };
            let t = null;
            if (window.Telegram && window.Telegram.WebApp && (t = window.Telegram.WebApp.initData),
            t || (t = localStorage.getItem("telegram_init_data")),
                !t)
                throw new Error("No Telegram initialization data available");
            const a = await axios$1.post(`${this.baseUrl}/telegram_auth.php`, {
                initData: t
            }, {
                withCredentials: !0
            });
            if (a.data.status) {
                const e = a.data.verification;
                return cookieUtils.setCookie("s", e, {
                    expires: 30,
                    path: "/",
                    secure: !0,
                    sameSite: "None"
                }),
                    this.user = a.data.user,
                    localStorage.setItem("telegram_init_data", t),
                    this.isInitialized = !0,
                    this.isAuthenticated = !0,
                    {
                        success: !0,
                        user: this.user
                    }
            }
            throw this.error = a.data.error || "Authentication failed",
                new Error(this.error)
        } catch (e) {
            return this.error = e.message || "Authentication failed",
                {
                    success: !1,
                    error: this.error
                }
        }
    }
    async authenticateWithWidget(e) {
        try {
            const t = await axios$1.post(`${this.baseUrl}/telegram_web_auth.php`, {
                auth_data: e
            }, {
                withCredentials: !0
            });
            if (t.data.status) {
                const e = t.data.verification;
                return cookieUtils.setCookie("s", e, {
                    expires: 30,
                    path: "/",
                    secure: !0,
                    sameSite: "None"
                }),
                    this.user = t.data.user,
                    this.isInitialized = !0,
                    this.isAuthenticated = !0,
                    {
                        success: !0,
                        user: this.user
                    }
            }
            throw this.error = t.data.error || "Authentication failed",
                new Error(this.error)
        } catch (t) {
            return this.error = t.message || "Widget authentication failed",
                {
                    success: !1,
                    error: this.error
                }
        }
    }
    async validateWithCookie() {
        try {
            const e = await axios$1.post(`${this.baseUrl}/telegram_auth.php`, {}, {
                withCredentials: !0
            });
            return e.data.status && e.data.user ? {
                success: !0,
                user: e.data.user
            } : {
                success: !1,
                error: e.data.error || "Cookie validation failed"
            }
        } catch (e) {
            return {
                success: !1,
                error: e.message || "Cookie validation error"
            }
        }
    }
    getUser() {
        return this.user
    }
    isUserAuthenticated() {
        return this.isAuthenticated
    }
}
const telegramInitService = new TelegramInitService
    , Loader_vue_vue_type_style_index_0_scoped_05a491e2_lang = ""
    , _sfc_main$B = {
    name: "TelegramLoader",
    props: {
        triggerReady: {
            type: Function,
            required: !0
        },
        referralCode: {
            type: String,
            default: null
        }
    },
    emits: ["auth-complete", "auth-error"],
    setup(e, {emit: t}) {
        const a = inject("userStore")
            , s = ref(null)
            , i = ref(!0)
            , r = ref("Connecting to Telegram...")
            , o = ref(0)
            , n = ref(!1)
            , l = ref(!1)
            , c = ref(!1)
            , d = ref("");
        watch(( () => e.referralCode), (e => {
                e && (n.value = !0)
            }
        ), {
            immediate: !0
        });
        window.onTelegramAuth = async a => {
            try {
                i.value = !0,
                    c.value = !1,
                    r.value = "Authenticating with Telegram...";
                const l = await telegramInitService.authenticateWithWidget(a);
                if (l.success && l.user) {
                    if (r.value = "Authentication successful",
                    n.value && e.referralCode) {
                        r.value = "Processing referral...";
                        try {
                            await m(l.user)
                        } catch (o) {}
                    }
                    await f(l.user),
                        t("auth-complete", l.user),
                        setTimeout(( () => {
                                e.triggerReady()
                            }
                        ), 1)
                } else
                    s.value = l.error || "Failed to authenticate with Telegram",
                        i.value = !1,
                        c.value = !0,
                        t("auth-error", s.value)
            } catch (l) {
                s.value = l.message || "Authentication error occurred",
                    i.value = !1,
                    c.value = !0,
                    t("auth-error", s.value)
            }
        }
        ;
        const h = async () => {
                try {
                    const e = await axios$1.get("/api/get_bot_config.php", {
                        withCredentials: !0
                    });
                    if (e.data.status && e.data.botUsername)
                        return d.value = e.data.botUsername,
                            !0
                } catch (e) {
                    d.value = "t.me/gifterint_official_bot"
                }
                return !1
            }
            , p = async () => {
                d.value || await h();
                const e = document.getElementById("telegram-widget-script");
                e && e.remove();
                const t = document.createElement("script");
                t.id = "telegram-widget-script",
                    t.src = "https://telegram.org/js/telegram-widget.js?22",
                    t.setAttribute("data-telegram-login", d.value),
                    t.setAttribute("data-size", "large"),
                    t.setAttribute("data-radius", "12"),
                    t.setAttribute("data-onauth", "onTelegramAuth(user)"),
                    t.setAttribute("data-request-access", "write"),
                    t.async = !0;
                const a = document.getElementById("telegram-login-widget");
                a && a.appendChild(t)
            }
            , u = async () => {
                try {
                    s.value = null,
                        i.value = !0,
                        r.value = "Connecting to Telegram...",
                        await new Promise((e => setTimeout(e, 300))),
                        r.value = "Authenticating...";
                    try {
                        const e = await axios$1.post("/api/telegram_auth.php", {}, {
                            withCredentials: !0
                        });
                        if (e.data && !1 === e.data.status && "technical work" === e.data.state)
                            return l.value = !0,
                                void (i.value = !1)
                    } catch (a) {}
                    const d = await telegramInitService.initialize();
                    if (d.success && d.user) {
                        if (r.value = "Authentication successful",
                        n.value && e.referralCode) {
                            r.value = "Processing referral...";
                            try {
                                await m(d.user)
                            } catch (o) {}
                        }
                        await f(d.user),
                            t("auth-complete", d.user),
                            setTimeout(( () => {
                                    e.triggerReady()
                                }
                            ), 1)
                    } else
                        s.value = d.error || "Failed to authenticate. Please try again.",
                            i.value = !1,
                            d.error && d.error.includes("No Telegram initialization data") ? (c.value = !0,
                                s.value = null,
                                setTimeout(p, 100)) : t("auth-error", s.value)
                } catch (d) {
                    s.value = d.message || "An unexpected error occurred. Please try again.",
                        i.value = !1,
                        d.message && d.message.includes("No Telegram initialization data") ? (c.value = !0,
                            s.value = null,
                            setTimeout(p, 100)) : t("auth-error", s.value)
                }
            }
            , m = async t => {
                try {
                    return !!(await axios$1.post("/api/process_referral.php", {
                        userId: t.id,
                        referralCode: e.referralCode
                    }, {
                        withCredentials: !0
                    })).data.success
                } catch (a) {
                    throw a
                }
            }
            , f = async e => {
                e && a.updateUser({
                    firstName: e.first_name,
                    lastName: e.last_name,
                    photoUrl: e.photo_url,
                    balance: e.balance || 0,
                    walletAddress: e.wallet_address || null,
                    telegramId: e.telegram_id
                })
            }
        ;
        return onMounted((async () => {
                await h(),
                    u()
            }
        )),
            onUnmounted(( () => {
                    window.onTelegramAuth && delete window.onTelegramAuth
                }
            )),
            {
                error: s,
                isLoading: i,
                loadingText: r,
                retryAuthentication: () => {
                    s.value = null,
                        c.value = !1,
                        o.value++,
                        u()
                }
                ,
                maintenanceMode: l,
                openTelegramChannel: () => {
                    window.Telegram && window.Telegram.WebApp ? window.Telegram.WebApp.openTelegramLink("t.me/gifterint_official_bot") : window.open("https://t.me/gifterint_official_bot", "_blank")
                }
                ,
                showLoginWidget: c,
                botUsername: d
            }
    }
}
    , _hoisted_1$z = {
    class: "loader-container"
}
    , _hoisted_2$w = {
    key: 0,
    class: "maintenance-container"
}
    , _hoisted_3$s = {
    class: "maintenance-content"
}
    , _hoisted_4$q = {
    class: "maintenance-alert"
}
    , _hoisted_5$q = {
    key: 1,
    class: "loader-content"
}
    , _hoisted_6$o = {
    key: 2,
    class: "error-container"
}
    , _hoisted_7$o = {
    class: "error-message"
}
    , _hoisted_8$m = {
    key: 3,
    class: "login-widget-container"
}
    , _hoisted_9$l = {
    key: 4,
    class: "loading-spinner-container"
}
    , _hoisted_10$k = {
    class: "loading-text"
};
function _sfc_render$h(e, t, a, s, i, r) {
    return openBlock(),
        createElementBlock("div", _hoisted_1$z, [s.maintenanceMode ? (openBlock(),
            createElementBlock("div", _hoisted_2$w, [createBaseVNode("div", _hoisted_3$s, [t[7] || (t[7] = createBaseVNode("div", {
                class: "logo-container maintenance-logo"
            }, [createBaseVNode("img", {
                src: "/images/effects/loader.png",
                alt: "Gift Cases by TON Logo",
                class: "floating-logo"
            })], -1)), t[8] || (t[8] = createBaseVNode("h1", {
                class: "loader-title"
            }, "Gift Cases by TON", -1)), t[9] || (t[9] = createBaseVNode("p", {
                class: "loader-copyright"
            }, "Copyright © 2025", -1)), createBaseVNode("div", _hoisted_4$q, [t[3] || (t[3] = createBaseVNode("div", {
                class: "alert-icon"
            }, "⚠️", -1)), t[4] || (t[4] = createBaseVNode("h2", {
                class: "maintenance-title"
            }, "Technical Maintenance", -1)), t[5] || (t[5] = createBaseVNode("p", {
                class: "maintenance-message"
            }, "We're currently performing technical maintenance to improve your experience.", -1)), t[6] || (t[6] = createBaseVNode("p", {
                class: "maintenance-submessage"
            }, "Please check our news for updates.", -1)), createBaseVNode("button", {
                class: "telegram-button",
                onClick: t[0] || (t[0] = (...e) => s.openTelegramChannel && s.openTelegramChannel(...e))
            }, t[2] || (t[2] = [createBaseVNode("div", {
                class: "button-label"
            }, "Open @gifter", -1)]))])])])) : (openBlock(),
            createElementBlock("div", _hoisted_5$q, t[10] || (t[10] = [createStaticVNode('<header class="loader-header" data-v-05a491e2><div class="logo-container" data-v-05a491e2><img src="/images/effects/loader.png" alt="Gift Cases by TON Logo" class="floating-logo" data-v-05a491e2></div><h1 class="loader-title" data-v-05a491e2>Gift Cases by TON</h1><p class="loader-copyright" data-v-05a491e2>Copyright © 2025</p></header>', 1)]))), s.error && !s.maintenanceMode ? (openBlock(),
            createElementBlock("div", _hoisted_6$o, [t[11] || (t[11] = createBaseVNode("div", {
                class: "error-icon"
            }, "⚠️", -1)), t[12] || (t[12] = createBaseVNode("h2", {
                class: "error-title"
            }, "Authentication Error", -1)), createBaseVNode("p", _hoisted_7$o, toDisplayString(s.error), 1), createBaseVNode("button", {
                class: "retry-button",
                onClick: t[1] || (t[1] = (...e) => s.retryAuthentication && s.retryAuthentication(...e))
            }, "Try Again")])) : createCommentVNode("", !0), s.showLoginWidget && !s.maintenanceMode ? (openBlock(),
            createElementBlock("div", _hoisted_8$m, t[13] || (t[13] = [createBaseVNode("h2", {
                class: "widget-title"
            }, "Sign in with Telegram", -1), createBaseVNode("p", {
                class: "widget-subtitle"
            }, "To access Gift Cases by TON", -1), createBaseVNode("div", {
                id: "telegram-login-widget",
                class: "telegram-widget"
            }, null, -1)]))) : createCommentVNode("", !0), !s.isLoading || s.error || s.maintenanceMode ? createCommentVNode("", !0) : (openBlock(),
            createElementBlock("div", _hoisted_9$l, [t[14] || (t[14] = createBaseVNode("div", {
                class: "loading-spinner"
            }, null, -1)), createBaseVNode("p", _hoisted_10$k, toDisplayString(s.loadingText), 1)])), t[15] || (t[15] = createBaseVNode("div", {
            class: "loader-social-handle"
        }, "@gifter", -1))])
}
const TelegramLoader = _export_sfc$1(_sfc_main$B, [["render", _sfc_render$h], ["__scopeId", "data-v-05a491e2"]])
    , state = reactive({
    user: {
        firstName: "",
        lastName: "",
        photoUrl: "/images/effects/profile.svg",
        balance: 0,
        walletAddress: null,
        telegramId: "",
        isLoading: !1,
        error: null,
        isAuthenticated: !1
    }
})
    , formatBalance = e => {
    const t = parseFloat(e);
    return isNaN(t) ? 0 : Math.round(100 * t) / 100
}
    , formatBalanceForDisplay = e => {
    const t = parseFloat(e);
    return isNaN(t) ? "0.00" : t.toFixed(2)
}
    , getters = {
    displayName: computed(( () => state.user.firstName && state.user.lastName ? `${state.user.firstName} ${state.user.lastName}` : state.user.firstName ? state.user.firstName : "Guest")),
    telegramId: computed(( () => state.user.telegramId ? `#${state.user.telegramId}` : "")),
    formattedWalletAddress: computed(( () => {
            if (!state.user.walletAddress)
                return null;
            const e = state.user.walletAddress;
            return e.length <= 12 ? e : `${e.substring(0, 5)}...${e.substring(e.length - 4)}`
        }
    )),
    hasWallet: computed(( () => !!state.user.walletAddress)),
    isAuthenticated: computed(( () => state.user.isAuthenticated)),
    canAfford: e => formatBalance(state.user.balance) >= formatBalance(e),
    formattedBalance: computed(( () => formatBalanceForDisplay(state.user.balance)))
}
    , actions = {
    updateUser(e) {
        if (e)
            return void 0 !== e.balance && (e.balance = formatBalance(e.balance)),
                state.user = {
                    ...state.user,
                    ...e,
                    isAuthenticated: !0,
                    error: null
                },
                state.user
    },
    async loadUserData() {
        state.user.isLoading = !0,
            state.user.error = null;
        try {
            return await new Promise((e => setTimeout(e, 500))),
                state.user.isLoading = !1,
                state.user
        } catch (e) {
            throw state.user.error = e.message || "Failed to load user data",
                state.user.isLoading = !1,
                e
        }
    },
    connectWallet: e => !!e && (state.user.walletAddress = e,
        !0),
    disconnectWallet() {
        state.user.walletAddress = null
    },
    updateBalance(e) {
        void 0 !== e && (state.user.balance = formatBalance(e))
    },
    addToBalance(e) {
        if (void 0 !== e) {
            const t = parseFloat(state.user.balance) || 0
                , a = parseFloat(e) || 0;
            state.user.balance = formatBalance(t + a)
        }
    },
    subtractFromBalance(e) {
        if (void 0 !== e) {
            const t = parseFloat(state.user.balance) || 0
                , a = parseFloat(e) || 0;
            if (t >= a)
                return state.user.balance = formatBalance(t - a),
                    !0
        }
        return !1
    },
    setError(e) {
        state.user.error = e
    },
    clearUser() {
        state.user = {
            firstName: "",
            lastName: "",
            photoUrl: "/images/effects/profile.svg",
            balance: 0,
            walletAddress: null,
            telegramId: "",
            isLoading: !1,
            error: null,
            isAuthenticated: !1
        }
    }
}
    , userStore = {
    state: readonly(state),
    ...getters,
    ...actions
}
    , App_vue_vue_type_style_index_0_lang = ""
    , _sfc_main$A = defineComponent({
    name: "App",
    components: {
        FooterMenu: FooterMenu,
        CaseModal: CaseModal,
        TelegramLoader: TelegramLoader
    },
    setup() {
        useRouter();
        const e = ref(!0)
            , t = ref(0)
            , a = ref(!1)
            , s = ref(1)
            , i = ref(null)
            , r = ref(null)
            , o = ref(null)
            , n = ref(null);
        provide("userStore", userStore),
            provide("webSocket", o);
        const l = ref(new Map);
        provide("registerWsHandler", ( (e, t) => {
                l.value.set(e, t)
            }
        )),
            provide("unregisterWsHandler", (e => {
                    l.value.delete(e)
                }
            ));
        const c = () => {
                const e = `${"https:" === window.location.protocol ? "wss:" : "ws:"}//${window.location.hostname}:8443`;
                let a = null
                    , s = null;
                const i = () => {
                        a && clearInterval(a),
                        s && clearTimeout(s),
                        n.value && clearTimeout(n.value),
                            a = null,
                            s = null,
                            n.value = null
                    }
                    , r = () => {
                        s && clearTimeout(s),
                            s = setTimeout(( () => {
                                    o.value && o.value.close()
                                }
                            ), 3e4)
                    }
                ;
                try {
                    o.value = new WebSocket(e),
                        o.value.onopen = () => {
                            i(),
                                a = setInterval(( () => {
                                        o.value && o.value.readyState === WebSocket.OPEN && (o.value.send(JSON.stringify({
                                            event: "ping"
                                        })),
                                            r())
                                    }
                                ), 15e3),
                                r(),
                                userStore.isAuthenticated
                        }
                        ,
                        o.value.onmessage = e => {
                            try {
                                const t = JSON.parse(e.data);
                                if (r(),
                                "pong" === t.event)
                                    return;
                                const a = t.event || t.type;
                                if ("balance_update" === a) {
                                    const e = t.data || {};
                                    if (void 0 !== e.balance) {
                                        const t = parseFloat(e.balance);
                                        isNaN(t) || userStore.updateBalance(t)
                                    } else if (void 0 !== e.amount) {
                                        const t = parseFloat(e.amount);
                                        isNaN(t) || (t >= 0 ? userStore.addToBalance(t) : userStore.subtractFromBalance(Math.abs(t)))
                                    }
                                }
                                if (a && l.value.has(a)) {
                                    const e = t.data || ("inventory_update" === t.type ? t.data : t);
                                    l.value.get(a)(e)
                                }
                                "global_notification" === t.event || t.type
                            } catch (t) {}
                        }
                        ,
                        o.value.onerror = e => {}
                        ,
                        o.value.onclose = e => {
                            if (i(),
                            1e3 === e.code)
                                return;
                            const a = Math.min(3e4, 2e3 * Math.pow(1.5, t.value));
                            t.value++,
                                n.value = setTimeout(( () => {
                                        c()
                                    }
                                ), a)
                        }
                } catch (d) {
                    i();
                    const e = Math.min(3e4, 2e3 * Math.pow(1.5, t.value));
                    t.value++,
                        n.value = setTimeout(( () => {
                                c()
                            }
                        ), e)
                }
            }
            , d = e => {
                if (e)
                    try {
                        const t = new Date;
                        t.setDate(t.getDate() + 30),
                            document.cookie = `ref=${e}; expires=${t.toUTCString()}; path=/; SameSite=None; Secure`
                    } catch (t) {}
            }
            , h = e => {
                s.value = e,
                    a.value = !0
            }
            , p = () => {
                a.value = !1
            }
        ;
        provide("modalFunctions", {
            openModal: h,
            closeModal: p
        });
        return onBeforeMount(( () => {
                ( () => {
                        var e;
                        let t = null;
                        try {
                            if (window.Telegram && window.Telegram.WebApp) {
                                const a = null == (e = window.Telegram.WebApp.initDataUnsafe) ? void 0 : e.start_param;
                                if (a && a.startsWith("ref_") && (t = a.substring(4)),
                                !t && window.Telegram.WebApp.initData) {
                                    const e = window.Telegram.WebApp.initData
                                        , a = new URLSearchParams(e)
                                        , s = a.get("start_param") || a.get("startapp");
                                    s && s.startsWith("ref_") && (t = s.substring(4))
                                }
                            }
                            if (!t) {
                                const e = new URLSearchParams(window.location.search)
                                    , a = e.get("startapp") || e.get("start_param");
                                a && a.startsWith("ref_") && (t = a.substring(4))
                            }
                            if (!t) {
                                const e = window.location.pathname.match(/\/ref\/([a-zA-Z0-9]+)/);
                                e && e[1] && (t = e[1],
                                window.history && window.history.replaceState && window.history.replaceState({}, document.title, "/"))
                            }
                            return !!t && (d(t),
                                r.value = t,
                                !0)
                        } catch (a) {
                            return !1
                        }
                    }
                )()
            }
        )),
            onMounted(( () => {
                    window.Telegram && window.Telegram.WebApp && window.Telegram.WebApp.expand()
                }
            )),
            onUnmounted(( () => {
                    o.value && o.value.close(1e3, "Intentional closure"),
                    n.value && clearTimeout(n.value)
                }
            )),
            {
                loading: e,
                isModalOpen: a,
                selectedCaseNumber: s,
                openModal: h,
                closeModal: p,
                authError: i,
                handleAuthComplete: e => {
                    i.value = null,
                        r.value,
                        c()
                }
                ,
                handleAuthError: e => {
                    i.value = e
                }
                ,
                finishLoading: () => {
                    setTimeout(( () => {
                            e.value = !1
                        }
                    ), 500)
                }
                ,
                referralCode: r
            }
    }
})
    , _hoisted_1$y = {
    class: "app-container"
}
    , _hoisted_2$v = {
    key: 1,
    class: "app-content"
};
function _sfc_render$g(e, t, a, s, i, r) {
    const o = resolveComponent("TelegramLoader")
        , n = resolveComponent("router-view")
        , l = resolveComponent("FooterMenu")
        , c = resolveComponent("CaseModal");
    return openBlock(),
        createElementBlock("div", _hoisted_1$y, [e.loading ? (openBlock(),
            createBlock(o, {
                key: 0,
                onAuthComplete: e.handleAuthComplete,
                onAuthError: e.handleAuthError,
                triggerReady: e.finishLoading,
                referralCode: e.referralCode
            }, null, 8, ["onAuthComplete", "onAuthError", "triggerReady", "referralCode"])) : (openBlock(),
            createElementBlock("div", _hoisted_2$v, [createVNode(n, {
                onOpenModal: e.openModal
            }, null, 8, ["onOpenModal"]), createVNode(l), createVNode(c, {
                "is-open": e.isModalOpen,
                "case-number": e.selectedCaseNumber,
                onClose: e.closeModal
            }, null, 8, ["is-open", "case-number", "onClose"])]))])
}
const App = _export_sfc$1(_sfc_main$A, [["render", _sfc_render$g]])
    , LiveDrop_vue_vue_type_style_index_0_scoped_44628978_lang = ""
    , _hoisted_1$x = {
    class: "live-status-bar"
}
    , _hoisted_2$u = {
    class: "live-item-content"
}
    , _hoisted_3$r = ["src"]
    , MAX_CACHE_SIZE = 200
    , MAX_ITEMS = 50
    , _sfc_main$z = {
    __name: "LiveDrop",
    setup(e, {expose: t}) {
        const a = inject("registerWsHandler")
            , s = inject("unregisterWsHandler")
            , i = ref([])
            , r = new Map;
        function o(e, t) {
            return `${e}_${t || Date.now()}`
        }
        function n(e, t=Date.now(), a=!1, s=null) {
            const r = e.startsWith("/") ? e : `/${e}`
                , o = Date.now() + Math.random();
            i.value.unshift({
                id: o,
                src: r,
                timestamp: t,
                isBlack: a,
                color: s
            }),
            i.value.length > MAX_ITEMS && (i.value = i.value.slice(0, MAX_ITEMS))
        }
        const l = e => {
                try {
                    let t, a = Date.now(), s = !1, i = null;
                    if (e && e.image)
                        t = e.image,
                        e.timestamp && (a = e.timestamp),
                        !0 === e.is_black && (s = !0),
                        e.color && (i = e.color);
                    else if ("string" == typeof e)
                        t = e;
                    else if (!e)
                        return;
                    if (!t)
                        return;
                    const l = o(t, a);
                    r.has(l) || (r.set(l, a),
                    r.size > MAX_CACHE_SIZE && Array.from(r.entries()).sort(( (e, t) => e[1] - t[1])).slice(0, r.size - MAX_CACHE_SIZE / 2).forEach((e => {
                            r.delete(e[0])
                        }
                    )),
                        n(t, a, s, i))
                } catch (t) {}
            }
        ;
        window.addLiveDropItem = (e, t=!1, a=null) => (n(e || "images/cases/flowers.png", Date.now(), t, a),
            !0),
            window.testMultipleLiveDrops = (e=10, t=300) => {
                const a = ["images/cases/helm4x.png", "images/cases/flowers.png", "images/cases/fen.png", "images/cases/cat.png"];
                let s = 0;
                const i = () => {
                        if (s < e) {
                            const e = a[Math.floor(Math.random() * a.length)]
                                , r = Math.random() > .7
                                , o = Math.random() > .5 ? Math.floor(6 * Math.random()) + 1 : null;
                            window.addLiveDropItem(e, r, o),
                                s++,
                                setTimeout(i, t)
                        }
                    }
                ;
                return i(),
                    `Sending ${e} items with ${t}ms delay...`
            }
        ;
        let c = null;
        return onMounted(( () => {
                !async function() {
                    try {
                        const e = await axios$1.get("/api/live.php");
                        if (Array.isArray(e.data)) {
                            const t = e.data.reverse().slice(0, MAX_ITEMS);
                            t.forEach(( (e, a) => {
                                    const s = "string" == typeof e ? e : e.img
                                        , i = "object" == typeof e && e.color ? e.color : null
                                        , l = Date.now() - 1e3 * (t.length - a);
                                    n(s, l, !1, i);
                                    const c = o(s, l);
                                    r.set(c, l)
                                }
                            ))
                        }
                    } catch (e) {}
                }(),
                a && a("case_opened", l),
                    c = ( () => {
                            const e = e => {
                                    !e.data || "case_opened" !== e.data.type && "case_opened" !== e.data.event || (e.data.data ? l(e.data.data) : "object" == typeof e.data && l(e.data))
                                }
                            ;
                            return window.addEventListener("message", e),
                                () => window.removeEventListener("message", e)
                        }
                    )()
            }
        )),
            onUnmounted(( () => {
                    s && s("case_opened"),
                    c && c()
                }
            )),
            t({
                addNewItem: n
            }),
            (e, t) => (openBlock(),
                createElementBlock("section", _hoisted_1$x, [t[0] || (t[0] = createBaseVNode("div", {
                    class: "live-indicator"
                }, [createBaseVNode("div", {
                    class: "live-text"
                }, "Live"), createBaseVNode("div", {
                    class: "live-dot pulse"
                }, "•")], -1)), createVNode(TransitionGroup, {
                    name: "live-items-transition",
                    tag: "div",
                    class: "live-items"
                }, {
                    default: withCtx(( () => [(openBlock(!0),
                        createElementBlock(Fragment, null, renderList(i.value, ( (e, t) => (openBlock(),
                            createElementBlock("div", {
                                key: e.id,
                                class: normalizeClass(["live-item", [{
                                    black_backdrop: e.isBlack
                                }, e.color ? `color${e.color}` : ""]])
                            }, [createBaseVNode("div", _hoisted_2$u, [createBaseVNode("img", {
                                class: "live-image",
                                src: e.src,
                                alt: "Live Item"
                            }, null, 8, _hoisted_3$r)])], 2)))), 128))])),
                    _: 1
                })]))
    }
}
    , LiveDrop = _export_sfc$1(_sfc_main$z, [["__scopeId", "data-v-44628978"]]);
var lottie = {
    exports: {}
};
(function(module, exports) {
        var factory;
        "undefined" != typeof navigator && (factory = function() {
            var svgNS = "http://www.w3.org/2000/svg"
                , locationHref = ""
                , _useWebWorker = !1
                , initialDefaultFrame = -999999
                , setWebWorker = function(e) {
                _useWebWorker = !!e
            }
                , getWebWorker = function() {
                return _useWebWorker
            }
                , setLocationHref = function(e) {
                locationHref = e
            }
                , getLocationHref = function() {
                return locationHref
            };
            function createTag(e) {
                return document.createElement(e)
            }
            function extendPrototype(e, t) {
                var a, s, i = e.length;
                for (a = 0; a < i; a += 1)
                    for (var r in s = e[a].prototype)
                        Object.prototype.hasOwnProperty.call(s, r) && (t.prototype[r] = s[r])
            }
            function getDescriptor(e, t) {
                return Object.getOwnPropertyDescriptor(e, t)
            }
            function createProxyFunction(e) {
                function t() {}
                return t.prototype = e,
                    t
            }
            var audioControllerFactory = function() {
                function e(e) {
                    this.audios = [],
                        this.audioFactory = e,
                        this._volume = 1,
                        this._isMuted = !1
                }
                return e.prototype = {
                    addAudio: function(e) {
                        this.audios.push(e)
                    },
                    pause: function() {
                        var e, t = this.audios.length;
                        for (e = 0; e < t; e += 1)
                            this.audios[e].pause()
                    },
                    resume: function() {
                        var e, t = this.audios.length;
                        for (e = 0; e < t; e += 1)
                            this.audios[e].resume()
                    },
                    setRate: function(e) {
                        var t, a = this.audios.length;
                        for (t = 0; t < a; t += 1)
                            this.audios[t].setRate(e)
                    },
                    createAudio: function(e) {
                        return this.audioFactory ? this.audioFactory(e) : window.Howl ? new window.Howl({
                            src: [e]
                        }) : {
                            isPlaying: !1,
                            play: function() {
                                this.isPlaying = !0
                            },
                            seek: function() {
                                this.isPlaying = !1
                            },
                            playing: function() {},
                            rate: function() {},
                            setVolume: function() {}
                        }
                    },
                    setAudioFactory: function(e) {
                        this.audioFactory = e
                    },
                    setVolume: function(e) {
                        this._volume = e,
                            this._updateVolume()
                    },
                    mute: function() {
                        this._isMuted = !0,
                            this._updateVolume()
                    },
                    unmute: function() {
                        this._isMuted = !1,
                            this._updateVolume()
                    },
                    getVolume: function() {
                        return this._volume
                    },
                    _updateVolume: function() {
                        var e, t = this.audios.length;
                        for (e = 0; e < t; e += 1)
                            this.audios[e].volume(this._volume * (this._isMuted ? 0 : 1))
                    }
                },
                    function() {
                        return new e
                    }
            }()
                , createTypedArray = function() {
                function e(e, t) {
                    var a, s = 0, i = [];
                    switch (e) {
                        case "int16":
                        case "uint8c":
                            a = 1;
                            break;
                        default:
                            a = 1.1
                    }
                    for (s = 0; s < t; s += 1)
                        i.push(a);
                    return i
                }
                return "function" == typeof Uint8ClampedArray && "function" == typeof Float32Array ? function(t, a) {
                        return "float32" === t ? new Float32Array(a) : "int16" === t ? new Int16Array(a) : "uint8c" === t ? new Uint8ClampedArray(a) : e(t, a)
                    }
                    : e
            }();
            function createSizedArray(e) {
                return Array.apply(null, {
                    length: e
                })
            }
            function _typeof$6(e) {
                return (_typeof$6 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                            return typeof e
                        }
                        : function(e) {
                            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                        }
                )(e)
            }
            var subframeEnabled = !0
                , expressionsPlugin = null
                , expressionsInterfaces = null
                , idPrefix$1 = ""
                , isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent)
                , bmPow = Math.pow
                , bmSqrt = Math.sqrt
                , bmFloor = Math.floor
                , bmMax = Math.max
                , bmMin = Math.min
                , BMMath = {};
            !function() {
                var e, t = ["abs", "acos", "acosh", "asin", "asinh", "atan", "atanh", "atan2", "ceil", "cbrt", "expm1", "clz32", "cos", "cosh", "exp", "floor", "fround", "hypot", "imul", "log", "log1p", "log2", "log10", "max", "min", "pow", "random", "round", "sign", "sin", "sinh", "sqrt", "tan", "tanh", "trunc", "E", "LN10", "LN2", "LOG10E", "LOG2E", "PI", "SQRT1_2", "SQRT2"], a = t.length;
                for (e = 0; e < a; e += 1)
                    BMMath[t[e]] = Math[t[e]]
            }(),
                BMMath.random = Math.random,
                BMMath.abs = function(e) {
                    if ("object" === _typeof$6(e) && e.length) {
                        var t, a = createSizedArray(e.length), s = e.length;
                        for (t = 0; t < s; t += 1)
                            a[t] = Math.abs(e[t]);
                        return a
                    }
                    return Math.abs(e)
                }
            ;
            var defaultCurveSegments = 150
                , degToRads = Math.PI / 180
                , roundCorner = .5519;
            function styleDiv(e) {
                e.style.position = "absolute",
                    e.style.top = 0,
                    e.style.left = 0,
                    e.style.display = "block",
                    e.style.transformOrigin = "0 0",
                    e.style.webkitTransformOrigin = "0 0",
                    e.style.backfaceVisibility = "visible",
                    e.style.webkitBackfaceVisibility = "visible",
                    e.style.transformStyle = "preserve-3d",
                    e.style.webkitTransformStyle = "preserve-3d",
                    e.style.mozTransformStyle = "preserve-3d"
            }
            function BMEnterFrameEvent(e, t, a, s) {
                this.type = e,
                    this.currentTime = t,
                    this.totalTime = a,
                    this.direction = s < 0 ? -1 : 1
            }
            function BMCompleteEvent(e, t) {
                this.type = e,
                    this.direction = t < 0 ? -1 : 1
            }
            function BMCompleteLoopEvent(e, t, a, s) {
                this.type = e,
                    this.currentLoop = a,
                    this.totalLoops = t,
                    this.direction = s < 0 ? -1 : 1
            }
            function BMSegmentStartEvent(e, t, a) {
                this.type = e,
                    this.firstFrame = t,
                    this.totalFrames = a
            }
            function BMDestroyEvent(e, t) {
                this.type = e,
                    this.target = t
            }
            function BMRenderFrameErrorEvent(e, t) {
                this.type = "renderFrameError",
                    this.nativeError = e,
                    this.currentTime = t
            }
            function BMConfigErrorEvent(e) {
                this.type = "configError",
                    this.nativeError = e
            }
            var createElementID = (_count = 0,
                    function() {
                        return idPrefix$1 + "__lottie_element_" + (_count += 1)
                    }
            ), _count;
            function HSVtoRGB(e, t, a) {
                var s, i, r, o, n, l, c, d;
                switch (l = a * (1 - t),
                    c = a * (1 - (n = 6 * e - (o = Math.floor(6 * e))) * t),
                    d = a * (1 - (1 - n) * t),
                o % 6) {
                    case 0:
                        s = a,
                            i = d,
                            r = l;
                        break;
                    case 1:
                        s = c,
                            i = a,
                            r = l;
                        break;
                    case 2:
                        s = l,
                            i = a,
                            r = d;
                        break;
                    case 3:
                        s = l,
                            i = c,
                            r = a;
                        break;
                    case 4:
                        s = d,
                            i = l,
                            r = a;
                        break;
                    case 5:
                        s = a,
                            i = l,
                            r = c
                }
                return [s, i, r]
            }
            function RGBtoHSV(e, t, a) {
                var s, i = Math.max(e, t, a), r = Math.min(e, t, a), o = i - r, n = 0 === i ? 0 : o / i, l = i / 255;
                switch (i) {
                    case r:
                        s = 0;
                        break;
                    case e:
                        s = t - a + o * (t < a ? 6 : 0),
                            s /= 6 * o;
                        break;
                    case t:
                        s = a - e + 2 * o,
                            s /= 6 * o;
                        break;
                    case a:
                        s = e - t + 4 * o,
                            s /= 6 * o
                }
                return [s, n, l]
            }
            function addSaturationToRGB(e, t) {
                var a = RGBtoHSV(255 * e[0], 255 * e[1], 255 * e[2]);
                return a[1] += t,
                    a[1] > 1 ? a[1] = 1 : a[1] <= 0 && (a[1] = 0),
                    HSVtoRGB(a[0], a[1], a[2])
            }
            function addBrightnessToRGB(e, t) {
                var a = RGBtoHSV(255 * e[0], 255 * e[1], 255 * e[2]);
                return a[2] += t,
                    a[2] > 1 ? a[2] = 1 : a[2] < 0 && (a[2] = 0),
                    HSVtoRGB(a[0], a[1], a[2])
            }
            function addHueToRGB(e, t) {
                var a = RGBtoHSV(255 * e[0], 255 * e[1], 255 * e[2]);
                return a[0] += t / 360,
                    a[0] > 1 ? a[0] -= 1 : a[0] < 0 && (a[0] += 1),
                    HSVtoRGB(a[0], a[1], a[2])
            }
            var rgbToHex = function() {
                var e, t, a = [];
                for (e = 0; e < 256; e += 1)
                    t = e.toString(16),
                        a[e] = 1 === t.length ? "0" + t : t;
                return function(e, t, s) {
                    return e < 0 && (e = 0),
                    t < 0 && (t = 0),
                    s < 0 && (s = 0),
                    "#" + a[e] + a[t] + a[s]
                }
            }()
                , setSubframeEnabled = function(e) {
                subframeEnabled = !!e
            }
                , getSubframeEnabled = function() {
                return subframeEnabled
            }
                , setExpressionsPlugin = function(e) {
                expressionsPlugin = e
            }
                , getExpressionsPlugin = function() {
                return expressionsPlugin
            }
                , setExpressionInterfaces = function(e) {
                expressionsInterfaces = e
            }
                , getExpressionInterfaces = function() {
                return expressionsInterfaces
            }
                , setDefaultCurveSegments = function(e) {
                defaultCurveSegments = e
            }
                , getDefaultCurveSegments = function() {
                return defaultCurveSegments
            }
                , setIdPrefix = function(e) {
                idPrefix$1 = e
            };
            function createNS(e) {
                return document.createElementNS(svgNS, e)
            }
            function _typeof$5(e) {
                return (_typeof$5 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                            return typeof e
                        }
                        : function(e) {
                            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                        }
                )(e)
            }
            var dataManager = function() {
                var e, t, a = 1, s = [], i = {
                    onmessage: function() {},
                    postMessage: function(t) {
                        e({
                            data: t
                        })
                    }
                }, r = {
                    postMessage: function(e) {
                        i.onmessage({
                            data: e
                        })
                    }
                };
                function o() {
                    t || ((t = function(t) {
                            if (window.Worker && window.Blob && getWebWorker()) {
                                var a = new Blob(["var _workerSelf = self; self.onmessage = ", t.toString()],{
                                    type: "text/javascript"
                                })
                                    , s = URL.createObjectURL(a);
                                return new Worker(s)
                            }
                            return e = t,
                                i
                        }((function(e) {
                                if (r.dataManager || (r.dataManager = function() {
                                    function e(i, r) {
                                        var o, n, l, c, d, p, u = i.length;
                                        for (n = 0; n < u; n += 1)
                                            if ("ks"in (o = i[n]) && !o.completed) {
                                                if (o.completed = !0,
                                                    o.hasMask) {
                                                    var m = o.masksProperties;
                                                    for (c = m.length,
                                                             l = 0; l < c; l += 1)
                                                        if (m[l].pt.k.i)
                                                            s(m[l].pt.k);
                                                        else
                                                            for (p = m[l].pt.k.length,
                                                                     d = 0; d < p; d += 1)
                                                                m[l].pt.k[d].s && s(m[l].pt.k[d].s[0]),
                                                                m[l].pt.k[d].e && s(m[l].pt.k[d].e[0])
                                                }
                                                0 === o.ty ? (o.layers = t(o.refId, r),
                                                    e(o.layers, r)) : 4 === o.ty ? a(o.shapes) : 5 === o.ty && h(o)
                                            }
                                    }
                                    function t(e, t) {
                                        var a = function(e, t) {
                                            for (var a = 0, s = t.length; a < s; ) {
                                                if (t[a].id === e)
                                                    return t[a];
                                                a += 1
                                            }
                                            return null
                                        }(e, t);
                                        return a ? a.layers.__used ? JSON.parse(JSON.stringify(a.layers)) : (a.layers.__used = !0,
                                            a.layers) : null
                                    }
                                    function a(e) {
                                        var t, i, r;
                                        for (t = e.length - 1; t >= 0; t -= 1)
                                            if ("sh" === e[t].ty)
                                                if (e[t].ks.k.i)
                                                    s(e[t].ks.k);
                                                else
                                                    for (r = e[t].ks.k.length,
                                                             i = 0; i < r; i += 1)
                                                        e[t].ks.k[i].s && s(e[t].ks.k[i].s[0]),
                                                        e[t].ks.k[i].e && s(e[t].ks.k[i].e[0]);
                                            else
                                                "gr" === e[t].ty && a(e[t].it)
                                    }
                                    function s(e) {
                                        var t, a = e.i.length;
                                        for (t = 0; t < a; t += 1)
                                            e.i[t][0] += e.v[t][0],
                                                e.i[t][1] += e.v[t][1],
                                                e.o[t][0] += e.v[t][0],
                                                e.o[t][1] += e.v[t][1]
                                    }
                                    function i(e, t) {
                                        var a = t ? t.split(".") : [100, 100, 100];
                                        return e[0] > a[0] || !(a[0] > e[0]) && (e[1] > a[1] || !(a[1] > e[1]) && (e[2] > a[2] || !(a[2] > e[2]) && null))
                                    }
                                    var r, o = function() {
                                        var e = [4, 4, 14];
                                        function t(e) {
                                            var t, a, s, i = e.length;
                                            for (t = 0; t < i; t += 1)
                                                5 === e[t].ty && (s = void 0,
                                                    s = (a = e[t]).t.d,
                                                    a.t.d = {
                                                        k: [{
                                                            s: s,
                                                            t: 0
                                                        }]
                                                    })
                                        }
                                        return function(a) {
                                            if (i(e, a.v) && (t(a.layers),
                                                a.assets)) {
                                                var s, r = a.assets.length;
                                                for (s = 0; s < r; s += 1)
                                                    a.assets[s].layers && t(a.assets[s].layers)
                                            }
                                        }
                                    }(), n = (r = [4, 7, 99],
                                            function(e) {
                                                if (e.chars && !i(r, e.v)) {
                                                    var t, s = e.chars.length;
                                                    for (t = 0; t < s; t += 1) {
                                                        var o = e.chars[t];
                                                        o.data && o.data.shapes && (a(o.data.shapes),
                                                            o.data.ip = 0,
                                                            o.data.op = 99999,
                                                            o.data.st = 0,
                                                            o.data.sr = 1,
                                                            o.data.ks = {
                                                                p: {
                                                                    k: [0, 0],
                                                                    a: 0
                                                                },
                                                                s: {
                                                                    k: [100, 100],
                                                                    a: 0
                                                                },
                                                                a: {
                                                                    k: [0, 0],
                                                                    a: 0
                                                                },
                                                                r: {
                                                                    k: 0,
                                                                    a: 0
                                                                },
                                                                o: {
                                                                    k: 100,
                                                                    a: 0
                                                                }
                                                            },
                                                        e.chars[t].t || (o.data.shapes.push({
                                                            ty: "no"
                                                        }),
                                                            o.data.shapes[0].it.push({
                                                                p: {
                                                                    k: [0, 0],
                                                                    a: 0
                                                                },
                                                                s: {
                                                                    k: [100, 100],
                                                                    a: 0
                                                                },
                                                                a: {
                                                                    k: [0, 0],
                                                                    a: 0
                                                                },
                                                                r: {
                                                                    k: 0,
                                                                    a: 0
                                                                },
                                                                o: {
                                                                    k: 100,
                                                                    a: 0
                                                                },
                                                                sk: {
                                                                    k: 0,
                                                                    a: 0
                                                                },
                                                                sa: {
                                                                    k: 0,
                                                                    a: 0
                                                                },
                                                                ty: "tr"
                                                            })))
                                                    }
                                                }
                                            }
                                    ), l = function() {
                                        var e = [5, 7, 15];
                                        function t(e) {
                                            var t, a, s = e.length;
                                            for (t = 0; t < s; t += 1)
                                                5 === e[t].ty && (a = void 0,
                                                "number" == typeof (a = e[t].t.p).a && (a.a = {
                                                    a: 0,
                                                    k: a.a
                                                }),
                                                "number" == typeof a.p && (a.p = {
                                                    a: 0,
                                                    k: a.p
                                                }),
                                                "number" == typeof a.r && (a.r = {
                                                    a: 0,
                                                    k: a.r
                                                }))
                                        }
                                        return function(a) {
                                            if (i(e, a.v) && (t(a.layers),
                                                a.assets)) {
                                                var s, r = a.assets.length;
                                                for (s = 0; s < r; s += 1)
                                                    a.assets[s].layers && t(a.assets[s].layers)
                                            }
                                        }
                                    }(), c = function() {
                                        var e = [4, 1, 9];
                                        function t(e) {
                                            var a, s, i, r = e.length;
                                            for (a = 0; a < r; a += 1)
                                                if ("gr" === e[a].ty)
                                                    t(e[a].it);
                                                else if ("fl" === e[a].ty || "st" === e[a].ty)
                                                    if (e[a].c.k && e[a].c.k[0].i)
                                                        for (i = e[a].c.k.length,
                                                                 s = 0; s < i; s += 1)
                                                            e[a].c.k[s].s && (e[a].c.k[s].s[0] /= 255,
                                                                e[a].c.k[s].s[1] /= 255,
                                                                e[a].c.k[s].s[2] /= 255,
                                                                e[a].c.k[s].s[3] /= 255),
                                                            e[a].c.k[s].e && (e[a].c.k[s].e[0] /= 255,
                                                                e[a].c.k[s].e[1] /= 255,
                                                                e[a].c.k[s].e[2] /= 255,
                                                                e[a].c.k[s].e[3] /= 255);
                                                    else
                                                        e[a].c.k[0] /= 255,
                                                            e[a].c.k[1] /= 255,
                                                            e[a].c.k[2] /= 255,
                                                            e[a].c.k[3] /= 255
                                        }
                                        function a(e) {
                                            var a, s = e.length;
                                            for (a = 0; a < s; a += 1)
                                                4 === e[a].ty && t(e[a].shapes)
                                        }
                                        return function(t) {
                                            if (i(e, t.v) && (a(t.layers),
                                                t.assets)) {
                                                var s, r = t.assets.length;
                                                for (s = 0; s < r; s += 1)
                                                    t.assets[s].layers && a(t.assets[s].layers)
                                            }
                                        }
                                    }(), d = function() {
                                        var e = [4, 4, 18];
                                        function t(e) {
                                            var a, s, i;
                                            for (a = e.length - 1; a >= 0; a -= 1)
                                                if ("sh" === e[a].ty)
                                                    if (e[a].ks.k.i)
                                                        e[a].ks.k.c = e[a].closed;
                                                    else
                                                        for (i = e[a].ks.k.length,
                                                                 s = 0; s < i; s += 1)
                                                            e[a].ks.k[s].s && (e[a].ks.k[s].s[0].c = e[a].closed),
                                                            e[a].ks.k[s].e && (e[a].ks.k[s].e[0].c = e[a].closed);
                                                else
                                                    "gr" === e[a].ty && t(e[a].it)
                                        }
                                        function a(e) {
                                            var a, s, i, r, o, n, l = e.length;
                                            for (s = 0; s < l; s += 1) {
                                                if ((a = e[s]).hasMask) {
                                                    var c = a.masksProperties;
                                                    for (r = c.length,
                                                             i = 0; i < r; i += 1)
                                                        if (c[i].pt.k.i)
                                                            c[i].pt.k.c = c[i].cl;
                                                        else
                                                            for (n = c[i].pt.k.length,
                                                                     o = 0; o < n; o += 1)
                                                                c[i].pt.k[o].s && (c[i].pt.k[o].s[0].c = c[i].cl),
                                                                c[i].pt.k[o].e && (c[i].pt.k[o].e[0].c = c[i].cl)
                                                }
                                                4 === a.ty && t(a.shapes)
                                            }
                                        }
                                        return function(t) {
                                            if (i(e, t.v) && (a(t.layers),
                                                t.assets)) {
                                                var s, r = t.assets.length;
                                                for (s = 0; s < r; s += 1)
                                                    t.assets[s].layers && a(t.assets[s].layers)
                                            }
                                        }
                                    }();
                                    function h(e) {
                                        0 === e.t.a.length && e.t.p
                                    }
                                    var p = {
                                        completeData: function(a) {
                                            a.__complete || (c(a),
                                                o(a),
                                                n(a),
                                                l(a),
                                                d(a),
                                                e(a.layers, a.assets),
                                                function(a, s) {
                                                    if (a) {
                                                        var i = 0
                                                            , r = a.length;
                                                        for (i = 0; i < r; i += 1)
                                                            1 === a[i].t && (a[i].data.layers = t(a[i].data.refId, s),
                                                                e(a[i].data.layers, s))
                                                    }
                                                }(a.chars, a.assets),
                                                a.__complete = !0)
                                        }
                                    };
                                    return p.checkColors = c,
                                        p.checkChars = n,
                                        p.checkPathProperties = l,
                                        p.checkShapes = d,
                                        p.completeLayers = e,
                                        p
                                }()),
                                r.assetLoader || (r.assetLoader = function() {
                                    function e(e) {
                                        var t = e.getResponseHeader("content-type");
                                        return t && "json" === e.responseType && -1 !== t.indexOf("json") || e.response && "object" === _typeof$5(e.response) ? e.response : e.response && "string" == typeof e.response ? JSON.parse(e.response) : e.responseText ? JSON.parse(e.responseText) : null
                                    }
                                    return {
                                        load: function(t, a, s, i) {
                                            var r, o = new XMLHttpRequest;
                                            try {
                                                o.responseType = "json"
                                            } catch (n) {}
                                            o.onreadystatechange = function() {
                                                if (4 === o.readyState)
                                                    if (200 === o.status)
                                                        r = e(o),
                                                            s(r);
                                                    else
                                                        try {
                                                            r = e(o),
                                                                s(r)
                                                        } catch (n) {
                                                            i && i(n)
                                                        }
                                            }
                                            ;
                                            try {
                                                o.open(["G", "E", "T"].join(""), t, !0)
                                            } catch (l) {
                                                o.open(["G", "E", "T"].join(""), a + "/" + t, !0)
                                            }
                                            o.send()
                                        }
                                    }
                                }()),
                                "loadAnimation" === e.data.type)
                                    r.assetLoader.load(e.data.path, e.data.fullPath, (function(t) {
                                            r.dataManager.completeData(t),
                                                r.postMessage({
                                                    id: e.data.id,
                                                    payload: t,
                                                    status: "success"
                                                })
                                        }
                                    ), (function() {
                                            r.postMessage({
                                                id: e.data.id,
                                                status: "error"
                                            })
                                        }
                                    ));
                                else if ("complete" === e.data.type) {
                                    var t = e.data.animation;
                                    r.dataManager.completeData(t),
                                        r.postMessage({
                                            id: e.data.id,
                                            payload: t,
                                            status: "success"
                                        })
                                } else
                                    "loadData" === e.data.type && r.assetLoader.load(e.data.path, e.data.fullPath, (function(t) {
                                            r.postMessage({
                                                id: e.data.id,
                                                payload: t,
                                                status: "success"
                                            })
                                        }
                                    ), (function() {
                                            r.postMessage({
                                                id: e.data.id,
                                                status: "error"
                                            })
                                        }
                                    ))
                            }
                        ))).onmessage = function(e) {
                            var t = e.data
                                , a = t.id
                                , i = s[a];
                            s[a] = null,
                                "success" === t.status ? i.onComplete(t.payload) : i.onError && i.onError()
                        }
                    )
                }
                function n(e, t) {
                    var i = "processId_" + (a += 1);
                    return s[i] = {
                        onComplete: e,
                        onError: t
                    },
                        i
                }
                return {
                    loadAnimation: function(e, a, s) {
                        o();
                        var i = n(a, s);
                        t.postMessage({
                            type: "loadAnimation",
                            path: e,
                            fullPath: window.location.origin + window.location.pathname,
                            id: i
                        })
                    },
                    loadData: function(e, a, s) {
                        o();
                        var i = n(a, s);
                        t.postMessage({
                            type: "loadData",
                            path: e,
                            fullPath: window.location.origin + window.location.pathname,
                            id: i
                        })
                    },
                    completeAnimation: function(e, a, s) {
                        o();
                        var i = n(a, s);
                        t.postMessage({
                            type: "complete",
                            animation: e,
                            id: i
                        })
                    }
                }
            }()
                , ImagePreloader = function() {
                var e = function() {
                    var e = createTag("canvas");
                    e.width = 1,
                        e.height = 1;
                    var t = e.getContext("2d");
                    return t.fillStyle = "rgba(0,0,0,0)",
                        t.fillRect(0, 0, 1, 1),
                        e
                }();
                function t() {
                    this.loadedAssets += 1,
                    this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages && this.imagesLoadedCb && this.imagesLoadedCb(null)
                }
                function a() {
                    this.loadedFootagesCount += 1,
                    this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages && this.imagesLoadedCb && this.imagesLoadedCb(null)
                }
                function s(e, t, a) {
                    var s = "";
                    if (e.e)
                        s = e.p;
                    else if (t) {
                        var i = e.p;
                        -1 !== i.indexOf("images/") && (i = i.split("/")[1]),
                            s = t + i
                    } else
                        s = a,
                            s += e.u ? e.u : "",
                            s += e.p;
                    return s
                }
                function i(e) {
                    var t = 0
                        , a = setInterval(function() {
                        (e.getBBox().width || t > 500) && (this._imageLoaded(),
                            clearInterval(a)),
                            t += 1
                    }
                        .bind(this), 50)
                }
                function r(e) {
                    var t = {
                        assetData: e
                    }
                        , a = s(e, this.assetsPath, this.path);
                    return dataManager.loadData(a, function(e) {
                        t.img = e,
                            this._footageLoaded()
                    }
                        .bind(this), function() {
                        t.img = {},
                            this._footageLoaded()
                    }
                        .bind(this)),
                        t
                }
                function o() {
                    this._imageLoaded = t.bind(this),
                        this._footageLoaded = a.bind(this),
                        this.testImageLoaded = i.bind(this),
                        this.createFootageData = r.bind(this),
                        this.assetsPath = "",
                        this.path = "",
                        this.totalImages = 0,
                        this.totalFootages = 0,
                        this.loadedAssets = 0,
                        this.loadedFootagesCount = 0,
                        this.imagesLoadedCb = null,
                        this.images = []
                }
                return o.prototype = {
                    loadAssets: function(e, t) {
                        var a;
                        this.imagesLoadedCb = t;
                        var s = e.length;
                        for (a = 0; a < s; a += 1)
                            e[a].layers || (e[a].t && "seq" !== e[a].t ? 3 === e[a].t && (this.totalFootages += 1,
                                this.images.push(this.createFootageData(e[a]))) : (this.totalImages += 1,
                                this.images.push(this._createImageData(e[a]))))
                    },
                    setAssetsPath: function(e) {
                        this.assetsPath = e || ""
                    },
                    setPath: function(e) {
                        this.path = e || ""
                    },
                    loadedImages: function() {
                        return this.totalImages === this.loadedAssets
                    },
                    loadedFootages: function() {
                        return this.totalFootages === this.loadedFootagesCount
                    },
                    destroy: function() {
                        this.imagesLoadedCb = null,
                            this.images.length = 0
                    },
                    getAsset: function(e) {
                        for (var t = 0, a = this.images.length; t < a; ) {
                            if (this.images[t].assetData === e)
                                return this.images[t].img;
                            t += 1
                        }
                        return null
                    },
                    createImgData: function(t) {
                        var a = s(t, this.assetsPath, this.path)
                            , i = createTag("img");
                        i.crossOrigin = "anonymous",
                            i.addEventListener("load", this._imageLoaded, !1),
                            i.addEventListener("error", function() {
                                r.img = e,
                                    this._imageLoaded()
                            }
                                .bind(this), !1),
                            i.src = a;
                        var r = {
                            img: i,
                            assetData: t
                        };
                        return r
                    },
                    createImageData: function(t) {
                        var a = s(t, this.assetsPath, this.path)
                            , i = createNS("image");
                        isSafari ? this.testImageLoaded(i) : i.addEventListener("load", this._imageLoaded, !1),
                            i.addEventListener("error", function() {
                                r.img = e,
                                    this._imageLoaded()
                            }
                                .bind(this), !1),
                            i.setAttributeNS("http://www.w3.org/1999/xlink", "href", a),
                            this._elementHelper.append ? this._elementHelper.append(i) : this._elementHelper.appendChild(i);
                        var r = {
                            img: i,
                            assetData: t
                        };
                        return r
                    },
                    imageLoaded: t,
                    footageLoaded: a,
                    setCacheType: function(e, t) {
                        "svg" === e ? (this._elementHelper = t,
                            this._createImageData = this.createImageData.bind(this)) : this._createImageData = this.createImgData.bind(this)
                    }
                },
                    o
            }();
            function BaseEvent() {}
            BaseEvent.prototype = {
                triggerEvent: function(e, t) {
                    if (this._cbs[e])
                        for (var a = this._cbs[e], s = 0; s < a.length; s += 1)
                            a[s](t)
                },
                addEventListener: function(e, t) {
                    return this._cbs[e] || (this._cbs[e] = []),
                        this._cbs[e].push(t),
                        function() {
                            this.removeEventListener(e, t)
                        }
                            .bind(this)
                },
                removeEventListener: function(e, t) {
                    if (t) {
                        if (this._cbs[e]) {
                            for (var a = 0, s = this._cbs[e].length; a < s; )
                                this._cbs[e][a] === t && (this._cbs[e].splice(a, 1),
                                    a -= 1,
                                    s -= 1),
                                    a += 1;
                            this._cbs[e].length || (this._cbs[e] = null)
                        }
                    } else
                        this._cbs[e] = null
                }
            };
            var markerParser = function() {
                function e(e) {
                    for (var t, a = e.split("\r\n"), s = {}, i = 0, r = 0; r < a.length; r += 1)
                        2 === (t = a[r].split(":")).length && (s[t[0]] = t[1].trim(),
                            i += 1);
                    if (0 === i)
                        throw new Error;
                    return s
                }
                return function(t) {
                    for (var a = [], s = 0; s < t.length; s += 1) {
                        var i = t[s]
                            , r = {
                            time: i.tm,
                            duration: i.dr
                        };
                        try {
                            r.payload = JSON.parse(t[s].cm)
                        } catch (o) {
                            try {
                                r.payload = e(t[s].cm)
                            } catch (n) {
                                r.payload = {
                                    name: t[s].cm
                                }
                            }
                        }
                        a.push(r)
                    }
                    return a
                }
            }()
                , ProjectInterface = function() {
                function e(e) {
                    this.compositions.push(e)
                }
                return function() {
                    function t(e) {
                        for (var t = 0, a = this.compositions.length; t < a; ) {
                            if (this.compositions[t].data && this.compositions[t].data.nm === e)
                                return this.compositions[t].prepareFrame && this.compositions[t].data.xt && this.compositions[t].prepareFrame(this.currentFrame),
                                    this.compositions[t].compInterface;
                            t += 1
                        }
                        return null
                    }
                    return t.compositions = [],
                        t.currentFrame = 0,
                        t.registerComposition = e,
                        t
                }
            }()
                , renderers = {}
                , registerRenderer = function(e, t) {
                renderers[e] = t
            };
            function getRenderer(e) {
                return renderers[e]
            }
            function getRegisteredRenderer() {
                if (renderers.canvas)
                    return "canvas";
                for (var e in renderers)
                    if (renderers[e])
                        return e;
                return ""
            }
            function _typeof$4(e) {
                return (_typeof$4 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                            return typeof e
                        }
                        : function(e) {
                            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                        }
                )(e)
            }
            var AnimationItem = function() {
                this._cbs = [],
                    this.name = "",
                    this.path = "",
                    this.isLoaded = !1,
                    this.currentFrame = 0,
                    this.currentRawFrame = 0,
                    this.firstFrame = 0,
                    this.totalFrames = 0,
                    this.frameRate = 0,
                    this.frameMult = 0,
                    this.playSpeed = 1,
                    this.playDirection = 1,
                    this.playCount = 0,
                    this.animationData = {},
                    this.assets = [],
                    this.isPaused = !0,
                    this.autoplay = !1,
                    this.loop = !0,
                    this.renderer = null,
                    this.animationID = createElementID(),
                    this.assetsPath = "",
                    this.timeCompleted = 0,
                    this.segmentPos = 0,
                    this.isSubframeEnabled = getSubframeEnabled(),
                    this.segments = [],
                    this._idle = !0,
                    this._completedLoop = !1,
                    this.projectInterface = ProjectInterface(),
                    this.imagePreloader = new ImagePreloader,
                    this.audioController = audioControllerFactory(),
                    this.markers = [],
                    this.configAnimation = this.configAnimation.bind(this),
                    this.onSetupError = this.onSetupError.bind(this),
                    this.onSegmentComplete = this.onSegmentComplete.bind(this),
                    this.drawnFrameEvent = new BMEnterFrameEvent("drawnFrame",0,0,0),
                    this.expressionsPlugin = getExpressionsPlugin()
            };
            extendPrototype([BaseEvent], AnimationItem),
                AnimationItem.prototype.setParams = function(e) {
                    (e.wrapper || e.container) && (this.wrapper = e.wrapper || e.container);
                    var t = "svg";
                    e.animType ? t = e.animType : e.renderer && (t = e.renderer);
                    var a = getRenderer(t);
                    this.renderer = new a(this,e.rendererSettings),
                        this.imagePreloader.setCacheType(t, this.renderer.globalData.defs),
                        this.renderer.setProjectInterface(this.projectInterface),
                        this.animType = t,
                        "" === e.loop || null === e.loop || void 0 === e.loop || !0 === e.loop ? this.loop = !0 : !1 === e.loop ? this.loop = !1 : this.loop = parseInt(e.loop, 10),
                        this.autoplay = !("autoplay"in e) || e.autoplay,
                        this.name = e.name ? e.name : "",
                        this.autoloadSegments = !Object.prototype.hasOwnProperty.call(e, "autoloadSegments") || e.autoloadSegments,
                        this.assetsPath = e.assetsPath,
                        this.initialSegment = e.initialSegment,
                    e.audioFactory && this.audioController.setAudioFactory(e.audioFactory),
                        e.animationData ? this.setupAnimation(e.animationData) : e.path && (-1 !== e.path.lastIndexOf("\\") ? this.path = e.path.substr(0, e.path.lastIndexOf("\\") + 1) : this.path = e.path.substr(0, e.path.lastIndexOf("/") + 1),
                            this.fileName = e.path.substr(e.path.lastIndexOf("/") + 1),
                            this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf(".json")),
                            dataManager.loadAnimation(e.path, this.configAnimation, this.onSetupError))
                }
                ,
                AnimationItem.prototype.onSetupError = function() {
                    this.trigger("data_failed")
                }
                ,
                AnimationItem.prototype.setupAnimation = function(e) {
                    dataManager.completeAnimation(e, this.configAnimation)
                }
                ,
                AnimationItem.prototype.setData = function(e, t) {
                    t && "object" !== _typeof$4(t) && (t = JSON.parse(t));
                    var a = {
                        wrapper: e,
                        animationData: t
                    }
                        , s = e.attributes;
                    a.path = s.getNamedItem("data-animation-path") ? s.getNamedItem("data-animation-path").value : s.getNamedItem("data-bm-path") ? s.getNamedItem("data-bm-path").value : s.getNamedItem("bm-path") ? s.getNamedItem("bm-path").value : "",
                        a.animType = s.getNamedItem("data-anim-type") ? s.getNamedItem("data-anim-type").value : s.getNamedItem("data-bm-type") ? s.getNamedItem("data-bm-type").value : s.getNamedItem("bm-type") ? s.getNamedItem("bm-type").value : s.getNamedItem("data-bm-renderer") ? s.getNamedItem("data-bm-renderer").value : s.getNamedItem("bm-renderer") ? s.getNamedItem("bm-renderer").value : getRegisteredRenderer() || "canvas";
                    var i = s.getNamedItem("data-anim-loop") ? s.getNamedItem("data-anim-loop").value : s.getNamedItem("data-bm-loop") ? s.getNamedItem("data-bm-loop").value : s.getNamedItem("bm-loop") ? s.getNamedItem("bm-loop").value : "";
                    "false" === i ? a.loop = !1 : "true" === i ? a.loop = !0 : "" !== i && (a.loop = parseInt(i, 10));
                    var r = s.getNamedItem("data-anim-autoplay") ? s.getNamedItem("data-anim-autoplay").value : s.getNamedItem("data-bm-autoplay") ? s.getNamedItem("data-bm-autoplay").value : !s.getNamedItem("bm-autoplay") || s.getNamedItem("bm-autoplay").value;
                    a.autoplay = "false" !== r,
                        a.name = s.getNamedItem("data-name") ? s.getNamedItem("data-name").value : s.getNamedItem("data-bm-name") ? s.getNamedItem("data-bm-name").value : s.getNamedItem("bm-name") ? s.getNamedItem("bm-name").value : "",
                    "false" === (s.getNamedItem("data-anim-prerender") ? s.getNamedItem("data-anim-prerender").value : s.getNamedItem("data-bm-prerender") ? s.getNamedItem("data-bm-prerender").value : s.getNamedItem("bm-prerender") ? s.getNamedItem("bm-prerender").value : "") && (a.prerender = !1),
                        a.path ? this.setParams(a) : this.trigger("destroy")
                }
                ,
                AnimationItem.prototype.includeLayers = function(e) {
                    e.op > this.animationData.op && (this.animationData.op = e.op,
                        this.totalFrames = Math.floor(e.op - this.animationData.ip));
                    var t, a, s = this.animationData.layers, i = s.length, r = e.layers, o = r.length;
                    for (a = 0; a < o; a += 1)
                        for (t = 0; t < i; ) {
                            if (s[t].id === r[a].id) {
                                s[t] = r[a];
                                break
                            }
                            t += 1
                        }
                    if ((e.chars || e.fonts) && (this.renderer.globalData.fontManager.addChars(e.chars),
                        this.renderer.globalData.fontManager.addFonts(e.fonts, this.renderer.globalData.defs)),
                        e.assets)
                        for (i = e.assets.length,
                                 t = 0; t < i; t += 1)
                            this.animationData.assets.push(e.assets[t]);
                    this.animationData.__complete = !1,
                        dataManager.completeAnimation(this.animationData, this.onSegmentComplete)
                }
                ,
                AnimationItem.prototype.onSegmentComplete = function(e) {
                    this.animationData = e;
                    var t = getExpressionsPlugin();
                    t && t.initExpressions(this),
                        this.loadNextSegment()
                }
                ,
                AnimationItem.prototype.loadNextSegment = function() {
                    var e = this.animationData.segments;
                    if (!e || 0 === e.length || !this.autoloadSegments)
                        return this.trigger("data_ready"),
                            void (this.timeCompleted = this.totalFrames);
                    var t = e.shift();
                    this.timeCompleted = t.time * this.frameRate;
                    var a = this.path + this.fileName + "_" + this.segmentPos + ".json";
                    this.segmentPos += 1,
                        dataManager.loadData(a, this.includeLayers.bind(this), function() {
                            this.trigger("data_failed")
                        }
                            .bind(this))
                }
                ,
                AnimationItem.prototype.loadSegments = function() {
                    this.animationData.segments || (this.timeCompleted = this.totalFrames),
                        this.loadNextSegment()
                }
                ,
                AnimationItem.prototype.imagesLoaded = function() {
                    this.trigger("loaded_images"),
                        this.checkLoaded()
                }
                ,
                AnimationItem.prototype.preloadImages = function() {
                    this.imagePreloader.setAssetsPath(this.assetsPath),
                        this.imagePreloader.setPath(this.path),
                        this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this))
                }
                ,
                AnimationItem.prototype.configAnimation = function(e) {
                    if (this.renderer)
                        try {
                            this.animationData = e,
                                this.initialSegment ? (this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0]),
                                    this.firstFrame = Math.round(this.initialSegment[0])) : (this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip),
                                    this.firstFrame = Math.round(this.animationData.ip)),
                                this.renderer.configAnimation(e),
                            e.assets || (e.assets = []),
                                this.assets = this.animationData.assets,
                                this.frameRate = this.animationData.fr,
                                this.frameMult = this.animationData.fr / 1e3,
                                this.renderer.searchExtraCompositions(e.assets),
                                this.markers = markerParser(e.markers || []),
                                this.trigger("config_ready"),
                                this.preloadImages(),
                                this.loadSegments(),
                                this.updaFrameModifier(),
                                this.waitForFontsLoaded(),
                            this.isPaused && this.audioController.pause()
                        } catch (t) {
                            this.triggerConfigError(t)
                        }
                }
                ,
                AnimationItem.prototype.waitForFontsLoaded = function() {
                    this.renderer && (this.renderer.globalData.fontManager.isLoaded ? this.checkLoaded() : setTimeout(this.waitForFontsLoaded.bind(this), 20))
                }
                ,
                AnimationItem.prototype.checkLoaded = function() {
                    if (!this.isLoaded && this.renderer.globalData.fontManager.isLoaded && (this.imagePreloader.loadedImages() || "canvas" !== this.renderer.rendererType) && this.imagePreloader.loadedFootages()) {
                        this.isLoaded = !0;
                        var e = getExpressionsPlugin();
                        e && e.initExpressions(this),
                            this.renderer.initItems(),
                            setTimeout(function() {
                                this.trigger("DOMLoaded")
                            }
                                .bind(this), 0),
                            this.gotoFrame(),
                        this.autoplay && this.play()
                    }
                }
                ,
                AnimationItem.prototype.resize = function(e, t) {
                    var a = "number" == typeof e ? e : void 0
                        , s = "number" == typeof t ? t : void 0;
                    this.renderer.updateContainerSize(a, s)
                }
                ,
                AnimationItem.prototype.setSubframe = function(e) {
                    this.isSubframeEnabled = !!e
                }
                ,
                AnimationItem.prototype.gotoFrame = function() {
                    this.currentFrame = this.isSubframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame,
                    this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted && (this.currentFrame = this.timeCompleted),
                        this.trigger("enterFrame"),
                        this.renderFrame(),
                        this.trigger("drawnFrame")
                }
                ,
                AnimationItem.prototype.renderFrame = function() {
                    if (!1 !== this.isLoaded && this.renderer)
                        try {
                            this.expressionsPlugin && this.expressionsPlugin.resetFrame(),
                                this.renderer.renderFrame(this.currentFrame + this.firstFrame)
                        } catch (e) {
                            this.triggerRenderFrameError(e)
                        }
                }
                ,
                AnimationItem.prototype.play = function(e) {
                    e && this.name !== e || !0 === this.isPaused && (this.isPaused = !1,
                        this.trigger("_play"),
                        this.audioController.resume(),
                    this._idle && (this._idle = !1,
                        this.trigger("_active")))
                }
                ,
                AnimationItem.prototype.pause = function(e) {
                    e && this.name !== e || !1 === this.isPaused && (this.isPaused = !0,
                        this.trigger("_pause"),
                        this._idle = !0,
                        this.trigger("_idle"),
                        this.audioController.pause())
                }
                ,
                AnimationItem.prototype.togglePause = function(e) {
                    e && this.name !== e || (!0 === this.isPaused ? this.play() : this.pause())
                }
                ,
                AnimationItem.prototype.stop = function(e) {
                    e && this.name !== e || (this.pause(),
                        this.playCount = 0,
                        this._completedLoop = !1,
                        this.setCurrentRawFrameValue(0))
                }
                ,
                AnimationItem.prototype.getMarkerData = function(e) {
                    for (var t, a = 0; a < this.markers.length; a += 1)
                        if ((t = this.markers[a]).payload && t.payload.name === e)
                            return t;
                    return null
                }
                ,
                AnimationItem.prototype.goToAndStop = function(e, t, a) {
                    if (!a || this.name === a) {
                        var s = Number(e);
                        if (isNaN(s)) {
                            var i = this.getMarkerData(e);
                            i && this.goToAndStop(i.time, !0)
                        } else
                            t ? this.setCurrentRawFrameValue(e) : this.setCurrentRawFrameValue(e * this.frameModifier);
                        this.pause()
                    }
                }
                ,
                AnimationItem.prototype.goToAndPlay = function(e, t, a) {
                    if (!a || this.name === a) {
                        var s = Number(e);
                        if (isNaN(s)) {
                            var i = this.getMarkerData(e);
                            i && (i.duration ? this.playSegments([i.time, i.time + i.duration], !0) : this.goToAndStop(i.time, !0))
                        } else
                            this.goToAndStop(s, t, a);
                        this.play()
                    }
                }
                ,
                AnimationItem.prototype.advanceTime = function(e) {
                    if (!0 !== this.isPaused && !1 !== this.isLoaded) {
                        var t = this.currentRawFrame + e * this.frameModifier
                            , a = !1;
                        t >= this.totalFrames - 1 && this.frameModifier > 0 ? this.loop && this.playCount !== this.loop ? t >= this.totalFrames ? (this.playCount += 1,
                        this.checkSegments(t % this.totalFrames) || (this.setCurrentRawFrameValue(t % this.totalFrames),
                            this._completedLoop = !0,
                            this.trigger("loopComplete"))) : this.setCurrentRawFrameValue(t) : this.checkSegments(t > this.totalFrames ? t % this.totalFrames : 0) || (a = !0,
                            t = this.totalFrames - 1) : t < 0 ? this.checkSegments(t % this.totalFrames) || (!this.loop || this.playCount-- <= 0 && !0 !== this.loop ? (a = !0,
                            t = 0) : (this.setCurrentRawFrameValue(this.totalFrames + t % this.totalFrames),
                            this._completedLoop ? this.trigger("loopComplete") : this._completedLoop = !0)) : this.setCurrentRawFrameValue(t),
                        a && (this.setCurrentRawFrameValue(t),
                            this.pause(),
                            this.trigger("complete"))
                    }
                }
                ,
                AnimationItem.prototype.adjustSegment = function(e, t) {
                    this.playCount = 0,
                        e[1] < e[0] ? (this.frameModifier > 0 && (this.playSpeed < 0 ? this.setSpeed(-this.playSpeed) : this.setDirection(-1)),
                            this.totalFrames = e[0] - e[1],
                            this.timeCompleted = this.totalFrames,
                            this.firstFrame = e[1],
                            this.setCurrentRawFrameValue(this.totalFrames - .001 - t)) : e[1] > e[0] && (this.frameModifier < 0 && (this.playSpeed < 0 ? this.setSpeed(-this.playSpeed) : this.setDirection(1)),
                            this.totalFrames = e[1] - e[0],
                            this.timeCompleted = this.totalFrames,
                            this.firstFrame = e[0],
                            this.setCurrentRawFrameValue(.001 + t)),
                        this.trigger("segmentStart")
                }
                ,
                AnimationItem.prototype.setSegment = function(e, t) {
                    var a = -1;
                    this.isPaused && (this.currentRawFrame + this.firstFrame < e ? a = e : this.currentRawFrame + this.firstFrame > t && (a = t - e)),
                        this.firstFrame = e,
                        this.totalFrames = t - e,
                        this.timeCompleted = this.totalFrames,
                    -1 !== a && this.goToAndStop(a, !0)
                }
                ,
                AnimationItem.prototype.playSegments = function(e, t) {
                    if (t && (this.segments.length = 0),
                    "object" === _typeof$4(e[0])) {
                        var a, s = e.length;
                        for (a = 0; a < s; a += 1)
                            this.segments.push(e[a])
                    } else
                        this.segments.push(e);
                    this.segments.length && t && this.adjustSegment(this.segments.shift(), 0),
                    this.isPaused && this.play()
                }
                ,
                AnimationItem.prototype.resetSegments = function(e) {
                    this.segments.length = 0,
                        this.segments.push([this.animationData.ip, this.animationData.op]),
                    e && this.checkSegments(0)
                }
                ,
                AnimationItem.prototype.checkSegments = function(e) {
                    return !!this.segments.length && (this.adjustSegment(this.segments.shift(), e),
                        !0)
                }
                ,
                AnimationItem.prototype.destroy = function(e) {
                    e && this.name !== e || !this.renderer || (this.renderer.destroy(),
                        this.imagePreloader.destroy(),
                        this.trigger("destroy"),
                        this._cbs = null,
                        this.onEnterFrame = null,
                        this.onLoopComplete = null,
                        this.onComplete = null,
                        this.onSegmentStart = null,
                        this.onDestroy = null,
                        this.renderer = null,
                        this.expressionsPlugin = null,
                        this.imagePreloader = null,
                        this.projectInterface = null)
                }
                ,
                AnimationItem.prototype.setCurrentRawFrameValue = function(e) {
                    this.currentRawFrame = e,
                        this.gotoFrame()
                }
                ,
                AnimationItem.prototype.setSpeed = function(e) {
                    this.playSpeed = e,
                        this.updaFrameModifier()
                }
                ,
                AnimationItem.prototype.setDirection = function(e) {
                    this.playDirection = e < 0 ? -1 : 1,
                        this.updaFrameModifier()
                }
                ,
                AnimationItem.prototype.setLoop = function(e) {
                    this.loop = e
                }
                ,
                AnimationItem.prototype.setVolume = function(e, t) {
                    t && this.name !== t || this.audioController.setVolume(e)
                }
                ,
                AnimationItem.prototype.getVolume = function() {
                    return this.audioController.getVolume()
                }
                ,
                AnimationItem.prototype.mute = function(e) {
                    e && this.name !== e || this.audioController.mute()
                }
                ,
                AnimationItem.prototype.unmute = function(e) {
                    e && this.name !== e || this.audioController.unmute()
                }
                ,
                AnimationItem.prototype.updaFrameModifier = function() {
                    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection,
                        this.audioController.setRate(this.playSpeed * this.playDirection)
                }
                ,
                AnimationItem.prototype.getPath = function() {
                    return this.path
                }
                ,
                AnimationItem.prototype.getAssetsPath = function(e) {
                    var t = "";
                    if (e.e)
                        t = e.p;
                    else if (this.assetsPath) {
                        var a = e.p;
                        -1 !== a.indexOf("images/") && (a = a.split("/")[1]),
                            t = this.assetsPath + a
                    } else
                        t = this.path,
                            t += e.u ? e.u : "",
                            t += e.p;
                    return t
                }
                ,
                AnimationItem.prototype.getAssetData = function(e) {
                    for (var t = 0, a = this.assets.length; t < a; ) {
                        if (e === this.assets[t].id)
                            return this.assets[t];
                        t += 1
                    }
                    return null
                }
                ,
                AnimationItem.prototype.hide = function() {
                    this.renderer.hide()
                }
                ,
                AnimationItem.prototype.show = function() {
                    this.renderer.show()
                }
                ,
                AnimationItem.prototype.getDuration = function(e) {
                    return e ? this.totalFrames : this.totalFrames / this.frameRate
                }
                ,
                AnimationItem.prototype.updateDocumentData = function(e, t, a) {
                    try {
                        this.renderer.getElementByPath(e).updateDocumentData(t, a)
                    } catch (s) {}
                }
                ,
                AnimationItem.prototype.trigger = function(e) {
                    if (this._cbs && this._cbs[e])
                        switch (e) {
                            case "enterFrame":
                                this.triggerEvent(e, new BMEnterFrameEvent(e,this.currentFrame,this.totalFrames,this.frameModifier));
                                break;
                            case "drawnFrame":
                                this.drawnFrameEvent.currentTime = this.currentFrame,
                                    this.drawnFrameEvent.totalTime = this.totalFrames,
                                    this.drawnFrameEvent.direction = this.frameModifier,
                                    this.triggerEvent(e, this.drawnFrameEvent);
                                break;
                            case "loopComplete":
                                this.triggerEvent(e, new BMCompleteLoopEvent(e,this.loop,this.playCount,this.frameMult));
                                break;
                            case "complete":
                                this.triggerEvent(e, new BMCompleteEvent(e,this.frameMult));
                                break;
                            case "segmentStart":
                                this.triggerEvent(e, new BMSegmentStartEvent(e,this.firstFrame,this.totalFrames));
                                break;
                            case "destroy":
                                this.triggerEvent(e, new BMDestroyEvent(e,this));
                                break;
                            default:
                                this.triggerEvent(e)
                        }
                    "enterFrame" === e && this.onEnterFrame && this.onEnterFrame.call(this, new BMEnterFrameEvent(e,this.currentFrame,this.totalFrames,this.frameMult)),
                    "loopComplete" === e && this.onLoopComplete && this.onLoopComplete.call(this, new BMCompleteLoopEvent(e,this.loop,this.playCount,this.frameMult)),
                    "complete" === e && this.onComplete && this.onComplete.call(this, new BMCompleteEvent(e,this.frameMult)),
                    "segmentStart" === e && this.onSegmentStart && this.onSegmentStart.call(this, new BMSegmentStartEvent(e,this.firstFrame,this.totalFrames)),
                    "destroy" === e && this.onDestroy && this.onDestroy.call(this, new BMDestroyEvent(e,this))
                }
                ,
                AnimationItem.prototype.triggerRenderFrameError = function(e) {
                    var t = new BMRenderFrameErrorEvent(e,this.currentFrame);
                    this.triggerEvent("error", t),
                    this.onError && this.onError.call(this, t)
                }
                ,
                AnimationItem.prototype.triggerConfigError = function(e) {
                    var t = new BMConfigErrorEvent(e,this.currentFrame);
                    this.triggerEvent("error", t),
                    this.onError && this.onError.call(this, t)
                }
            ;
            var animationManager = function() {
                var e = {}
                    , t = []
                    , a = 0
                    , s = 0
                    , i = 0
                    , r = !0
                    , o = !1;
                function n(e) {
                    for (var a = 0, i = e.target; a < s; )
                        t[a].animation === i && (t.splice(a, 1),
                            a -= 1,
                            s -= 1,
                        i.isPaused || d()),
                            a += 1
                }
                function l(e, a) {
                    if (!e)
                        return null;
                    for (var i = 0; i < s; ) {
                        if (t[i].elem === e && null !== t[i].elem)
                            return t[i].animation;
                        i += 1
                    }
                    var r = new AnimationItem;
                    return h(r, e),
                        r.setData(e, a),
                        r
                }
                function c() {
                    i += 1,
                        m()
                }
                function d() {
                    i -= 1
                }
                function h(e, a) {
                    e.addEventListener("destroy", n),
                        e.addEventListener("_active", c),
                        e.addEventListener("_idle", d),
                        t.push({
                            elem: a,
                            animation: e
                        }),
                        s += 1
                }
                function p(e) {
                    var n, l = e - a;
                    for (n = 0; n < s; n += 1)
                        t[n].animation.advanceTime(l);
                    a = e,
                        i && !o ? window.requestAnimationFrame(p) : r = !0
                }
                function u(e) {
                    a = e,
                        window.requestAnimationFrame(p)
                }
                function m() {
                    !o && i && r && (window.requestAnimationFrame(u),
                        r = !1)
                }
                return e.registerAnimation = l,
                    e.loadAnimation = function(e) {
                        var t = new AnimationItem;
                        return h(t, null),
                            t.setParams(e),
                            t
                    }
                    ,
                    e.setSpeed = function(e, a) {
                        var i;
                        for (i = 0; i < s; i += 1)
                            t[i].animation.setSpeed(e, a)
                    }
                    ,
                    e.setDirection = function(e, a) {
                        var i;
                        for (i = 0; i < s; i += 1)
                            t[i].animation.setDirection(e, a)
                    }
                    ,
                    e.play = function(e) {
                        var a;
                        for (a = 0; a < s; a += 1)
                            t[a].animation.play(e)
                    }
                    ,
                    e.pause = function(e) {
                        var a;
                        for (a = 0; a < s; a += 1)
                            t[a].animation.pause(e)
                    }
                    ,
                    e.stop = function(e) {
                        var a;
                        for (a = 0; a < s; a += 1)
                            t[a].animation.stop(e)
                    }
                    ,
                    e.togglePause = function(e) {
                        var a;
                        for (a = 0; a < s; a += 1)
                            t[a].animation.togglePause(e)
                    }
                    ,
                    e.searchAnimations = function(e, t, a) {
                        var s, i = [].concat([].slice.call(document.getElementsByClassName("lottie")), [].slice.call(document.getElementsByClassName("bodymovin"))), r = i.length;
                        for (s = 0; s < r; s += 1)
                            a && i[s].setAttribute("data-bm-type", a),
                                l(i[s], e);
                        if (t && 0 === r) {
                            a || (a = "svg");
                            var o = document.getElementsByTagName("body")[0];
                            o.innerText = "";
                            var n = createTag("div");
                            n.style.width = "100%",
                                n.style.height = "100%",
                                n.setAttribute("data-bm-type", a),
                                o.appendChild(n),
                                l(n, e)
                        }
                    }
                    ,
                    e.resize = function() {
                        var e;
                        for (e = 0; e < s; e += 1)
                            t[e].animation.resize()
                    }
                    ,
                    e.goToAndStop = function(e, a, i) {
                        var r;
                        for (r = 0; r < s; r += 1)
                            t[r].animation.goToAndStop(e, a, i)
                    }
                    ,
                    e.destroy = function(e) {
                        var a;
                        for (a = s - 1; a >= 0; a -= 1)
                            t[a].animation.destroy(e)
                    }
                    ,
                    e.freeze = function() {
                        o = !0
                    }
                    ,
                    e.unfreeze = function() {
                        o = !1,
                            m()
                    }
                    ,
                    e.setVolume = function(e, a) {
                        var i;
                        for (i = 0; i < s; i += 1)
                            t[i].animation.setVolume(e, a)
                    }
                    ,
                    e.mute = function(e) {
                        var a;
                        for (a = 0; a < s; a += 1)
                            t[a].animation.mute(e)
                    }
                    ,
                    e.unmute = function(e) {
                        var a;
                        for (a = 0; a < s; a += 1)
                            t[a].animation.unmute(e)
                    }
                    ,
                    e.getRegisteredAnimations = function() {
                        var e, a = t.length, s = [];
                        for (e = 0; e < a; e += 1)
                            s.push(t[e].animation);
                        return s
                    }
                    ,
                    e
            }()
                , BezierFactory = function() {
                var e = {
                    getBezierEasing: function(e, a, s, i, r) {
                        var o = r || ("bez_" + e + "_" + a + "_" + s + "_" + i).replace(/\./g, "p");
                        if (t[o])
                            return t[o];
                        var n = new d([e, a, s, i]);
                        return t[o] = n,
                            n
                    }
                }
                    , t = {}
                    , a = 11
                    , s = 1 / (a - 1)
                    , i = "function" == typeof Float32Array;
                function r(e, t) {
                    return 1 - 3 * t + 3 * e
                }
                function o(e, t) {
                    return 3 * t - 6 * e
                }
                function n(e) {
                    return 3 * e
                }
                function l(e, t, a) {
                    return ((r(t, a) * e + o(t, a)) * e + n(t)) * e
                }
                function c(e, t, a) {
                    return 3 * r(t, a) * e * e + 2 * o(t, a) * e + n(t)
                }
                function d(e) {
                    this._p = e,
                        this._mSampleValues = i ? new Float32Array(a) : new Array(a),
                        this._precomputed = !1,
                        this.get = this.get.bind(this)
                }
                return d.prototype = {
                    get: function(e) {
                        var t = this._p[0]
                            , a = this._p[1]
                            , s = this._p[2]
                            , i = this._p[3];
                        return this._precomputed || this._precompute(),
                            t === a && s === i ? e : 0 === e ? 0 : 1 === e ? 1 : l(this._getTForX(e), a, i)
                    },
                    _precompute: function() {
                        var e = this._p[0]
                            , t = this._p[1]
                            , a = this._p[2]
                            , s = this._p[3];
                        this._precomputed = !0,
                        e === t && a === s || this._calcSampleValues()
                    },
                    _calcSampleValues: function() {
                        for (var e = this._p[0], t = this._p[2], i = 0; i < a; ++i)
                            this._mSampleValues[i] = l(i * s, e, t)
                    },
                    _getTForX: function(e) {
                        for (var t = this._p[0], i = this._p[2], r = this._mSampleValues, o = 0, n = 1, d = a - 1; n !== d && r[n] <= e; ++n)
                            o += s;
                        var h = o + (e - r[--n]) / (r[n + 1] - r[n]) * s
                            , p = c(h, t, i);
                        return p >= .001 ? function(e, t, a, s) {
                            for (var i = 0; i < 4; ++i) {
                                var r = c(t, a, s);
                                if (0 === r)
                                    return t;
                                t -= (l(t, a, s) - e) / r
                            }
                            return t
                        }(e, h, t, i) : 0 === p ? h : function(e, t, a, s, i) {
                            var r, o, n = 0;
                            do {
                                (r = l(o = t + (a - t) / 2, s, i) - e) > 0 ? a = o : t = o
                            } while (Math.abs(r) > 1e-7 && ++n < 10);
                            return o
                        }(e, o, o + s, t, i)
                    }
                },
                    e
            }()
                , pooling = {
                double: function(e) {
                    return e.concat(createSizedArray(e.length))
                }
            }
                , poolFactory = function(e, t, a) {
                var s = 0
                    , i = e
                    , r = createSizedArray(i);
                return {
                    newElement: function() {
                        return s ? r[s -= 1] : t()
                    },
                    release: function(e) {
                        s === i && (r = pooling.double(r),
                            i *= 2),
                        a && a(e),
                            r[s] = e,
                            s += 1
                    }
                }
            }
                , bezierLengthPool = poolFactory(8, (function() {
                    return {
                        addedLength: 0,
                        percents: createTypedArray("float32", getDefaultCurveSegments()),
                        lengths: createTypedArray("float32", getDefaultCurveSegments())
                    }
                }
            ))
                , segmentsLengthPool = poolFactory(8, (function() {
                    return {
                        lengths: [],
                        totalLength: 0
                    }
                }
            ), (function(e) {
                    var t, a = e.lengths.length;
                    for (t = 0; t < a; t += 1)
                        bezierLengthPool.release(e.lengths[t]);
                    e.lengths.length = 0
                }
            ));
            function bezFunction() {
                var e = Math;
                function t(e, t, a, s, i, r) {
                    var o = e * s + t * i + a * r - i * s - r * e - a * t;
                    return o > -.001 && o < .001
                }
                var a = function(e, t, a, s) {
                    var i, r, o, n, l, c, d = getDefaultCurveSegments(), h = 0, p = [], u = [], m = bezierLengthPool.newElement();
                    for (o = a.length,
                             i = 0; i < d; i += 1) {
                        for (l = i / (d - 1),
                                 c = 0,
                                 r = 0; r < o; r += 1)
                            n = bmPow(1 - l, 3) * e[r] + 3 * bmPow(1 - l, 2) * l * a[r] + 3 * (1 - l) * bmPow(l, 2) * s[r] + bmPow(l, 3) * t[r],
                                p[r] = n,
                            null !== u[r] && (c += bmPow(p[r] - u[r], 2)),
                                u[r] = p[r];
                        c && (h += c = bmSqrt(c)),
                            m.percents[i] = l,
                            m.lengths[i] = h
                    }
                    return m.addedLength = h,
                        m
                };
                function s(e) {
                    this.segmentLength = 0,
                        this.points = new Array(e)
                }
                function i(e, t) {
                    this.partialLength = e,
                        this.point = t
                }
                var r, o = (r = {},
                        function(e, a, o, n) {
                            var l = (e[0] + "_" + e[1] + "_" + a[0] + "_" + a[1] + "_" + o[0] + "_" + o[1] + "_" + n[0] + "_" + n[1]).replace(/\./g, "p");
                            if (!r[l]) {
                                var c, d, h, p, u, m, f, v = getDefaultCurveSegments(), g = 0, y = null;
                                2 === e.length && (e[0] !== a[0] || e[1] !== a[1]) && t(e[0], e[1], a[0], a[1], e[0] + o[0], e[1] + o[1]) && t(e[0], e[1], a[0], a[1], a[0] + n[0], a[1] + n[1]) && (v = 2);
                                var _ = new s(v);
                                for (h = o.length,
                                         c = 0; c < v; c += 1) {
                                    for (f = createSizedArray(h),
                                             u = c / (v - 1),
                                             m = 0,
                                             d = 0; d < h; d += 1)
                                        p = bmPow(1 - u, 3) * e[d] + 3 * bmPow(1 - u, 2) * u * (e[d] + o[d]) + 3 * (1 - u) * bmPow(u, 2) * (a[d] + n[d]) + bmPow(u, 3) * a[d],
                                            f[d] = p,
                                        null !== y && (m += bmPow(f[d] - y[d], 2));
                                    g += m = bmSqrt(m),
                                        _.points[c] = new i(m,f),
                                        y = f
                                }
                                _.segmentLength = g,
                                    r[l] = _
                            }
                            return r[l]
                        }
                );
                function n(e, t) {
                    var a = t.percents
                        , s = t.lengths
                        , i = a.length
                        , r = bmFloor((i - 1) * e)
                        , o = e * t.addedLength
                        , n = 0;
                    if (r === i - 1 || 0 === r || o === s[r])
                        return a[r];
                    for (var l = s[r] > o ? -1 : 1, c = !0; c; )
                        if (s[r] <= o && s[r + 1] > o ? (n = (o - s[r]) / (s[r + 1] - s[r]),
                            c = !1) : r += l,
                        r < 0 || r >= i - 1) {
                            if (r === i - 1)
                                return a[r];
                            c = !1
                        }
                    return a[r] + (a[r + 1] - a[r]) * n
                }
                var l = createTypedArray("float32", 8);
                return {
                    getSegmentsLength: function(e) {
                        var t, s = segmentsLengthPool.newElement(), i = e.c, r = e.v, o = e.o, n = e.i, l = e._length, c = s.lengths, d = 0;
                        for (t = 0; t < l - 1; t += 1)
                            c[t] = a(r[t], r[t + 1], o[t], n[t + 1]),
                                d += c[t].addedLength;
                        return i && l && (c[t] = a(r[t], r[0], o[t], n[0]),
                            d += c[t].addedLength),
                            s.totalLength = d,
                            s
                    },
                    getNewSegment: function(t, a, s, i, r, o, c) {
                        r < 0 ? r = 0 : r > 1 && (r = 1);
                        var d, h = n(r, c), p = n(o = o > 1 ? 1 : o, c), u = t.length, m = 1 - h, f = 1 - p, v = m * m * m, g = h * m * m * 3, y = h * h * m * 3, _ = h * h * h, b = m * m * f, k = h * m * f + m * h * f + m * m * p, w = h * h * f + m * h * p + h * m * p, B = h * h * p, C = m * f * f, x = h * f * f + m * p * f + m * f * p, S = h * p * f + m * p * p + h * f * p, E = h * p * p, V = f * f * f, N = p * f * f + f * p * f + f * f * p, P = p * p * f + f * p * p + p * f * p, A = p * p * p;
                        for (d = 0; d < u; d += 1)
                            l[4 * d] = e.round(1e3 * (v * t[d] + g * s[d] + y * i[d] + _ * a[d])) / 1e3,
                                l[4 * d + 1] = e.round(1e3 * (b * t[d] + k * s[d] + w * i[d] + B * a[d])) / 1e3,
                                l[4 * d + 2] = e.round(1e3 * (C * t[d] + x * s[d] + S * i[d] + E * a[d])) / 1e3,
                                l[4 * d + 3] = e.round(1e3 * (V * t[d] + N * s[d] + P * i[d] + A * a[d])) / 1e3;
                        return l
                    },
                    getPointInSegment: function(t, a, s, i, r, o) {
                        var l = n(r, o)
                            , c = 1 - l;
                        return [e.round(1e3 * (c * c * c * t[0] + (l * c * c + c * l * c + c * c * l) * s[0] + (l * l * c + c * l * l + l * c * l) * i[0] + l * l * l * a[0])) / 1e3, e.round(1e3 * (c * c * c * t[1] + (l * c * c + c * l * c + c * c * l) * s[1] + (l * l * c + c * l * l + l * c * l) * i[1] + l * l * l * a[1])) / 1e3]
                    },
                    buildBezierData: o,
                    pointOnLine2D: t,
                    pointOnLine3D: function(a, s, i, r, o, n, l, c, d) {
                        if (0 === i && 0 === n && 0 === d)
                            return t(a, s, r, o, l, c);
                        var h, p = e.sqrt(e.pow(r - a, 2) + e.pow(o - s, 2) + e.pow(n - i, 2)), u = e.sqrt(e.pow(l - a, 2) + e.pow(c - s, 2) + e.pow(d - i, 2)), m = e.sqrt(e.pow(l - r, 2) + e.pow(c - o, 2) + e.pow(d - n, 2));
                        return (h = p > u ? p > m ? p - u - m : m - u - p : m > u ? m - u - p : u - p - m) > -1e-4 && h < 1e-4
                    }
                }
            }
            var bez = bezFunction()
                , initFrame = initialDefaultFrame
                , mathAbs = Math.abs;
            function interpolateValue(e, t) {
                var a, s = this.offsetTime;
                "multidimensional" === this.propType && (a = createTypedArray("float32", this.pv.length));
                for (var i, r, o, n, l, c, d, h, p, u = t.lastIndex, m = u, f = this.keyframes.length - 1, v = !0; v; ) {
                    if (i = this.keyframes[m],
                        r = this.keyframes[m + 1],
                    m === f - 1 && e >= r.t - s) {
                        i.h && (i = r),
                            u = 0;
                        break
                    }
                    if (r.t - s > e) {
                        u = m;
                        break
                    }
                    m < f - 1 ? m += 1 : (u = 0,
                        v = !1)
                }
                o = this.keyframesMetadata[m] || {};
                var g, y = r.t - s, _ = i.t - s;
                if (i.to) {
                    o.bezierData || (o.bezierData = bez.buildBezierData(i.s, r.s || i.e, i.to, i.ti));
                    var b = o.bezierData;
                    if (e >= y || e < _) {
                        var k = e >= y ? b.points.length - 1 : 0;
                        for (l = b.points[k].point.length,
                                 n = 0; n < l; n += 1)
                            a[n] = b.points[k].point[n]
                    } else {
                        o.__fnct ? p = o.__fnct : (p = BezierFactory.getBezierEasing(i.o.x, i.o.y, i.i.x, i.i.y, i.n).get,
                            o.__fnct = p),
                            c = p((e - _) / (y - _));
                        var w, B = b.segmentLength * c, C = t.lastFrame < e && t._lastKeyframeIndex === m ? t._lastAddedLength : 0;
                        for (h = t.lastFrame < e && t._lastKeyframeIndex === m ? t._lastPoint : 0,
                                 v = !0,
                                 d = b.points.length; v; ) {
                            if (C += b.points[h].partialLength,
                            0 === B || 0 === c || h === b.points.length - 1) {
                                for (l = b.points[h].point.length,
                                         n = 0; n < l; n += 1)
                                    a[n] = b.points[h].point[n];
                                break
                            }
                            if (B >= C && B < C + b.points[h + 1].partialLength) {
                                for (w = (B - C) / b.points[h + 1].partialLength,
                                         l = b.points[h].point.length,
                                         n = 0; n < l; n += 1)
                                    a[n] = b.points[h].point[n] + (b.points[h + 1].point[n] - b.points[h].point[n]) * w;
                                break
                            }
                            h < d - 1 ? h += 1 : v = !1
                        }
                        t._lastPoint = h,
                            t._lastAddedLength = C - b.points[h].partialLength,
                            t._lastKeyframeIndex = m
                    }
                } else {
                    var x, S, E, V, N;
                    if (f = i.s.length,
                        g = r.s || i.e,
                    this.sh && 1 !== i.h)
                        e >= y ? (a[0] = g[0],
                            a[1] = g[1],
                            a[2] = g[2]) : e <= _ ? (a[0] = i.s[0],
                            a[1] = i.s[1],
                            a[2] = i.s[2]) : quaternionToEuler(a, slerp(createQuaternion(i.s), createQuaternion(g), (e - _) / (y - _)));
                    else
                        for (m = 0; m < f; m += 1)
                            1 !== i.h && (e >= y ? c = 1 : e < _ ? c = 0 : (i.o.x.constructor === Array ? (o.__fnct || (o.__fnct = []),
                                o.__fnct[m] ? p = o.__fnct[m] : (x = void 0 === i.o.x[m] ? i.o.x[0] : i.o.x[m],
                                    S = void 0 === i.o.y[m] ? i.o.y[0] : i.o.y[m],
                                    E = void 0 === i.i.x[m] ? i.i.x[0] : i.i.x[m],
                                    V = void 0 === i.i.y[m] ? i.i.y[0] : i.i.y[m],
                                    p = BezierFactory.getBezierEasing(x, S, E, V).get,
                                    o.__fnct[m] = p)) : o.__fnct ? p = o.__fnct : (x = i.o.x,
                                S = i.o.y,
                                E = i.i.x,
                                V = i.i.y,
                                p = BezierFactory.getBezierEasing(x, S, E, V).get,
                                i.keyframeMetadata = p),
                                c = p((e - _) / (y - _)))),
                                g = r.s || i.e,
                                N = 1 === i.h ? i.s[m] : i.s[m] + (g[m] - i.s[m]) * c,
                                "multidimensional" === this.propType ? a[m] = N : a = N
                }
                return t.lastIndex = u,
                    a
            }
            function slerp(e, t, a) {
                var s, i, r, o, n, l = [], c = e[0], d = e[1], h = e[2], p = e[3], u = t[0], m = t[1], f = t[2], v = t[3];
                return (i = c * u + d * m + h * f + p * v) < 0 && (i = -i,
                    u = -u,
                    m = -m,
                    f = -f,
                    v = -v),
                    1 - i > 1e-6 ? (s = Math.acos(i),
                        r = Math.sin(s),
                        o = Math.sin((1 - a) * s) / r,
                        n = Math.sin(a * s) / r) : (o = 1 - a,
                        n = a),
                    l[0] = o * c + n * u,
                    l[1] = o * d + n * m,
                    l[2] = o * h + n * f,
                    l[3] = o * p + n * v,
                    l
            }
            function quaternionToEuler(e, t) {
                var a = t[0]
                    , s = t[1]
                    , i = t[2]
                    , r = t[3]
                    , o = Math.atan2(2 * s * r - 2 * a * i, 1 - 2 * s * s - 2 * i * i)
                    , n = Math.asin(2 * a * s + 2 * i * r)
                    , l = Math.atan2(2 * a * r - 2 * s * i, 1 - 2 * a * a - 2 * i * i);
                e[0] = o / degToRads,
                    e[1] = n / degToRads,
                    e[2] = l / degToRads
            }
            function createQuaternion(e) {
                var t = e[0] * degToRads
                    , a = e[1] * degToRads
                    , s = e[2] * degToRads
                    , i = Math.cos(t / 2)
                    , r = Math.cos(a / 2)
                    , o = Math.cos(s / 2)
                    , n = Math.sin(t / 2)
                    , l = Math.sin(a / 2)
                    , c = Math.sin(s / 2);
                return [n * l * o + i * r * c, n * r * o + i * l * c, i * l * o - n * r * c, i * r * o - n * l * c]
            }
            function getValueAtCurrentTime() {
                var e = this.comp.renderedFrame - this.offsetTime
                    , t = this.keyframes[0].t - this.offsetTime
                    , a = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;
                if (!(e === this._caching.lastFrame || this._caching.lastFrame !== initFrame && (this._caching.lastFrame >= a && e >= a || this._caching.lastFrame < t && e < t))) {
                    this._caching.lastFrame >= e && (this._caching._lastKeyframeIndex = -1,
                        this._caching.lastIndex = 0);
                    var s = this.interpolateValue(e, this._caching);
                    this.pv = s
                }
                return this._caching.lastFrame = e,
                    this.pv
            }
            function setVValue(e) {
                var t;
                if ("unidimensional" === this.propType)
                    t = e * this.mult,
                    mathAbs(this.v - t) > 1e-5 && (this.v = t,
                        this._mdf = !0);
                else
                    for (var a = 0, s = this.v.length; a < s; )
                        t = e[a] * this.mult,
                        mathAbs(this.v[a] - t) > 1e-5 && (this.v[a] = t,
                            this._mdf = !0),
                            a += 1
            }
            function processEffectsSequence() {
                if (this.elem.globalData.frameId !== this.frameId && this.effectsSequence.length)
                    if (this.lock)
                        this.setVValue(this.pv);
                    else {
                        var e;
                        this.lock = !0,
                            this._mdf = this._isFirstFrame;
                        var t = this.effectsSequence.length
                            , a = this.kf ? this.pv : this.data.k;
                        for (e = 0; e < t; e += 1)
                            a = this.effectsSequence[e](a);
                        this.setVValue(a),
                            this._isFirstFrame = !1,
                            this.lock = !1,
                            this.frameId = this.elem.globalData.frameId
                    }
            }
            function addEffect(e) {
                this.effectsSequence.push(e),
                    this.container.addDynamicProperty(this)
            }
            function ValueProperty(e, t, a, s) {
                this.propType = "unidimensional",
                    this.mult = a || 1,
                    this.data = t,
                    this.v = a ? t.k * a : t.k,
                    this.pv = t.k,
                    this._mdf = !1,
                    this.elem = e,
                    this.container = s,
                    this.comp = e.comp,
                    this.k = !1,
                    this.kf = !1,
                    this.vel = 0,
                    this.effectsSequence = [],
                    this._isFirstFrame = !0,
                    this.getValue = processEffectsSequence,
                    this.setVValue = setVValue,
                    this.addEffect = addEffect
            }
            function MultiDimensionalProperty(e, t, a, s) {
                var i;
                this.propType = "multidimensional",
                    this.mult = a || 1,
                    this.data = t,
                    this._mdf = !1,
                    this.elem = e,
                    this.container = s,
                    this.comp = e.comp,
                    this.k = !1,
                    this.kf = !1,
                    this.frameId = -1;
                var r = t.k.length;
                for (this.v = createTypedArray("float32", r),
                         this.pv = createTypedArray("float32", r),
                         this.vel = createTypedArray("float32", r),
                         i = 0; i < r; i += 1)
                    this.v[i] = t.k[i] * this.mult,
                        this.pv[i] = t.k[i];
                this._isFirstFrame = !0,
                    this.effectsSequence = [],
                    this.getValue = processEffectsSequence,
                    this.setVValue = setVValue,
                    this.addEffect = addEffect
            }
            function KeyframedValueProperty(e, t, a, s) {
                this.propType = "unidimensional",
                    this.keyframes = t.k,
                    this.keyframesMetadata = [],
                    this.offsetTime = e.data.st,
                    this.frameId = -1,
                    this._caching = {
                        lastFrame: initFrame,
                        lastIndex: 0,
                        value: 0,
                        _lastKeyframeIndex: -1
                    },
                    this.k = !0,
                    this.kf = !0,
                    this.data = t,
                    this.mult = a || 1,
                    this.elem = e,
                    this.container = s,
                    this.comp = e.comp,
                    this.v = initFrame,
                    this.pv = initFrame,
                    this._isFirstFrame = !0,
                    this.getValue = processEffectsSequence,
                    this.setVValue = setVValue,
                    this.interpolateValue = interpolateValue,
                    this.effectsSequence = [getValueAtCurrentTime.bind(this)],
                    this.addEffect = addEffect
            }
            function KeyframedMultidimensionalProperty(e, t, a, s) {
                var i;
                this.propType = "multidimensional";
                var r, o, n, l, c = t.k.length;
                for (i = 0; i < c - 1; i += 1)
                    t.k[i].to && t.k[i].s && t.k[i + 1] && t.k[i + 1].s && (r = t.k[i].s,
                        o = t.k[i + 1].s,
                        n = t.k[i].to,
                        l = t.k[i].ti,
                    (2 === r.length && (r[0] !== o[0] || r[1] !== o[1]) && bez.pointOnLine2D(r[0], r[1], o[0], o[1], r[0] + n[0], r[1] + n[1]) && bez.pointOnLine2D(r[0], r[1], o[0], o[1], o[0] + l[0], o[1] + l[1]) || 3 === r.length && (r[0] !== o[0] || r[1] !== o[1] || r[2] !== o[2]) && bez.pointOnLine3D(r[0], r[1], r[2], o[0], o[1], o[2], r[0] + n[0], r[1] + n[1], r[2] + n[2]) && bez.pointOnLine3D(r[0], r[1], r[2], o[0], o[1], o[2], o[0] + l[0], o[1] + l[1], o[2] + l[2])) && (t.k[i].to = null,
                        t.k[i].ti = null),
                    r[0] === o[0] && r[1] === o[1] && 0 === n[0] && 0 === n[1] && 0 === l[0] && 0 === l[1] && (2 === r.length || r[2] === o[2] && 0 === n[2] && 0 === l[2]) && (t.k[i].to = null,
                        t.k[i].ti = null));
                this.effectsSequence = [getValueAtCurrentTime.bind(this)],
                    this.data = t,
                    this.keyframes = t.k,
                    this.keyframesMetadata = [],
                    this.offsetTime = e.data.st,
                    this.k = !0,
                    this.kf = !0,
                    this._isFirstFrame = !0,
                    this.mult = a || 1,
                    this.elem = e,
                    this.container = s,
                    this.comp = e.comp,
                    this.getValue = processEffectsSequence,
                    this.setVValue = setVValue,
                    this.interpolateValue = interpolateValue,
                    this.frameId = -1;
                var d = t.k[0].s.length;
                for (this.v = createTypedArray("float32", d),
                         this.pv = createTypedArray("float32", d),
                         i = 0; i < d; i += 1)
                    this.v[i] = initFrame,
                        this.pv[i] = initFrame;
                this._caching = {
                    lastFrame: initFrame,
                    lastIndex: 0,
                    value: createTypedArray("float32", d)
                },
                    this.addEffect = addEffect
            }
            var PropertyFactory = {
                getProp: function(e, t, a, s, i) {
                    var r;
                    if (t.sid && (t = e.globalData.slotManager.getProp(t)),
                        t.k.length)
                        if ("number" == typeof t.k[0])
                            r = new MultiDimensionalProperty(e,t,s,i);
                        else
                            switch (a) {
                                case 0:
                                    r = new KeyframedValueProperty(e,t,s,i);
                                    break;
                                case 1:
                                    r = new KeyframedMultidimensionalProperty(e,t,s,i)
                            }
                    else
                        r = new ValueProperty(e,t,s,i);
                    return r.effectsSequence.length && i.addDynamicProperty(r),
                        r
                }
            };
            function DynamicPropertyContainer() {}
            DynamicPropertyContainer.prototype = {
                addDynamicProperty: function(e) {
                    -1 === this.dynamicProperties.indexOf(e) && (this.dynamicProperties.push(e),
                        this.container.addDynamicProperty(this),
                        this._isAnimated = !0)
                },
                iterateDynamicProperties: function() {
                    var e;
                    this._mdf = !1;
                    var t = this.dynamicProperties.length;
                    for (e = 0; e < t; e += 1)
                        this.dynamicProperties[e].getValue(),
                        this.dynamicProperties[e]._mdf && (this._mdf = !0)
                },
                initDynamicPropertyContainer: function(e) {
                    this.container = e,
                        this.dynamicProperties = [],
                        this._mdf = !1,
                        this._isAnimated = !1
                }
            };
            var pointPool = poolFactory(8, (function() {
                    return createTypedArray("float32", 2)
                }
            ));
            function ShapePath() {
                this.c = !1,
                    this._length = 0,
                    this._maxLength = 8,
                    this.v = createSizedArray(this._maxLength),
                    this.o = createSizedArray(this._maxLength),
                    this.i = createSizedArray(this._maxLength)
            }
            ShapePath.prototype.setPathData = function(e, t) {
                this.c = e,
                    this.setLength(t);
                for (var a = 0; a < t; )
                    this.v[a] = pointPool.newElement(),
                        this.o[a] = pointPool.newElement(),
                        this.i[a] = pointPool.newElement(),
                        a += 1
            }
                ,
                ShapePath.prototype.setLength = function(e) {
                    for (; this._maxLength < e; )
                        this.doubleArrayLength();
                    this._length = e
                }
                ,
                ShapePath.prototype.doubleArrayLength = function() {
                    this.v = this.v.concat(createSizedArray(this._maxLength)),
                        this.i = this.i.concat(createSizedArray(this._maxLength)),
                        this.o = this.o.concat(createSizedArray(this._maxLength)),
                        this._maxLength *= 2
                }
                ,
                ShapePath.prototype.setXYAt = function(e, t, a, s, i) {
                    var r;
                    switch (this._length = Math.max(this._length, s + 1),
                    this._length >= this._maxLength && this.doubleArrayLength(),
                        a) {
                        case "v":
                            r = this.v;
                            break;
                        case "i":
                            r = this.i;
                            break;
                        case "o":
                            r = this.o;
                            break;
                        default:
                            r = []
                    }
                    (!r[s] || r[s] && !i) && (r[s] = pointPool.newElement()),
                        r[s][0] = e,
                        r[s][1] = t
                }
                ,
                ShapePath.prototype.setTripleAt = function(e, t, a, s, i, r, o, n) {
                    this.setXYAt(e, t, "v", o, n),
                        this.setXYAt(a, s, "o", o, n),
                        this.setXYAt(i, r, "i", o, n)
                }
                ,
                ShapePath.prototype.reverse = function() {
                    var e = new ShapePath;
                    e.setPathData(this.c, this._length);
                    var t = this.v
                        , a = this.o
                        , s = this.i
                        , i = 0;
                    this.c && (e.setTripleAt(t[0][0], t[0][1], s[0][0], s[0][1], a[0][0], a[0][1], 0, !1),
                        i = 1);
                    var r, o = this._length - 1, n = this._length;
                    for (r = i; r < n; r += 1)
                        e.setTripleAt(t[o][0], t[o][1], s[o][0], s[o][1], a[o][0], a[o][1], r, !1),
                            o -= 1;
                    return e
                }
                ,
                ShapePath.prototype.length = function() {
                    return this._length
                }
            ;
            var shapePool = (factory = poolFactory(4, (function() {
                    return new ShapePath
                }
            ), (function(e) {
                    var t, a = e._length;
                    for (t = 0; t < a; t += 1)
                        pointPool.release(e.v[t]),
                            pointPool.release(e.i[t]),
                            pointPool.release(e.o[t]),
                            e.v[t] = null,
                            e.i[t] = null,
                            e.o[t] = null;
                    e._length = 0,
                        e.c = !1
                }
            )),
                factory.clone = function(e) {
                    var t, a = factory.newElement(), s = void 0 === e._length ? e.v.length : e._length;
                    for (a.setLength(s),
                             a.c = e.c,
                             t = 0; t < s; t += 1)
                        a.setTripleAt(e.v[t][0], e.v[t][1], e.o[t][0], e.o[t][1], e.i[t][0], e.i[t][1], t);
                    return a
                }
                ,
                factory), factory;
            function ShapeCollection() {
                this._length = 0,
                    this._maxLength = 4,
                    this.shapes = createSizedArray(this._maxLength)
            }
            ShapeCollection.prototype.addShape = function(e) {
                this._length === this._maxLength && (this.shapes = this.shapes.concat(createSizedArray(this._maxLength)),
                    this._maxLength *= 2),
                    this.shapes[this._length] = e,
                    this._length += 1
            }
                ,
                ShapeCollection.prototype.releaseShapes = function() {
                    var e;
                    for (e = 0; e < this._length; e += 1)
                        shapePool.release(this.shapes[e]);
                    this._length = 0
                }
            ;
            var shapeCollectionPool = (ob2 = {
                newShapeCollection: function() {
                    return _length ? pool[_length -= 1] : new ShapeCollection
                },
                release: function(e) {
                    var t, a = e._length;
                    for (t = 0; t < a; t += 1)
                        shapePool.release(e.shapes[t]);
                    e._length = 0,
                    _length === _maxLength && (pool = pooling.double(pool),
                        _maxLength *= 2),
                        pool[_length] = e,
                        _length += 1
                }
            },
                _length = 0,
                _maxLength = 4,
                pool = createSizedArray(_maxLength),
                ob2), ob2, _length, _maxLength, pool, ShapePropertyFactory = function() {
                var e = -999999;
                function t(e, t, a) {
                    var s, i, r, o, n, l, c, d, h, p = a.lastIndex, u = this.keyframes;
                    if (e < u[0].t - this.offsetTime)
                        s = u[0].s[0],
                            r = !0,
                            p = 0;
                    else if (e >= u[u.length - 1].t - this.offsetTime)
                        s = u[u.length - 1].s ? u[u.length - 1].s[0] : u[u.length - 2].e[0],
                            r = !0;
                    else {
                        for (var m, f, v, g = p, y = u.length - 1, _ = !0; _ && (m = u[g],
                            !((f = u[g + 1]).t - this.offsetTime > e)); )
                            g < y - 1 ? g += 1 : _ = !1;
                        if (v = this.keyframesMetadata[g] || {},
                            p = g,
                            !(r = 1 === m.h)) {
                            if (e >= f.t - this.offsetTime)
                                d = 1;
                            else if (e < m.t - this.offsetTime)
                                d = 0;
                            else {
                                var b;
                                v.__fnct ? b = v.__fnct : (b = BezierFactory.getBezierEasing(m.o.x, m.o.y, m.i.x, m.i.y).get,
                                    v.__fnct = b),
                                    d = b((e - (m.t - this.offsetTime)) / (f.t - this.offsetTime - (m.t - this.offsetTime)))
                            }
                            i = f.s ? f.s[0] : m.e[0]
                        }
                        s = m.s[0]
                    }
                    for (l = t._length,
                             c = s.i[0].length,
                             a.lastIndex = p,
                             o = 0; o < l; o += 1)
                        for (n = 0; n < c; n += 1)
                            h = r ? s.i[o][n] : s.i[o][n] + (i.i[o][n] - s.i[o][n]) * d,
                                t.i[o][n] = h,
                                h = r ? s.o[o][n] : s.o[o][n] + (i.o[o][n] - s.o[o][n]) * d,
                                t.o[o][n] = h,
                                h = r ? s.v[o][n] : s.v[o][n] + (i.v[o][n] - s.v[o][n]) * d,
                                t.v[o][n] = h
                }
                function a() {
                    var t = this.comp.renderedFrame - this.offsetTime
                        , a = this.keyframes[0].t - this.offsetTime
                        , s = this.keyframes[this.keyframes.length - 1].t - this.offsetTime
                        , i = this._caching.lastFrame;
                    return i !== e && (i < a && t < a || i > s && t > s) || (this._caching.lastIndex = i < t ? this._caching.lastIndex : 0,
                        this.interpolateShape(t, this.pv, this._caching)),
                        this._caching.lastFrame = t,
                        this.pv
                }
                function s() {
                    this.paths = this.localShapeCollection
                }
                function i(e) {
                    (function(e, t) {
                            if (e._length !== t._length || e.c !== t.c)
                                return !1;
                            var a, s = e._length;
                            for (a = 0; a < s; a += 1)
                                if (e.v[a][0] !== t.v[a][0] || e.v[a][1] !== t.v[a][1] || e.o[a][0] !== t.o[a][0] || e.o[a][1] !== t.o[a][1] || e.i[a][0] !== t.i[a][0] || e.i[a][1] !== t.i[a][1])
                                    return !1;
                            return !0
                        }
                    )(this.v, e) || (this.v = shapePool.clone(e),
                        this.localShapeCollection.releaseShapes(),
                        this.localShapeCollection.addShape(this.v),
                        this._mdf = !0,
                        this.paths = this.localShapeCollection)
                }
                function r() {
                    if (this.elem.globalData.frameId !== this.frameId)
                        if (this.effectsSequence.length)
                            if (this.lock)
                                this.setVValue(this.pv);
                            else {
                                var e, t;
                                this.lock = !0,
                                    this._mdf = !1,
                                    e = this.kf ? this.pv : this.data.ks ? this.data.ks.k : this.data.pt.k;
                                var a = this.effectsSequence.length;
                                for (t = 0; t < a; t += 1)
                                    e = this.effectsSequence[t](e);
                                this.setVValue(e),
                                    this.lock = !1,
                                    this.frameId = this.elem.globalData.frameId
                            }
                        else
                            this._mdf = !1
                }
                function o(e, t, a) {
                    this.propType = "shape",
                        this.comp = e.comp,
                        this.container = e,
                        this.elem = e,
                        this.data = t,
                        this.k = !1,
                        this.kf = !1,
                        this._mdf = !1;
                    var i = 3 === a ? t.pt.k : t.ks.k;
                    this.v = shapePool.clone(i),
                        this.pv = shapePool.clone(this.v),
                        this.localShapeCollection = shapeCollectionPool.newShapeCollection(),
                        this.paths = this.localShapeCollection,
                        this.paths.addShape(this.v),
                        this.reset = s,
                        this.effectsSequence = []
                }
                function n(e) {
                    this.effectsSequence.push(e),
                        this.container.addDynamicProperty(this)
                }
                function l(t, i, r) {
                    this.propType = "shape",
                        this.comp = t.comp,
                        this.elem = t,
                        this.container = t,
                        this.offsetTime = t.data.st,
                        this.keyframes = 3 === r ? i.pt.k : i.ks.k,
                        this.keyframesMetadata = [],
                        this.k = !0,
                        this.kf = !0;
                    var o = this.keyframes[0].s[0].i.length;
                    this.v = shapePool.newElement(),
                        this.v.setPathData(this.keyframes[0].s[0].c, o),
                        this.pv = shapePool.clone(this.v),
                        this.localShapeCollection = shapeCollectionPool.newShapeCollection(),
                        this.paths = this.localShapeCollection,
                        this.paths.addShape(this.v),
                        this.lastFrame = e,
                        this.reset = s,
                        this._caching = {
                            lastFrame: e,
                            lastIndex: 0
                        },
                        this.effectsSequence = [a.bind(this)]
                }
                o.prototype.interpolateShape = t,
                    o.prototype.getValue = r,
                    o.prototype.setVValue = i,
                    o.prototype.addEffect = n,
                    l.prototype.getValue = r,
                    l.prototype.interpolateShape = t,
                    l.prototype.setVValue = i,
                    l.prototype.addEffect = n;
                var c = function() {
                    var e = roundCorner;
                    function t(e, t) {
                        this.v = shapePool.newElement(),
                            this.v.setPathData(!0, 4),
                            this.localShapeCollection = shapeCollectionPool.newShapeCollection(),
                            this.paths = this.localShapeCollection,
                            this.localShapeCollection.addShape(this.v),
                            this.d = t.d,
                            this.elem = e,
                            this.comp = e.comp,
                            this.frameId = -1,
                            this.initDynamicPropertyContainer(e),
                            this.p = PropertyFactory.getProp(e, t.p, 1, 0, this),
                            this.s = PropertyFactory.getProp(e, t.s, 1, 0, this),
                            this.dynamicProperties.length ? this.k = !0 : (this.k = !1,
                                this.convertEllToPath())
                    }
                    return t.prototype = {
                        reset: s,
                        getValue: function() {
                            this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId,
                                this.iterateDynamicProperties(),
                            this._mdf && this.convertEllToPath())
                        },
                        convertEllToPath: function() {
                            var t = this.p.v[0]
                                , a = this.p.v[1]
                                , s = this.s.v[0] / 2
                                , i = this.s.v[1] / 2
                                , r = 3 !== this.d
                                , o = this.v;
                            o.v[0][0] = t,
                                o.v[0][1] = a - i,
                                o.v[1][0] = r ? t + s : t - s,
                                o.v[1][1] = a,
                                o.v[2][0] = t,
                                o.v[2][1] = a + i,
                                o.v[3][0] = r ? t - s : t + s,
                                o.v[3][1] = a,
                                o.i[0][0] = r ? t - s * e : t + s * e,
                                o.i[0][1] = a - i,
                                o.i[1][0] = r ? t + s : t - s,
                                o.i[1][1] = a - i * e,
                                o.i[2][0] = r ? t + s * e : t - s * e,
                                o.i[2][1] = a + i,
                                o.i[3][0] = r ? t - s : t + s,
                                o.i[3][1] = a + i * e,
                                o.o[0][0] = r ? t + s * e : t - s * e,
                                o.o[0][1] = a - i,
                                o.o[1][0] = r ? t + s : t - s,
                                o.o[1][1] = a + i * e,
                                o.o[2][0] = r ? t - s * e : t + s * e,
                                o.o[2][1] = a + i,
                                o.o[3][0] = r ? t - s : t + s,
                                o.o[3][1] = a - i * e
                        }
                    },
                        extendPrototype([DynamicPropertyContainer], t),
                        t
                }()
                    , d = function() {
                    function e(e, t) {
                        this.v = shapePool.newElement(),
                            this.v.setPathData(!0, 0),
                            this.elem = e,
                            this.comp = e.comp,
                            this.data = t,
                            this.frameId = -1,
                            this.d = t.d,
                            this.initDynamicPropertyContainer(e),
                            1 === t.sy ? (this.ir = PropertyFactory.getProp(e, t.ir, 0, 0, this),
                                this.is = PropertyFactory.getProp(e, t.is, 0, .01, this),
                                this.convertToPath = this.convertStarToPath) : this.convertToPath = this.convertPolygonToPath,
                            this.pt = PropertyFactory.getProp(e, t.pt, 0, 0, this),
                            this.p = PropertyFactory.getProp(e, t.p, 1, 0, this),
                            this.r = PropertyFactory.getProp(e, t.r, 0, degToRads, this),
                            this.or = PropertyFactory.getProp(e, t.or, 0, 0, this),
                            this.os = PropertyFactory.getProp(e, t.os, 0, .01, this),
                            this.localShapeCollection = shapeCollectionPool.newShapeCollection(),
                            this.localShapeCollection.addShape(this.v),
                            this.paths = this.localShapeCollection,
                            this.dynamicProperties.length ? this.k = !0 : (this.k = !1,
                                this.convertToPath())
                    }
                    return e.prototype = {
                        reset: s,
                        getValue: function() {
                            this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId,
                                this.iterateDynamicProperties(),
                            this._mdf && this.convertToPath())
                        },
                        convertStarToPath: function() {
                            var e, t, a, s, i = 2 * Math.floor(this.pt.v), r = 2 * Math.PI / i, o = !0, n = this.or.v, l = this.ir.v, c = this.os.v, d = this.is.v, h = 2 * Math.PI * n / (2 * i), p = 2 * Math.PI * l / (2 * i), u = -Math.PI / 2;
                            u += this.r.v;
                            var m = 3 === this.data.d ? -1 : 1;
                            for (this.v._length = 0,
                                     e = 0; e < i; e += 1) {
                                a = o ? c : d,
                                    s = o ? h : p;
                                var f = (t = o ? n : l) * Math.cos(u)
                                    , v = t * Math.sin(u)
                                    , g = 0 === f && 0 === v ? 0 : v / Math.sqrt(f * f + v * v)
                                    , y = 0 === f && 0 === v ? 0 : -f / Math.sqrt(f * f + v * v);
                                f += +this.p.v[0],
                                    v += +this.p.v[1],
                                    this.v.setTripleAt(f, v, f - g * s * a * m, v - y * s * a * m, f + g * s * a * m, v + y * s * a * m, e, !0),
                                    o = !o,
                                    u += r * m
                            }
                        },
                        convertPolygonToPath: function() {
                            var e, t = Math.floor(this.pt.v), a = 2 * Math.PI / t, s = this.or.v, i = this.os.v, r = 2 * Math.PI * s / (4 * t), o = .5 * -Math.PI, n = 3 === this.data.d ? -1 : 1;
                            for (o += this.r.v,
                                     this.v._length = 0,
                                     e = 0; e < t; e += 1) {
                                var l = s * Math.cos(o)
                                    , c = s * Math.sin(o)
                                    , d = 0 === l && 0 === c ? 0 : c / Math.sqrt(l * l + c * c)
                                    , h = 0 === l && 0 === c ? 0 : -l / Math.sqrt(l * l + c * c);
                                l += +this.p.v[0],
                                    c += +this.p.v[1],
                                    this.v.setTripleAt(l, c, l - d * r * i * n, c - h * r * i * n, l + d * r * i * n, c + h * r * i * n, e, !0),
                                    o += a * n
                            }
                            this.paths.length = 0,
                                this.paths[0] = this.v
                        }
                    },
                        extendPrototype([DynamicPropertyContainer], e),
                        e
                }()
                    , h = function() {
                    function e(e, t) {
                        this.v = shapePool.newElement(),
                            this.v.c = !0,
                            this.localShapeCollection = shapeCollectionPool.newShapeCollection(),
                            this.localShapeCollection.addShape(this.v),
                            this.paths = this.localShapeCollection,
                            this.elem = e,
                            this.comp = e.comp,
                            this.frameId = -1,
                            this.d = t.d,
                            this.initDynamicPropertyContainer(e),
                            this.p = PropertyFactory.getProp(e, t.p, 1, 0, this),
                            this.s = PropertyFactory.getProp(e, t.s, 1, 0, this),
                            this.r = PropertyFactory.getProp(e, t.r, 0, 0, this),
                            this.dynamicProperties.length ? this.k = !0 : (this.k = !1,
                                this.convertRectToPath())
                    }
                    return e.prototype = {
                        convertRectToPath: function() {
                            var e = this.p.v[0]
                                , t = this.p.v[1]
                                , a = this.s.v[0] / 2
                                , s = this.s.v[1] / 2
                                , i = bmMin(a, s, this.r.v)
                                , r = i * (1 - roundCorner);
                            this.v._length = 0,
                                2 === this.d || 1 === this.d ? (this.v.setTripleAt(e + a, t - s + i, e + a, t - s + i, e + a, t - s + r, 0, !0),
                                    this.v.setTripleAt(e + a, t + s - i, e + a, t + s - r, e + a, t + s - i, 1, !0),
                                    0 !== i ? (this.v.setTripleAt(e + a - i, t + s, e + a - i, t + s, e + a - r, t + s, 2, !0),
                                        this.v.setTripleAt(e - a + i, t + s, e - a + r, t + s, e - a + i, t + s, 3, !0),
                                        this.v.setTripleAt(e - a, t + s - i, e - a, t + s - i, e - a, t + s - r, 4, !0),
                                        this.v.setTripleAt(e - a, t - s + i, e - a, t - s + r, e - a, t - s + i, 5, !0),
                                        this.v.setTripleAt(e - a + i, t - s, e - a + i, t - s, e - a + r, t - s, 6, !0),
                                        this.v.setTripleAt(e + a - i, t - s, e + a - r, t - s, e + a - i, t - s, 7, !0)) : (this.v.setTripleAt(e - a, t + s, e - a + r, t + s, e - a, t + s, 2),
                                        this.v.setTripleAt(e - a, t - s, e - a, t - s + r, e - a, t - s, 3))) : (this.v.setTripleAt(e + a, t - s + i, e + a, t - s + r, e + a, t - s + i, 0, !0),
                                    0 !== i ? (this.v.setTripleAt(e + a - i, t - s, e + a - i, t - s, e + a - r, t - s, 1, !0),
                                        this.v.setTripleAt(e - a + i, t - s, e - a + r, t - s, e - a + i, t - s, 2, !0),
                                        this.v.setTripleAt(e - a, t - s + i, e - a, t - s + i, e - a, t - s + r, 3, !0),
                                        this.v.setTripleAt(e - a, t + s - i, e - a, t + s - r, e - a, t + s - i, 4, !0),
                                        this.v.setTripleAt(e - a + i, t + s, e - a + i, t + s, e - a + r, t + s, 5, !0),
                                        this.v.setTripleAt(e + a - i, t + s, e + a - r, t + s, e + a - i, t + s, 6, !0),
                                        this.v.setTripleAt(e + a, t + s - i, e + a, t + s - i, e + a, t + s - r, 7, !0)) : (this.v.setTripleAt(e - a, t - s, e - a + r, t - s, e - a, t - s, 1, !0),
                                        this.v.setTripleAt(e - a, t + s, e - a, t + s - r, e - a, t + s, 2, !0),
                                        this.v.setTripleAt(e + a, t + s, e + a - r, t + s, e + a, t + s, 3, !0)))
                        },
                        getValue: function() {
                            this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId,
                                this.iterateDynamicProperties(),
                            this._mdf && this.convertRectToPath())
                        },
                        reset: s
                    },
                        extendPrototype([DynamicPropertyContainer], e),
                        e
                }()
                    , p = {
                    getShapeProp: function(e, t, a) {
                        var s;
                        return 3 === a || 4 === a ? s = (3 === a ? t.pt : t.ks).k.length ? new l(e,t,a) : new o(e,t,a) : 5 === a ? s = new h(e,t) : 6 === a ? s = new c(e,t) : 7 === a && (s = new d(e,t)),
                        s.k && e.addDynamicProperty(s),
                            s
                    },
                    getConstructorFunction: function() {
                        return o
                    },
                    getKeyframedConstructorFunction: function() {
                        return l
                    }
                };
                return p
            }(), Matrix = function() {
                var e = Math.cos
                    , t = Math.sin
                    , a = Math.tan
                    , s = Math.round;
                function i() {
                    return this.props[0] = 1,
                        this.props[1] = 0,
                        this.props[2] = 0,
                        this.props[3] = 0,
                        this.props[4] = 0,
                        this.props[5] = 1,
                        this.props[6] = 0,
                        this.props[7] = 0,
                        this.props[8] = 0,
                        this.props[9] = 0,
                        this.props[10] = 1,
                        this.props[11] = 0,
                        this.props[12] = 0,
                        this.props[13] = 0,
                        this.props[14] = 0,
                        this.props[15] = 1,
                        this
                }
                function r(a) {
                    if (0 === a)
                        return this;
                    var s = e(a)
                        , i = t(a);
                    return this._t(s, -i, 0, 0, i, s, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
                }
                function o(a) {
                    if (0 === a)
                        return this;
                    var s = e(a)
                        , i = t(a);
                    return this._t(1, 0, 0, 0, 0, s, -i, 0, 0, i, s, 0, 0, 0, 0, 1)
                }
                function n(a) {
                    if (0 === a)
                        return this;
                    var s = e(a)
                        , i = t(a);
                    return this._t(s, 0, i, 0, 0, 1, 0, 0, -i, 0, s, 0, 0, 0, 0, 1)
                }
                function l(a) {
                    if (0 === a)
                        return this;
                    var s = e(a)
                        , i = t(a);
                    return this._t(s, -i, 0, 0, i, s, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
                }
                function c(e, t) {
                    return this._t(1, t, e, 1, 0, 0)
                }
                function d(e, t) {
                    return this.shear(a(e), a(t))
                }
                function h(s, i) {
                    var r = e(i)
                        , o = t(i);
                    return this._t(r, o, 0, 0, -o, r, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(1, 0, 0, 0, a(s), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(r, -o, 0, 0, o, r, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
                }
                function p(e, t, a) {
                    return a || 0 === a || (a = 1),
                        1 === e && 1 === t && 1 === a ? this : this._t(e, 0, 0, 0, 0, t, 0, 0, 0, 0, a, 0, 0, 0, 0, 1)
                }
                function u(e, t, a, s, i, r, o, n, l, c, d, h, p, u, m, f) {
                    return this.props[0] = e,
                        this.props[1] = t,
                        this.props[2] = a,
                        this.props[3] = s,
                        this.props[4] = i,
                        this.props[5] = r,
                        this.props[6] = o,
                        this.props[7] = n,
                        this.props[8] = l,
                        this.props[9] = c,
                        this.props[10] = d,
                        this.props[11] = h,
                        this.props[12] = p,
                        this.props[13] = u,
                        this.props[14] = m,
                        this.props[15] = f,
                        this
                }
                function m(e, t, a) {
                    return a = a || 0,
                        0 !== e || 0 !== t || 0 !== a ? this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, e, t, a, 1) : this
                }
                function f(e, t, a, s, i, r, o, n, l, c, d, h, p, u, m, f) {
                    var v = this.props;
                    if (1 === e && 0 === t && 0 === a && 0 === s && 0 === i && 1 === r && 0 === o && 0 === n && 0 === l && 0 === c && 1 === d && 0 === h)
                        return v[12] = v[12] * e + v[15] * p,
                            v[13] = v[13] * r + v[15] * u,
                            v[14] = v[14] * d + v[15] * m,
                            v[15] *= f,
                            this._identityCalculated = !1,
                            this;
                    var g = v[0]
                        , y = v[1]
                        , _ = v[2]
                        , b = v[3]
                        , k = v[4]
                        , w = v[5]
                        , B = v[6]
                        , C = v[7]
                        , x = v[8]
                        , S = v[9]
                        , E = v[10]
                        , V = v[11]
                        , N = v[12]
                        , P = v[13]
                        , A = v[14]
                        , $ = v[15];
                    return v[0] = g * e + y * i + _ * l + b * p,
                        v[1] = g * t + y * r + _ * c + b * u,
                        v[2] = g * a + y * o + _ * d + b * m,
                        v[3] = g * s + y * n + _ * h + b * f,
                        v[4] = k * e + w * i + B * l + C * p,
                        v[5] = k * t + w * r + B * c + C * u,
                        v[6] = k * a + w * o + B * d + C * m,
                        v[7] = k * s + w * n + B * h + C * f,
                        v[8] = x * e + S * i + E * l + V * p,
                        v[9] = x * t + S * r + E * c + V * u,
                        v[10] = x * a + S * o + E * d + V * m,
                        v[11] = x * s + S * n + E * h + V * f,
                        v[12] = N * e + P * i + A * l + $ * p,
                        v[13] = N * t + P * r + A * c + $ * u,
                        v[14] = N * a + P * o + A * d + $ * m,
                        v[15] = N * s + P * n + A * h + $ * f,
                        this._identityCalculated = !1,
                        this
                }
                function v(e) {
                    var t = e.props;
                    return this.transform(t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8], t[9], t[10], t[11], t[12], t[13], t[14], t[15])
                }
                function g() {
                    return this._identityCalculated || (this._identity = !(1 !== this.props[0] || 0 !== this.props[1] || 0 !== this.props[2] || 0 !== this.props[3] || 0 !== this.props[4] || 1 !== this.props[5] || 0 !== this.props[6] || 0 !== this.props[7] || 0 !== this.props[8] || 0 !== this.props[9] || 1 !== this.props[10] || 0 !== this.props[11] || 0 !== this.props[12] || 0 !== this.props[13] || 0 !== this.props[14] || 1 !== this.props[15]),
                        this._identityCalculated = !0),
                        this._identity
                }
                function y(e) {
                    for (var t = 0; t < 16; ) {
                        if (e.props[t] !== this.props[t])
                            return !1;
                        t += 1
                    }
                    return !0
                }
                function _(e) {
                    var t;
                    for (t = 0; t < 16; t += 1)
                        e.props[t] = this.props[t];
                    return e
                }
                function b(e) {
                    var t;
                    for (t = 0; t < 16; t += 1)
                        this.props[t] = e[t]
                }
                function k(e, t, a) {
                    return {
                        x: e * this.props[0] + t * this.props[4] + a * this.props[8] + this.props[12],
                        y: e * this.props[1] + t * this.props[5] + a * this.props[9] + this.props[13],
                        z: e * this.props[2] + t * this.props[6] + a * this.props[10] + this.props[14]
                    }
                }
                function w(e, t, a) {
                    return e * this.props[0] + t * this.props[4] + a * this.props[8] + this.props[12]
                }
                function B(e, t, a) {
                    return e * this.props[1] + t * this.props[5] + a * this.props[9] + this.props[13]
                }
                function C(e, t, a) {
                    return e * this.props[2] + t * this.props[6] + a * this.props[10] + this.props[14]
                }
                function x() {
                    var e = this.props[0] * this.props[5] - this.props[1] * this.props[4]
                        , t = this.props[5] / e
                        , a = -this.props[1] / e
                        , s = -this.props[4] / e
                        , i = this.props[0] / e
                        , r = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / e
                        , o = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / e
                        , n = new Matrix;
                    return n.props[0] = t,
                        n.props[1] = a,
                        n.props[4] = s,
                        n.props[5] = i,
                        n.props[12] = r,
                        n.props[13] = o,
                        n
                }
                function S(e) {
                    return this.getInverseMatrix().applyToPointArray(e[0], e[1], e[2] || 0)
                }
                function E(e) {
                    var t, a = e.length, s = [];
                    for (t = 0; t < a; t += 1)
                        s[t] = S(e[t]);
                    return s
                }
                function V(e, t, a) {
                    var s = createTypedArray("float32", 6);
                    if (this.isIdentity())
                        s[0] = e[0],
                            s[1] = e[1],
                            s[2] = t[0],
                            s[3] = t[1],
                            s[4] = a[0],
                            s[5] = a[1];
                    else {
                        var i = this.props[0]
                            , r = this.props[1]
                            , o = this.props[4]
                            , n = this.props[5]
                            , l = this.props[12]
                            , c = this.props[13];
                        s[0] = e[0] * i + e[1] * o + l,
                            s[1] = e[0] * r + e[1] * n + c,
                            s[2] = t[0] * i + t[1] * o + l,
                            s[3] = t[0] * r + t[1] * n + c,
                            s[4] = a[0] * i + a[1] * o + l,
                            s[5] = a[0] * r + a[1] * n + c
                    }
                    return s
                }
                function N(e, t, a) {
                    return this.isIdentity() ? [e, t, a] : [e * this.props[0] + t * this.props[4] + a * this.props[8] + this.props[12], e * this.props[1] + t * this.props[5] + a * this.props[9] + this.props[13], e * this.props[2] + t * this.props[6] + a * this.props[10] + this.props[14]]
                }
                function P(e, t) {
                    if (this.isIdentity())
                        return e + "," + t;
                    var a = this.props;
                    return Math.round(100 * (e * a[0] + t * a[4] + a[12])) / 100 + "," + Math.round(100 * (e * a[1] + t * a[5] + a[13])) / 100
                }
                function A() {
                    for (var e = 0, t = this.props, a = "matrix3d("; e < 16; )
                        a += s(1e4 * t[e]) / 1e4,
                            a += 15 === e ? ")" : ",",
                            e += 1;
                    return a
                }
                function $(e) {
                    return e < 1e-6 && e > 0 || e > -1e-6 && e < 0 ? s(1e4 * e) / 1e4 : e
                }
                function T() {
                    var e = this.props;
                    return "matrix(" + $(e[0]) + "," + $(e[1]) + "," + $(e[4]) + "," + $(e[5]) + "," + $(e[12]) + "," + $(e[13]) + ")"
                }
                return function() {
                    this.reset = i,
                        this.rotate = r,
                        this.rotateX = o,
                        this.rotateY = n,
                        this.rotateZ = l,
                        this.skew = d,
                        this.skewFromAxis = h,
                        this.shear = c,
                        this.scale = p,
                        this.setTransform = u,
                        this.translate = m,
                        this.transform = f,
                        this.multiply = v,
                        this.applyToPoint = k,
                        this.applyToX = w,
                        this.applyToY = B,
                        this.applyToZ = C,
                        this.applyToPointArray = N,
                        this.applyToTriplePoints = V,
                        this.applyToPointStringified = P,
                        this.toCSS = A,
                        this.to2dCSS = T,
                        this.clone = _,
                        this.cloneFromProps = b,
                        this.equals = y,
                        this.inversePoints = E,
                        this.inversePoint = S,
                        this.getInverseMatrix = x,
                        this._t = this.transform,
                        this.isIdentity = g,
                        this._identity = !0,
                        this._identityCalculated = !1,
                        this.props = createTypedArray("float32", 16),
                        this.reset()
                }
            }();
            function _typeof$3(e) {
                return (_typeof$3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                            return typeof e
                        }
                        : function(e) {
                            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                        }
                )(e)
            }
            var lottie = {};
            function setLocation(e) {
                setLocationHref(e)
            }
            function searchAnimations() {
                animationManager.searchAnimations()
            }
            function setSubframeRendering(e) {
                setSubframeEnabled(e)
            }
            function setPrefix(e) {
                setIdPrefix(e)
            }
            function loadAnimation(e) {
                return animationManager.loadAnimation(e)
            }
            function setQuality(e) {
                if ("string" == typeof e)
                    switch (e) {
                        case "high":
                            setDefaultCurveSegments(200);
                            break;
                        default:
                        case "medium":
                            setDefaultCurveSegments(50);
                            break;
                        case "low":
                            setDefaultCurveSegments(10)
                    }
                else
                    !isNaN(e) && e > 1 && setDefaultCurveSegments(e)
            }
            function inBrowser() {
                return "undefined" != typeof navigator
            }
            function installPlugin(e, t) {
                "expressions" === e && setExpressionsPlugin(t)
            }
            function getFactory(e) {
                switch (e) {
                    case "propertyFactory":
                        return PropertyFactory;
                    case "shapePropertyFactory":
                        return ShapePropertyFactory;
                    case "matrix":
                        return Matrix;
                    default:
                        return null
                }
            }
            function checkReady() {
                "complete" === document.readyState && (clearInterval(readyStateCheckInterval),
                    searchAnimations())
            }
            function getQueryVariable(e) {
                for (var t = queryString.split("&"), a = 0; a < t.length; a += 1) {
                    var s = t[a].split("=");
                    if (decodeURIComponent(s[0]) == e)
                        return decodeURIComponent(s[1])
                }
                return null
            }
            lottie.play = animationManager.play,
                lottie.pause = animationManager.pause,
                lottie.setLocationHref = setLocation,
                lottie.togglePause = animationManager.togglePause,
                lottie.setSpeed = animationManager.setSpeed,
                lottie.setDirection = animationManager.setDirection,
                lottie.stop = animationManager.stop,
                lottie.searchAnimations = searchAnimations,
                lottie.registerAnimation = animationManager.registerAnimation,
                lottie.loadAnimation = loadAnimation,
                lottie.setSubframeRendering = setSubframeRendering,
                lottie.resize = animationManager.resize,
                lottie.goToAndStop = animationManager.goToAndStop,
                lottie.destroy = animationManager.destroy,
                lottie.setQuality = setQuality,
                lottie.inBrowser = inBrowser,
                lottie.installPlugin = installPlugin,
                lottie.freeze = animationManager.freeze,
                lottie.unfreeze = animationManager.unfreeze,
                lottie.setVolume = animationManager.setVolume,
                lottie.mute = animationManager.mute,
                lottie.unmute = animationManager.unmute,
                lottie.getRegisteredAnimations = animationManager.getRegisteredAnimations,
                lottie.useWebWorker = setWebWorker,
                lottie.setIDPrefix = setPrefix,
                lottie.__getFactory = getFactory,
                lottie.version = "5.12.2";
            var queryString = ""
                , scripts = document.getElementsByTagName("script")
                , index = scripts.length - 1
                , myScript = scripts[index] || {
                src: ""
            };
            queryString = myScript.src ? myScript.src.replace(/^[^\?]+\??/, "") : "",
                getQueryVariable("renderer");
            var readyStateCheckInterval = setInterval(checkReady, 100);
            try {
                "object" !== _typeof$3(exports) && (window.bodymovin = lottie)
            } catch (err) {}
            var ShapeModifiers = function() {
                var e = {}
                    , t = {};
                return e.registerModifier = function(e, a) {
                    t[e] || (t[e] = a)
                }
                    ,
                    e.getModifier = function(e, a, s) {
                        return new t[e](a,s)
                    }
                    ,
                    e
            }();
            function ShapeModifier() {}
            function TrimModifier() {}
            function PuckerAndBloatModifier() {}
            ShapeModifier.prototype.initModifierProperties = function() {}
                ,
                ShapeModifier.prototype.addShapeToModifier = function() {}
                ,
                ShapeModifier.prototype.addShape = function(e) {
                    if (!this.closed) {
                        e.sh.container.addDynamicProperty(e.sh);
                        var t = {
                            shape: e.sh,
                            data: e,
                            localShapeCollection: shapeCollectionPool.newShapeCollection()
                        };
                        this.shapes.push(t),
                            this.addShapeToModifier(t),
                        this._isAnimated && e.setAsAnimated()
                    }
                }
                ,
                ShapeModifier.prototype.init = function(e, t) {
                    this.shapes = [],
                        this.elem = e,
                        this.initDynamicPropertyContainer(e),
                        this.initModifierProperties(e, t),
                        this.frameId = initialDefaultFrame,
                        this.closed = !1,
                        this.k = !1,
                        this.dynamicProperties.length ? this.k = !0 : this.getValue(!0)
                }
                ,
                ShapeModifier.prototype.processKeys = function() {
                    this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId,
                        this.iterateDynamicProperties())
                }
                ,
                extendPrototype([DynamicPropertyContainer], ShapeModifier),
                extendPrototype([ShapeModifier], TrimModifier),
                TrimModifier.prototype.initModifierProperties = function(e, t) {
                    this.s = PropertyFactory.getProp(e, t.s, 0, .01, this),
                        this.e = PropertyFactory.getProp(e, t.e, 0, .01, this),
                        this.o = PropertyFactory.getProp(e, t.o, 0, 0, this),
                        this.sValue = 0,
                        this.eValue = 0,
                        this.getValue = this.processKeys,
                        this.m = t.m,
                        this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length
                }
                ,
                TrimModifier.prototype.addShapeToModifier = function(e) {
                    e.pathsData = []
                }
                ,
                TrimModifier.prototype.calculateShapeEdges = function(e, t, a, s, i) {
                    var r = [];
                    t <= 1 ? r.push({
                        s: e,
                        e: t
                    }) : e >= 1 ? r.push({
                        s: e - 1,
                        e: t - 1
                    }) : (r.push({
                        s: e,
                        e: 1
                    }),
                        r.push({
                            s: 0,
                            e: t - 1
                        }));
                    var o, n, l = [], c = r.length;
                    for (o = 0; o < c; o += 1) {
                        var d, h;
                        (n = r[o]).e * i < s || n.s * i > s + a || (d = n.s * i <= s ? 0 : (n.s * i - s) / a,
                            h = n.e * i >= s + a ? 1 : (n.e * i - s) / a,
                            l.push([d, h]))
                    }
                    return l.length || l.push([0, 0]),
                        l
                }
                ,
                TrimModifier.prototype.releasePathsData = function(e) {
                    var t, a = e.length;
                    for (t = 0; t < a; t += 1)
                        segmentsLengthPool.release(e[t]);
                    return e.length = 0,
                        e
                }
                ,
                TrimModifier.prototype.processShapes = function(e) {
                    var t, a, s, i;
                    if (this._mdf || e) {
                        var r = this.o.v % 360 / 360;
                        if (r < 0 && (r += 1),
                        (t = this.s.v > 1 ? 1 + r : this.s.v < 0 ? 0 + r : this.s.v + r) > (a = this.e.v > 1 ? 1 + r : this.e.v < 0 ? 0 + r : this.e.v + r)) {
                            var o = t;
                            t = a,
                                a = o
                        }
                        t = 1e-4 * Math.round(1e4 * t),
                            a = 1e-4 * Math.round(1e4 * a),
                            this.sValue = t,
                            this.eValue = a
                    } else
                        t = this.sValue,
                            a = this.eValue;
                    var n, l, c, d, h, p = this.shapes.length, u = 0;
                    if (a === t)
                        for (i = 0; i < p; i += 1)
                            this.shapes[i].localShapeCollection.releaseShapes(),
                                this.shapes[i].shape._mdf = !0,
                                this.shapes[i].shape.paths = this.shapes[i].localShapeCollection,
                            this._mdf && (this.shapes[i].pathsData.length = 0);
                    else if (1 === a && 0 === t || 0 === a && 1 === t) {
                        if (this._mdf)
                            for (i = 0; i < p; i += 1)
                                this.shapes[i].pathsData.length = 0,
                                    this.shapes[i].shape._mdf = !0
                    } else {
                        var m, f, v = [];
                        for (i = 0; i < p; i += 1)
                            if ((m = this.shapes[i]).shape._mdf || this._mdf || e || 2 === this.m) {
                                if (l = (s = m.shape.paths)._length,
                                    h = 0,
                                !m.shape._mdf && m.pathsData.length)
                                    h = m.totalShapeLength;
                                else {
                                    for (c = this.releasePathsData(m.pathsData),
                                             n = 0; n < l; n += 1)
                                        d = bez.getSegmentsLength(s.shapes[n]),
                                            c.push(d),
                                            h += d.totalLength;
                                    m.totalShapeLength = h,
                                        m.pathsData = c
                                }
                                u += h,
                                    m.shape._mdf = !0
                            } else
                                m.shape.paths = m.localShapeCollection;
                        var g, y = t, _ = a, b = 0;
                        for (i = p - 1; i >= 0; i -= 1)
                            if ((m = this.shapes[i]).shape._mdf) {
                                for ((f = m.localShapeCollection).releaseShapes(),
                                         2 === this.m && p > 1 ? (g = this.calculateShapeEdges(t, a, m.totalShapeLength, b, u),
                                             b += m.totalShapeLength) : g = [[y, _]],
                                         l = g.length,
                                         n = 0; n < l; n += 1) {
                                    y = g[n][0],
                                        _ = g[n][1],
                                        v.length = 0,
                                        _ <= 1 ? v.push({
                                            s: m.totalShapeLength * y,
                                            e: m.totalShapeLength * _
                                        }) : y >= 1 ? v.push({
                                            s: m.totalShapeLength * (y - 1),
                                            e: m.totalShapeLength * (_ - 1)
                                        }) : (v.push({
                                            s: m.totalShapeLength * y,
                                            e: m.totalShapeLength
                                        }),
                                            v.push({
                                                s: 0,
                                                e: m.totalShapeLength * (_ - 1)
                                            }));
                                    var k = this.addShapes(m, v[0]);
                                    if (v[0].s !== v[0].e) {
                                        if (v.length > 1)
                                            if (m.shape.paths.shapes[m.shape.paths._length - 1].c) {
                                                var w = k.pop();
                                                this.addPaths(k, f),
                                                    k = this.addShapes(m, v[1], w)
                                            } else
                                                this.addPaths(k, f),
                                                    k = this.addShapes(m, v[1]);
                                        this.addPaths(k, f)
                                    }
                                }
                                m.shape.paths = f
                            }
                    }
                }
                ,
                TrimModifier.prototype.addPaths = function(e, t) {
                    var a, s = e.length;
                    for (a = 0; a < s; a += 1)
                        t.addShape(e[a])
                }
                ,
                TrimModifier.prototype.addSegment = function(e, t, a, s, i, r, o) {
                    i.setXYAt(t[0], t[1], "o", r),
                        i.setXYAt(a[0], a[1], "i", r + 1),
                    o && i.setXYAt(e[0], e[1], "v", r),
                        i.setXYAt(s[0], s[1], "v", r + 1)
                }
                ,
                TrimModifier.prototype.addSegmentFromArray = function(e, t, a, s) {
                    t.setXYAt(e[1], e[5], "o", a),
                        t.setXYAt(e[2], e[6], "i", a + 1),
                    s && t.setXYAt(e[0], e[4], "v", a),
                        t.setXYAt(e[3], e[7], "v", a + 1)
                }
                ,
                TrimModifier.prototype.addShapes = function(e, t, a) {
                    var s, i, r, o, n, l, c, d, h = e.pathsData, p = e.shape.paths.shapes, u = e.shape.paths._length, m = 0, f = [], v = !0;
                    for (a ? (n = a._length,
                        d = a._length) : (a = shapePool.newElement(),
                        n = 0,
                        d = 0),
                             f.push(a),
                             s = 0; s < u; s += 1) {
                        for (l = h[s].lengths,
                                 a.c = p[s].c,
                                 r = p[s].c ? l.length : l.length + 1,
                                 i = 1; i < r; i += 1)
                            if (m + (o = l[i - 1]).addedLength < t.s)
                                m += o.addedLength,
                                    a.c = !1;
                            else {
                                if (m > t.e) {
                                    a.c = !1;
                                    break
                                }
                                t.s <= m && t.e >= m + o.addedLength ? (this.addSegment(p[s].v[i - 1], p[s].o[i - 1], p[s].i[i], p[s].v[i], a, n, v),
                                    v = !1) : (c = bez.getNewSegment(p[s].v[i - 1], p[s].v[i], p[s].o[i - 1], p[s].i[i], (t.s - m) / o.addedLength, (t.e - m) / o.addedLength, l[i - 1]),
                                    this.addSegmentFromArray(c, a, n, v),
                                    v = !1,
                                    a.c = !1),
                                    m += o.addedLength,
                                    n += 1
                            }
                        if (p[s].c && l.length) {
                            if (o = l[i - 1],
                            m <= t.e) {
                                var g = l[i - 1].addedLength;
                                t.s <= m && t.e >= m + g ? (this.addSegment(p[s].v[i - 1], p[s].o[i - 1], p[s].i[0], p[s].v[0], a, n, v),
                                    v = !1) : (c = bez.getNewSegment(p[s].v[i - 1], p[s].v[0], p[s].o[i - 1], p[s].i[0], (t.s - m) / g, (t.e - m) / g, l[i - 1]),
                                    this.addSegmentFromArray(c, a, n, v),
                                    v = !1,
                                    a.c = !1)
                            } else
                                a.c = !1;
                            m += o.addedLength,
                                n += 1
                        }
                        if (a._length && (a.setXYAt(a.v[d][0], a.v[d][1], "i", d),
                            a.setXYAt(a.v[a._length - 1][0], a.v[a._length - 1][1], "o", a._length - 1)),
                        m > t.e)
                            break;
                        s < u - 1 && (a = shapePool.newElement(),
                            v = !0,
                            f.push(a),
                            n = 0)
                    }
                    return f
                }
                ,
                extendPrototype([ShapeModifier], PuckerAndBloatModifier),
                PuckerAndBloatModifier.prototype.initModifierProperties = function(e, t) {
                    this.getValue = this.processKeys,
                        this.amount = PropertyFactory.getProp(e, t.a, 0, null, this),
                        this._isAnimated = !!this.amount.effectsSequence.length
                }
                ,
                PuckerAndBloatModifier.prototype.processPath = function(e, t) {
                    var a = t / 100
                        , s = [0, 0]
                        , i = e._length
                        , r = 0;
                    for (r = 0; r < i; r += 1)
                        s[0] += e.v[r][0],
                            s[1] += e.v[r][1];
                    s[0] /= i,
                        s[1] /= i;
                    var o, n, l, c, d, h, p = shapePool.newElement();
                    for (p.c = e.c,
                             r = 0; r < i; r += 1)
                        o = e.v[r][0] + (s[0] - e.v[r][0]) * a,
                            n = e.v[r][1] + (s[1] - e.v[r][1]) * a,
                            l = e.o[r][0] + (s[0] - e.o[r][0]) * -a,
                            c = e.o[r][1] + (s[1] - e.o[r][1]) * -a,
                            d = e.i[r][0] + (s[0] - e.i[r][0]) * -a,
                            h = e.i[r][1] + (s[1] - e.i[r][1]) * -a,
                            p.setTripleAt(o, n, l, c, d, h, r);
                    return p
                }
                ,
                PuckerAndBloatModifier.prototype.processShapes = function(e) {
                    var t, a, s, i, r, o, n = this.shapes.length, l = this.amount.v;
                    if (0 !== l)
                        for (a = 0; a < n; a += 1) {
                            if (o = (r = this.shapes[a]).localShapeCollection,
                            r.shape._mdf || this._mdf || e)
                                for (o.releaseShapes(),
                                         r.shape._mdf = !0,
                                         t = r.shape.paths.shapes,
                                         i = r.shape.paths._length,
                                         s = 0; s < i; s += 1)
                                    o.addShape(this.processPath(t[s], l));
                            r.shape.paths = r.localShapeCollection
                        }
                    this.dynamicProperties.length || (this._mdf = !1)
                }
            ;
            var TransformPropertyFactory = function() {
                var e = [0, 0];
                function t(e, t, a) {
                    if (this.elem = e,
                        this.frameId = -1,
                        this.propType = "transform",
                        this.data = t,
                        this.v = new Matrix,
                        this.pre = new Matrix,
                        this.appliedTransformations = 0,
                        this.initDynamicPropertyContainer(a || e),
                        t.p && t.p.s ? (this.px = PropertyFactory.getProp(e, t.p.x, 0, 0, this),
                            this.py = PropertyFactory.getProp(e, t.p.y, 0, 0, this),
                        t.p.z && (this.pz = PropertyFactory.getProp(e, t.p.z, 0, 0, this))) : this.p = PropertyFactory.getProp(e, t.p || {
                            k: [0, 0, 0]
                        }, 1, 0, this),
                        t.rx) {
                        if (this.rx = PropertyFactory.getProp(e, t.rx, 0, degToRads, this),
                            this.ry = PropertyFactory.getProp(e, t.ry, 0, degToRads, this),
                            this.rz = PropertyFactory.getProp(e, t.rz, 0, degToRads, this),
                            t.or.k[0].ti) {
                            var s, i = t.or.k.length;
                            for (s = 0; s < i; s += 1)
                                t.or.k[s].to = null,
                                    t.or.k[s].ti = null
                        }
                        this.or = PropertyFactory.getProp(e, t.or, 1, degToRads, this),
                            this.or.sh = !0
                    } else
                        this.r = PropertyFactory.getProp(e, t.r || {
                            k: 0
                        }, 0, degToRads, this);
                    t.sk && (this.sk = PropertyFactory.getProp(e, t.sk, 0, degToRads, this),
                        this.sa = PropertyFactory.getProp(e, t.sa, 0, degToRads, this)),
                        this.a = PropertyFactory.getProp(e, t.a || {
                            k: [0, 0, 0]
                        }, 1, 0, this),
                        this.s = PropertyFactory.getProp(e, t.s || {
                            k: [100, 100, 100]
                        }, 1, .01, this),
                        t.o ? this.o = PropertyFactory.getProp(e, t.o, 0, .01, e) : this.o = {
                            _mdf: !1,
                            v: 1
                        },
                        this._isDirty = !0,
                    this.dynamicProperties.length || this.getValue(!0)
                }
                return t.prototype = {
                    applyToMatrix: function(e) {
                        var t = this._mdf;
                        this.iterateDynamicProperties(),
                            this._mdf = this._mdf || t,
                        this.a && e.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]),
                        this.s && e.scale(this.s.v[0], this.s.v[1], this.s.v[2]),
                        this.sk && e.skewFromAxis(-this.sk.v, this.sa.v),
                            this.r ? e.rotate(-this.r.v) : e.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]),
                            this.data.p.s ? this.data.p.z ? e.translate(this.px.v, this.py.v, -this.pz.v) : e.translate(this.px.v, this.py.v, 0) : e.translate(this.p.v[0], this.p.v[1], -this.p.v[2])
                    },
                    getValue: function(t) {
                        if (this.elem.globalData.frameId !== this.frameId) {
                            if (this._isDirty && (this.precalculateMatrix(),
                                this._isDirty = !1),
                                this.iterateDynamicProperties(),
                            this._mdf || t) {
                                var a;
                                if (this.v.cloneFromProps(this.pre.props),
                                this.appliedTransformations < 1 && this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]),
                                this.appliedTransformations < 2 && this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]),
                                this.sk && this.appliedTransformations < 3 && this.v.skewFromAxis(-this.sk.v, this.sa.v),
                                    this.r && this.appliedTransformations < 4 ? this.v.rotate(-this.r.v) : !this.r && this.appliedTransformations < 4 && this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]),
                                    this.autoOriented) {
                                    var s, i;
                                    if (a = this.elem.globalData.frameRate,
                                    this.p && this.p.keyframes && this.p.getValueAtTime)
                                        this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t ? (s = this.p.getValueAtTime((this.p.keyframes[0].t + .01) / a, 0),
                                            i = this.p.getValueAtTime(this.p.keyframes[0].t / a, 0)) : this.p._caching.lastFrame + this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t ? (s = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / a, 0),
                                            i = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - .05) / a, 0)) : (s = this.p.pv,
                                            i = this.p.getValueAtTime((this.p._caching.lastFrame + this.p.offsetTime - .01) / a, this.p.offsetTime));
                                    else if (this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {
                                        s = [],
                                            i = [];
                                        var r = this.px
                                            , o = this.py;
                                        r._caching.lastFrame + r.offsetTime <= r.keyframes[0].t ? (s[0] = r.getValueAtTime((r.keyframes[0].t + .01) / a, 0),
                                            s[1] = o.getValueAtTime((o.keyframes[0].t + .01) / a, 0),
                                            i[0] = r.getValueAtTime(r.keyframes[0].t / a, 0),
                                            i[1] = o.getValueAtTime(o.keyframes[0].t / a, 0)) : r._caching.lastFrame + r.offsetTime >= r.keyframes[r.keyframes.length - 1].t ? (s[0] = r.getValueAtTime(r.keyframes[r.keyframes.length - 1].t / a, 0),
                                            s[1] = o.getValueAtTime(o.keyframes[o.keyframes.length - 1].t / a, 0),
                                            i[0] = r.getValueAtTime((r.keyframes[r.keyframes.length - 1].t - .01) / a, 0),
                                            i[1] = o.getValueAtTime((o.keyframes[o.keyframes.length - 1].t - .01) / a, 0)) : (s = [r.pv, o.pv],
                                            i[0] = r.getValueAtTime((r._caching.lastFrame + r.offsetTime - .01) / a, r.offsetTime),
                                            i[1] = o.getValueAtTime((o._caching.lastFrame + o.offsetTime - .01) / a, o.offsetTime))
                                    } else
                                        s = i = e;
                                    this.v.rotate(-Math.atan2(s[1] - i[1], s[0] - i[0]))
                                }
                                this.data.p && this.data.p.s ? this.data.p.z ? this.v.translate(this.px.v, this.py.v, -this.pz.v) : this.v.translate(this.px.v, this.py.v, 0) : this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2])
                            }
                            this.frameId = this.elem.globalData.frameId
                        }
                    },
                    precalculateMatrix: function() {
                        if (this.appliedTransformations = 0,
                            this.pre.reset(),
                        !this.a.effectsSequence.length && (this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]),
                            this.appliedTransformations = 1,
                            !this.s.effectsSequence.length)) {
                            if (this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]),
                                this.appliedTransformations = 2,
                                this.sk) {
                                if (this.sk.effectsSequence.length || this.sa.effectsSequence.length)
                                    return;
                                this.pre.skewFromAxis(-this.sk.v, this.sa.v),
                                    this.appliedTransformations = 3
                            }
                            this.r ? this.r.effectsSequence.length || (this.pre.rotate(-this.r.v),
                                this.appliedTransformations = 4) : this.rz.effectsSequence.length || this.ry.effectsSequence.length || this.rx.effectsSequence.length || this.or.effectsSequence.length || (this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]),
                                this.appliedTransformations = 4)
                        }
                    },
                    autoOrient: function() {}
                },
                    extendPrototype([DynamicPropertyContainer], t),
                    t.prototype.addDynamicProperty = function(e) {
                        this._addDynamicProperty(e),
                            this.elem.addDynamicProperty(e),
                            this._isDirty = !0
                    }
                    ,
                    t.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty,
                    {
                        getTransformProperty: function(e, a, s) {
                            return new t(e,a,s)
                        }
                    }
            }();
            function RepeaterModifier() {}
            function RoundCornersModifier() {}
            function floatEqual(e, t) {
                return 1e5 * Math.abs(e - t) <= Math.min(Math.abs(e), Math.abs(t))
            }
            function floatZero(e) {
                return Math.abs(e) <= 1e-5
            }
            function lerp(e, t, a) {
                return e * (1 - a) + t * a
            }
            function lerpPoint(e, t, a) {
                return [lerp(e[0], t[0], a), lerp(e[1], t[1], a)]
            }
            function quadRoots(e, t, a) {
                if (0 === e)
                    return [];
                var s = t * t - 4 * e * a;
                if (s < 0)
                    return [];
                var i = -t / (2 * e);
                if (0 === s)
                    return [i];
                var r = Math.sqrt(s) / (2 * e);
                return [i - r, i + r]
            }
            function polynomialCoefficients(e, t, a, s) {
                return [3 * t - e - 3 * a + s, 3 * e - 6 * t + 3 * a, -3 * e + 3 * t, e]
            }
            function singlePoint(e) {
                return new PolynomialBezier(e,e,e,e,!1)
            }
            function PolynomialBezier(e, t, a, s, i) {
                i && pointEqual(e, t) && (t = lerpPoint(e, s, 1 / 3)),
                i && pointEqual(a, s) && (a = lerpPoint(e, s, 2 / 3));
                var r = polynomialCoefficients(e[0], t[0], a[0], s[0])
                    , o = polynomialCoefficients(e[1], t[1], a[1], s[1]);
                this.a = [r[0], o[0]],
                    this.b = [r[1], o[1]],
                    this.c = [r[2], o[2]],
                    this.d = [r[3], o[3]],
                    this.points = [e, t, a, s]
            }
            function extrema(e, t) {
                var a = e.points[0][t]
                    , s = e.points[e.points.length - 1][t];
                if (a > s) {
                    var i = s;
                    s = a,
                        a = i
                }
                for (var r = quadRoots(3 * e.a[t], 2 * e.b[t], e.c[t]), o = 0; o < r.length; o += 1)
                    if (r[o] > 0 && r[o] < 1) {
                        var n = e.point(r[o])[t];
                        n < a ? a = n : n > s && (s = n)
                    }
                return {
                    min: a,
                    max: s
                }
            }
            function intersectData(e, t, a) {
                var s = e.boundingBox();
                return {
                    cx: s.cx,
                    cy: s.cy,
                    width: s.width,
                    height: s.height,
                    bez: e,
                    t: (t + a) / 2,
                    t1: t,
                    t2: a
                }
            }
            function splitData(e) {
                var t = e.bez.split(.5);
                return [intersectData(t[0], e.t1, e.t), intersectData(t[1], e.t, e.t2)]
            }
            function boxIntersect(e, t) {
                return 2 * Math.abs(e.cx - t.cx) < e.width + t.width && 2 * Math.abs(e.cy - t.cy) < e.height + t.height
            }
            function intersectsImpl(e, t, a, s, i, r) {
                if (boxIntersect(e, t))
                    if (a >= r || e.width <= s && e.height <= s && t.width <= s && t.height <= s)
                        i.push([e.t, t.t]);
                    else {
                        var o = splitData(e)
                            , n = splitData(t);
                        intersectsImpl(o[0], n[0], a + 1, s, i, r),
                            intersectsImpl(o[0], n[1], a + 1, s, i, r),
                            intersectsImpl(o[1], n[0], a + 1, s, i, r),
                            intersectsImpl(o[1], n[1], a + 1, s, i, r)
                    }
            }
            function crossProduct(e, t) {
                return [e[1] * t[2] - e[2] * t[1], e[2] * t[0] - e[0] * t[2], e[0] * t[1] - e[1] * t[0]]
            }
            function lineIntersection(e, t, a, s) {
                var i = [e[0], e[1], 1]
                    , r = [t[0], t[1], 1]
                    , o = [a[0], a[1], 1]
                    , n = [s[0], s[1], 1]
                    , l = crossProduct(crossProduct(i, r), crossProduct(o, n));
                return floatZero(l[2]) ? null : [l[0] / l[2], l[1] / l[2]]
            }
            function polarOffset(e, t, a) {
                return [e[0] + Math.cos(t) * a, e[1] - Math.sin(t) * a]
            }
            function pointDistance(e, t) {
                return Math.hypot(e[0] - t[0], e[1] - t[1])
            }
            function pointEqual(e, t) {
                return floatEqual(e[0], t[0]) && floatEqual(e[1], t[1])
            }
            function ZigZagModifier() {}
            function setPoint(e, t, a, s, i, r, o) {
                var n = a - Math.PI / 2
                    , l = a + Math.PI / 2
                    , c = t[0] + Math.cos(a) * s * i
                    , d = t[1] - Math.sin(a) * s * i;
                e.setTripleAt(c, d, c + Math.cos(n) * r, d - Math.sin(n) * r, c + Math.cos(l) * o, d - Math.sin(l) * o, e.length())
            }
            function getPerpendicularVector(e, t) {
                var a = [t[0] - e[0], t[1] - e[1]]
                    , s = .5 * -Math.PI;
                return [Math.cos(s) * a[0] - Math.sin(s) * a[1], Math.sin(s) * a[0] + Math.cos(s) * a[1]]
            }
            function getProjectingAngle(e, t) {
                var a = 0 === t ? e.length() - 1 : t - 1
                    , s = (t + 1) % e.length()
                    , i = getPerpendicularVector(e.v[a], e.v[s]);
                return Math.atan2(0, 1) - Math.atan2(i[1], i[0])
            }
            function zigZagCorner(e, t, a, s, i, r, o) {
                var n = getProjectingAngle(t, a)
                    , l = t.v[a % t._length]
                    , c = t.v[0 === a ? t._length - 1 : a - 1]
                    , d = t.v[(a + 1) % t._length]
                    , h = 2 === r ? Math.sqrt(Math.pow(l[0] - c[0], 2) + Math.pow(l[1] - c[1], 2)) : 0
                    , p = 2 === r ? Math.sqrt(Math.pow(l[0] - d[0], 2) + Math.pow(l[1] - d[1], 2)) : 0;
                setPoint(e, t.v[a % t._length], n, o, s, p / (2 * (i + 1)), h / (2 * (i + 1)))
            }
            function zigZagSegment(e, t, a, s, i, r) {
                for (var o = 0; o < s; o += 1) {
                    var n = (o + 1) / (s + 1)
                        , l = 2 === i ? Math.sqrt(Math.pow(t.points[3][0] - t.points[0][0], 2) + Math.pow(t.points[3][1] - t.points[0][1], 2)) : 0
                        , c = t.normalAngle(n);
                    setPoint(e, t.point(n), c, r, a, l / (2 * (s + 1)), l / (2 * (s + 1))),
                        r = -r
                }
                return r
            }
            function linearOffset(e, t, a) {
                var s = Math.atan2(t[0] - e[0], t[1] - e[1]);
                return [polarOffset(e, s, a), polarOffset(t, s, a)]
            }
            function offsetSegment(e, t) {
                var a, s, i, r, o, n, l;
                a = (l = linearOffset(e.points[0], e.points[1], t))[0],
                    s = l[1],
                    i = (l = linearOffset(e.points[1], e.points[2], t))[0],
                    r = l[1],
                    o = (l = linearOffset(e.points[2], e.points[3], t))[0],
                    n = l[1];
                var c = lineIntersection(a, s, i, r);
                null === c && (c = s);
                var d = lineIntersection(o, n, i, r);
                return null === d && (d = o),
                    new PolynomialBezier(a,c,d,n)
            }
            function joinLines(e, t, a, s, i) {
                var r = t.points[3]
                    , o = a.points[0];
                if (3 === s)
                    return r;
                if (pointEqual(r, o))
                    return r;
                if (2 === s) {
                    var n = -t.tangentAngle(1)
                        , l = -a.tangentAngle(0) + Math.PI
                        , c = lineIntersection(r, polarOffset(r, n + Math.PI / 2, 100), o, polarOffset(o, n + Math.PI / 2, 100))
                        , d = c ? pointDistance(c, r) : pointDistance(r, o) / 2
                        , h = polarOffset(r, n, 2 * d * roundCorner);
                    return e.setXYAt(h[0], h[1], "o", e.length() - 1),
                        h = polarOffset(o, l, 2 * d * roundCorner),
                        e.setTripleAt(o[0], o[1], o[0], o[1], h[0], h[1], e.length()),
                        o
                }
                var p = lineIntersection(pointEqual(r, t.points[2]) ? t.points[0] : t.points[2], r, o, pointEqual(o, a.points[1]) ? a.points[3] : a.points[1]);
                return p && pointDistance(p, r) < i ? (e.setTripleAt(p[0], p[1], p[0], p[1], p[0], p[1], e.length()),
                    p) : r
            }
            function getIntersection(e, t) {
                var a = e.intersections(t);
                return a.length && floatEqual(a[0][0], 1) && a.shift(),
                    a.length ? a[0] : null
            }
            function pruneSegmentIntersection(e, t) {
                var a = e.slice()
                    , s = t.slice()
                    , i = getIntersection(e[e.length - 1], t[0]);
                return i && (a[e.length - 1] = e[e.length - 1].split(i[0])[0],
                    s[0] = t[0].split(i[1])[1]),
                    e.length > 1 && t.length > 1 && (i = getIntersection(e[0], t[t.length - 1])) ? [[e[0].split(i[0])[0]], [t[t.length - 1].split(i[1])[1]]] : [a, s]
            }
            function pruneIntersections(e) {
                for (var t, a = 1; a < e.length; a += 1)
                    t = pruneSegmentIntersection(e[a - 1], e[a]),
                        e[a - 1] = t[0],
                        e[a] = t[1];
                return e.length > 1 && (t = pruneSegmentIntersection(e[e.length - 1], e[0]),
                    e[e.length - 1] = t[0],
                    e[0] = t[1]),
                    e
            }
            function offsetSegmentSplit(e, t) {
                var a, s, i, r, o = e.inflectionPoints();
                if (0 === o.length)
                    return [offsetSegment(e, t)];
                if (1 === o.length || floatEqual(o[1], 1))
                    return a = (i = e.split(o[0]))[0],
                        s = i[1],
                        [offsetSegment(a, t), offsetSegment(s, t)];
                a = (i = e.split(o[0]))[0];
                var n = (o[1] - o[0]) / (1 - o[0]);
                return r = (i = i[1].split(n))[0],
                    s = i[1],
                    [offsetSegment(a, t), offsetSegment(r, t), offsetSegment(s, t)]
            }
            function OffsetPathModifier() {}
            function getFontProperties(e) {
                for (var t = e.fStyle ? e.fStyle.split(" ") : [], a = "normal", s = "normal", i = t.length, r = 0; r < i; r += 1)
                    switch (t[r].toLowerCase()) {
                        case "italic":
                            s = "italic";
                            break;
                        case "bold":
                            a = "700";
                            break;
                        case "black":
                            a = "900";
                            break;
                        case "medium":
                            a = "500";
                            break;
                        case "regular":
                        case "normal":
                            a = "400";
                            break;
                        case "light":
                        case "thin":
                            a = "200"
                    }
                return {
                    style: s,
                    weight: e.fWeight || a
                }
            }
            extendPrototype([ShapeModifier], RepeaterModifier),
                RepeaterModifier.prototype.initModifierProperties = function(e, t) {
                    this.getValue = this.processKeys,
                        this.c = PropertyFactory.getProp(e, t.c, 0, null, this),
                        this.o = PropertyFactory.getProp(e, t.o, 0, null, this),
                        this.tr = TransformPropertyFactory.getTransformProperty(e, t.tr, this),
                        this.so = PropertyFactory.getProp(e, t.tr.so, 0, .01, this),
                        this.eo = PropertyFactory.getProp(e, t.tr.eo, 0, .01, this),
                        this.data = t,
                    this.dynamicProperties.length || this.getValue(!0),
                        this._isAnimated = !!this.dynamicProperties.length,
                        this.pMatrix = new Matrix,
                        this.rMatrix = new Matrix,
                        this.sMatrix = new Matrix,
                        this.tMatrix = new Matrix,
                        this.matrix = new Matrix
                }
                ,
                RepeaterModifier.prototype.applyTransforms = function(e, t, a, s, i, r) {
                    var o = r ? -1 : 1
                        , n = s.s.v[0] + (1 - s.s.v[0]) * (1 - i)
                        , l = s.s.v[1] + (1 - s.s.v[1]) * (1 - i);
                    e.translate(s.p.v[0] * o * i, s.p.v[1] * o * i, s.p.v[2]),
                        t.translate(-s.a.v[0], -s.a.v[1], s.a.v[2]),
                        t.rotate(-s.r.v * o * i),
                        t.translate(s.a.v[0], s.a.v[1], s.a.v[2]),
                        a.translate(-s.a.v[0], -s.a.v[1], s.a.v[2]),
                        a.scale(r ? 1 / n : n, r ? 1 / l : l),
                        a.translate(s.a.v[0], s.a.v[1], s.a.v[2])
                }
                ,
                RepeaterModifier.prototype.init = function(e, t, a, s) {
                    for (this.elem = e,
                             this.arr = t,
                             this.pos = a,
                             this.elemsData = s,
                             this._currentCopies = 0,
                             this._elements = [],
                             this._groups = [],
                             this.frameId = -1,
                             this.initDynamicPropertyContainer(e),
                             this.initModifierProperties(e, t[a]); a > 0; )
                        a -= 1,
                            this._elements.unshift(t[a]);
                    this.dynamicProperties.length ? this.k = !0 : this.getValue(!0)
                }
                ,
                RepeaterModifier.prototype.resetElements = function(e) {
                    var t, a = e.length;
                    for (t = 0; t < a; t += 1)
                        e[t]._processed = !1,
                        "gr" === e[t].ty && this.resetElements(e[t].it)
                }
                ,
                RepeaterModifier.prototype.cloneElements = function(e) {
                    var t = JSON.parse(JSON.stringify(e));
                    return this.resetElements(t),
                        t
                }
                ,
                RepeaterModifier.prototype.changeGroupRender = function(e, t) {
                    var a, s = e.length;
                    for (a = 0; a < s; a += 1)
                        e[a]._render = t,
                        "gr" === e[a].ty && this.changeGroupRender(e[a].it, t)
                }
                ,
                RepeaterModifier.prototype.processShapes = function(e) {
                    var t, a, s, i, r, o = !1;
                    if (this._mdf || e) {
                        var n, l = Math.ceil(this.c.v);
                        if (this._groups.length < l) {
                            for (; this._groups.length < l; ) {
                                var c = {
                                    it: this.cloneElements(this._elements),
                                    ty: "gr"
                                };
                                c.it.push({
                                    a: {
                                        a: 0,
                                        ix: 1,
                                        k: [0, 0]
                                    },
                                    nm: "Transform",
                                    o: {
                                        a: 0,
                                        ix: 7,
                                        k: 100
                                    },
                                    p: {
                                        a: 0,
                                        ix: 2,
                                        k: [0, 0]
                                    },
                                    r: {
                                        a: 1,
                                        ix: 6,
                                        k: [{
                                            s: 0,
                                            e: 0,
                                            t: 0
                                        }, {
                                            s: 0,
                                            e: 0,
                                            t: 1
                                        }]
                                    },
                                    s: {
                                        a: 0,
                                        ix: 3,
                                        k: [100, 100]
                                    },
                                    sa: {
                                        a: 0,
                                        ix: 5,
                                        k: 0
                                    },
                                    sk: {
                                        a: 0,
                                        ix: 4,
                                        k: 0
                                    },
                                    ty: "tr"
                                }),
                                    this.arr.splice(0, 0, c),
                                    this._groups.splice(0, 0, c),
                                    this._currentCopies += 1
                            }
                            this.elem.reloadShapes(),
                                o = !0
                        }
                        for (r = 0,
                                 s = 0; s <= this._groups.length - 1; s += 1) {
                            if (n = r < l,
                                this._groups[s]._render = n,
                                this.changeGroupRender(this._groups[s].it, n),
                                !n) {
                                var d = this.elemsData[s].it
                                    , h = d[d.length - 1];
                                0 !== h.transform.op.v ? (h.transform.op._mdf = !0,
                                    h.transform.op.v = 0) : h.transform.op._mdf = !1
                            }
                            r += 1
                        }
                        this._currentCopies = l;
                        var p = this.o.v
                            , u = p % 1
                            , m = p > 0 ? Math.floor(p) : Math.ceil(p)
                            , f = this.pMatrix.props
                            , v = this.rMatrix.props
                            , g = this.sMatrix.props;
                        this.pMatrix.reset(),
                            this.rMatrix.reset(),
                            this.sMatrix.reset(),
                            this.tMatrix.reset(),
                            this.matrix.reset();
                        var y, _, b = 0;
                        if (p > 0) {
                            for (; b < m; )
                                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, !1),
                                    b += 1;
                            u && (this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, u, !1),
                                b += u)
                        } else if (p < 0) {
                            for (; b > m; )
                                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, !0),
                                    b -= 1;
                            u && (this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -u, !0),
                                b -= u)
                        }
                        for (s = 1 === this.data.m ? 0 : this._currentCopies - 1,
                                 i = 1 === this.data.m ? 1 : -1,
                                 r = this._currentCopies; r; ) {
                            if (_ = (a = (t = this.elemsData[s].it)[t.length - 1].transform.mProps.v.props).length,
                                t[t.length - 1].transform.mProps._mdf = !0,
                                t[t.length - 1].transform.op._mdf = !0,
                                t[t.length - 1].transform.op.v = 1 === this._currentCopies ? this.so.v : this.so.v + (this.eo.v - this.so.v) * (s / (this._currentCopies - 1)),
                            0 !== b) {
                                for ((0 !== s && 1 === i || s !== this._currentCopies - 1 && -1 === i) && this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, !1),
                                         this.matrix.transform(v[0], v[1], v[2], v[3], v[4], v[5], v[6], v[7], v[8], v[9], v[10], v[11], v[12], v[13], v[14], v[15]),
                                         this.matrix.transform(g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], g[9], g[10], g[11], g[12], g[13], g[14], g[15]),
                                         this.matrix.transform(f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], f[9], f[10], f[11], f[12], f[13], f[14], f[15]),
                                         y = 0; y < _; y += 1)
                                    a[y] = this.matrix.props[y];
                                this.matrix.reset()
                            } else
                                for (this.matrix.reset(),
                                         y = 0; y < _; y += 1)
                                    a[y] = this.matrix.props[y];
                            b += 1,
                                r -= 1,
                                s += i
                        }
                    } else
                        for (r = this._currentCopies,
                                 s = 0,
                                 i = 1; r; )
                            a = (t = this.elemsData[s].it)[t.length - 1].transform.mProps.v.props,
                                t[t.length - 1].transform.mProps._mdf = !1,
                                t[t.length - 1].transform.op._mdf = !1,
                                r -= 1,
                                s += i;
                    return o
                }
                ,
                RepeaterModifier.prototype.addShape = function() {}
                ,
                extendPrototype([ShapeModifier], RoundCornersModifier),
                RoundCornersModifier.prototype.initModifierProperties = function(e, t) {
                    this.getValue = this.processKeys,
                        this.rd = PropertyFactory.getProp(e, t.r, 0, null, this),
                        this._isAnimated = !!this.rd.effectsSequence.length
                }
                ,
                RoundCornersModifier.prototype.processPath = function(e, t) {
                    var a, s = shapePool.newElement();
                    s.c = e.c;
                    var i, r, o, n, l, c, d, h, p, u, m, f, v = e._length, g = 0;
                    for (a = 0; a < v; a += 1)
                        i = e.v[a],
                            o = e.o[a],
                            r = e.i[a],
                            i[0] === o[0] && i[1] === o[1] && i[0] === r[0] && i[1] === r[1] ? 0 !== a && a !== v - 1 || e.c ? (n = 0 === a ? e.v[v - 1] : e.v[a - 1],
                                c = (l = Math.sqrt(Math.pow(i[0] - n[0], 2) + Math.pow(i[1] - n[1], 2))) ? Math.min(l / 2, t) / l : 0,
                                d = m = i[0] + (n[0] - i[0]) * c,
                                h = f = i[1] - (i[1] - n[1]) * c,
                                p = d - (d - i[0]) * roundCorner,
                                u = h - (h - i[1]) * roundCorner,
                                s.setTripleAt(d, h, p, u, m, f, g),
                                g += 1,
                                n = a === v - 1 ? e.v[0] : e.v[a + 1],
                                c = (l = Math.sqrt(Math.pow(i[0] - n[0], 2) + Math.pow(i[1] - n[1], 2))) ? Math.min(l / 2, t) / l : 0,
                                d = p = i[0] + (n[0] - i[0]) * c,
                                h = u = i[1] + (n[1] - i[1]) * c,
                                m = d - (d - i[0]) * roundCorner,
                                f = h - (h - i[1]) * roundCorner,
                                s.setTripleAt(d, h, p, u, m, f, g),
                                g += 1) : (s.setTripleAt(i[0], i[1], o[0], o[1], r[0], r[1], g),
                                g += 1) : (s.setTripleAt(e.v[a][0], e.v[a][1], e.o[a][0], e.o[a][1], e.i[a][0], e.i[a][1], g),
                                g += 1);
                    return s
                }
                ,
                RoundCornersModifier.prototype.processShapes = function(e) {
                    var t, a, s, i, r, o, n = this.shapes.length, l = this.rd.v;
                    if (0 !== l)
                        for (a = 0; a < n; a += 1) {
                            if (o = (r = this.shapes[a]).localShapeCollection,
                            r.shape._mdf || this._mdf || e)
                                for (o.releaseShapes(),
                                         r.shape._mdf = !0,
                                         t = r.shape.paths.shapes,
                                         i = r.shape.paths._length,
                                         s = 0; s < i; s += 1)
                                    o.addShape(this.processPath(t[s], l));
                            r.shape.paths = r.localShapeCollection
                        }
                    this.dynamicProperties.length || (this._mdf = !1)
                }
                ,
                PolynomialBezier.prototype.point = function(e) {
                    return [((this.a[0] * e + this.b[0]) * e + this.c[0]) * e + this.d[0], ((this.a[1] * e + this.b[1]) * e + this.c[1]) * e + this.d[1]]
                }
                ,
                PolynomialBezier.prototype.derivative = function(e) {
                    return [(3 * e * this.a[0] + 2 * this.b[0]) * e + this.c[0], (3 * e * this.a[1] + 2 * this.b[1]) * e + this.c[1]]
                }
                ,
                PolynomialBezier.prototype.tangentAngle = function(e) {
                    var t = this.derivative(e);
                    return Math.atan2(t[1], t[0])
                }
                ,
                PolynomialBezier.prototype.normalAngle = function(e) {
                    var t = this.derivative(e);
                    return Math.atan2(t[0], t[1])
                }
                ,
                PolynomialBezier.prototype.inflectionPoints = function() {
                    var e = this.a[1] * this.b[0] - this.a[0] * this.b[1];
                    if (floatZero(e))
                        return [];
                    var t = -.5 * (this.a[1] * this.c[0] - this.a[0] * this.c[1]) / e
                        , a = t * t - 1 / 3 * (this.b[1] * this.c[0] - this.b[0] * this.c[1]) / e;
                    if (a < 0)
                        return [];
                    var s = Math.sqrt(a);
                    return floatZero(s) ? s > 0 && s < 1 ? [t] : [] : [t - s, t + s].filter((function(e) {
                            return e > 0 && e < 1
                        }
                    ))
                }
                ,
                PolynomialBezier.prototype.split = function(e) {
                    if (e <= 0)
                        return [singlePoint(this.points[0]), this];
                    if (e >= 1)
                        return [this, singlePoint(this.points[this.points.length - 1])];
                    var t = lerpPoint(this.points[0], this.points[1], e)
                        , a = lerpPoint(this.points[1], this.points[2], e)
                        , s = lerpPoint(this.points[2], this.points[3], e)
                        , i = lerpPoint(t, a, e)
                        , r = lerpPoint(a, s, e)
                        , o = lerpPoint(i, r, e);
                    return [new PolynomialBezier(this.points[0],t,i,o,!0), new PolynomialBezier(o,r,s,this.points[3],!0)]
                }
                ,
                PolynomialBezier.prototype.bounds = function() {
                    return {
                        x: extrema(this, 0),
                        y: extrema(this, 1)
                    }
                }
                ,
                PolynomialBezier.prototype.boundingBox = function() {
                    var e = this.bounds();
                    return {
                        left: e.x.min,
                        right: e.x.max,
                        top: e.y.min,
                        bottom: e.y.max,
                        width: e.x.max - e.x.min,
                        height: e.y.max - e.y.min,
                        cx: (e.x.max + e.x.min) / 2,
                        cy: (e.y.max + e.y.min) / 2
                    }
                }
                ,
                PolynomialBezier.prototype.intersections = function(e, t, a) {
                    void 0 === t && (t = 2),
                    void 0 === a && (a = 7);
                    var s = [];
                    return intersectsImpl(intersectData(this, 0, 1), intersectData(e, 0, 1), 0, t, s, a),
                        s
                }
                ,
                PolynomialBezier.shapeSegment = function(e, t) {
                    var a = (t + 1) % e.length();
                    return new PolynomialBezier(e.v[t],e.o[t],e.i[a],e.v[a],!0)
                }
                ,
                PolynomialBezier.shapeSegmentInverted = function(e, t) {
                    var a = (t + 1) % e.length();
                    return new PolynomialBezier(e.v[a],e.i[a],e.o[t],e.v[t],!0)
                }
                ,
                extendPrototype([ShapeModifier], ZigZagModifier),
                ZigZagModifier.prototype.initModifierProperties = function(e, t) {
                    this.getValue = this.processKeys,
                        this.amplitude = PropertyFactory.getProp(e, t.s, 0, null, this),
                        this.frequency = PropertyFactory.getProp(e, t.r, 0, null, this),
                        this.pointsType = PropertyFactory.getProp(e, t.pt, 0, null, this),
                        this._isAnimated = 0 !== this.amplitude.effectsSequence.length || 0 !== this.frequency.effectsSequence.length || 0 !== this.pointsType.effectsSequence.length
                }
                ,
                ZigZagModifier.prototype.processPath = function(e, t, a, s) {
                    var i = e._length
                        , r = shapePool.newElement();
                    if (r.c = e.c,
                    e.c || (i -= 1),
                    0 === i)
                        return r;
                    var o = -1
                        , n = PolynomialBezier.shapeSegment(e, 0);
                    zigZagCorner(r, e, 0, t, a, s, o);
                    for (var l = 0; l < i; l += 1)
                        o = zigZagSegment(r, n, t, a, s, -o),
                            n = l !== i - 1 || e.c ? PolynomialBezier.shapeSegment(e, (l + 1) % i) : null,
                            zigZagCorner(r, e, l + 1, t, a, s, o);
                    return r
                }
                ,
                ZigZagModifier.prototype.processShapes = function(e) {
                    var t, a, s, i, r, o, n = this.shapes.length, l = this.amplitude.v, c = Math.max(0, Math.round(this.frequency.v)), d = this.pointsType.v;
                    if (0 !== l)
                        for (a = 0; a < n; a += 1) {
                            if (o = (r = this.shapes[a]).localShapeCollection,
                            r.shape._mdf || this._mdf || e)
                                for (o.releaseShapes(),
                                         r.shape._mdf = !0,
                                         t = r.shape.paths.shapes,
                                         i = r.shape.paths._length,
                                         s = 0; s < i; s += 1)
                                    o.addShape(this.processPath(t[s], l, c, d));
                            r.shape.paths = r.localShapeCollection
                        }
                    this.dynamicProperties.length || (this._mdf = !1)
                }
                ,
                extendPrototype([ShapeModifier], OffsetPathModifier),
                OffsetPathModifier.prototype.initModifierProperties = function(e, t) {
                    this.getValue = this.processKeys,
                        this.amount = PropertyFactory.getProp(e, t.a, 0, null, this),
                        this.miterLimit = PropertyFactory.getProp(e, t.ml, 0, null, this),
                        this.lineJoin = t.lj,
                        this._isAnimated = 0 !== this.amount.effectsSequence.length
                }
                ,
                OffsetPathModifier.prototype.processPath = function(e, t, a, s) {
                    var i = shapePool.newElement();
                    i.c = e.c;
                    var r, o, n, l = e.length();
                    e.c || (l -= 1);
                    var c = [];
                    for (r = 0; r < l; r += 1)
                        n = PolynomialBezier.shapeSegment(e, r),
                            c.push(offsetSegmentSplit(n, t));
                    if (!e.c)
                        for (r = l - 1; r >= 0; r -= 1)
                            n = PolynomialBezier.shapeSegmentInverted(e, r),
                                c.push(offsetSegmentSplit(n, t));
                    c = pruneIntersections(c);
                    var d = null
                        , h = null;
                    for (r = 0; r < c.length; r += 1) {
                        var p = c[r];
                        for (h && (d = joinLines(i, h, p[0], a, s)),
                                 h = p[p.length - 1],
                                 o = 0; o < p.length; o += 1)
                            n = p[o],
                                d && pointEqual(n.points[0], d) ? i.setXYAt(n.points[1][0], n.points[1][1], "o", i.length() - 1) : i.setTripleAt(n.points[0][0], n.points[0][1], n.points[1][0], n.points[1][1], n.points[0][0], n.points[0][1], i.length()),
                                i.setTripleAt(n.points[3][0], n.points[3][1], n.points[3][0], n.points[3][1], n.points[2][0], n.points[2][1], i.length()),
                                d = n.points[3]
                    }
                    return c.length && joinLines(i, h, c[0][0], a, s),
                        i
                }
                ,
                OffsetPathModifier.prototype.processShapes = function(e) {
                    var t, a, s, i, r, o, n = this.shapes.length, l = this.amount.v, c = this.miterLimit.v, d = this.lineJoin;
                    if (0 !== l)
                        for (a = 0; a < n; a += 1) {
                            if (o = (r = this.shapes[a]).localShapeCollection,
                            r.shape._mdf || this._mdf || e)
                                for (o.releaseShapes(),
                                         r.shape._mdf = !0,
                                         t = r.shape.paths.shapes,
                                         i = r.shape.paths._length,
                                         s = 0; s < i; s += 1)
                                    o.addShape(this.processPath(t[s], l, d, c));
                            r.shape.paths = r.localShapeCollection
                        }
                    this.dynamicProperties.length || (this._mdf = !1)
                }
            ;
            var FontManager = function() {
                var e = {
                    w: 0,
                    size: 0,
                    shapes: [],
                    data: {
                        shapes: []
                    }
                }
                    , t = [];
                t = t.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);
                var a = 127988
                    , s = ["d83cdffb", "d83cdffc", "d83cdffd", "d83cdffe", "d83cdfff"];
                function i(e, t) {
                    var a = createTag("span");
                    a.setAttribute("aria-hidden", !0),
                        a.style.fontFamily = t;
                    var s = createTag("span");
                    s.innerText = "giItT1WQy@!-/#",
                        a.style.position = "absolute",
                        a.style.left = "-10000px",
                        a.style.top = "-10000px",
                        a.style.fontSize = "300px",
                        a.style.fontVariant = "normal",
                        a.style.fontStyle = "normal",
                        a.style.fontWeight = "normal",
                        a.style.letterSpacing = "0",
                        a.appendChild(s),
                        document.body.appendChild(a);
                    var i = s.offsetWidth;
                    return s.style.fontFamily = function(e) {
                        var t, a = e.split(","), s = a.length, i = [];
                        for (t = 0; t < s; t += 1)
                            "sans-serif" !== a[t] && "monospace" !== a[t] && i.push(a[t]);
                        return i.join(",")
                    }(e) + ", " + t,
                        {
                            node: s,
                            w: i,
                            parent: a
                        }
                }
                function r(e, t) {
                    var a, s = document.body && t ? "svg" : "canvas", i = getFontProperties(e);
                    if ("svg" === s) {
                        var r = createNS("text");
                        r.style.fontSize = "100px",
                            r.setAttribute("font-family", e.fFamily),
                            r.setAttribute("font-style", i.style),
                            r.setAttribute("font-weight", i.weight),
                            r.textContent = "1",
                            e.fClass ? (r.style.fontFamily = "inherit",
                                r.setAttribute("class", e.fClass)) : r.style.fontFamily = e.fFamily,
                            t.appendChild(r),
                            a = r
                    } else {
                        var o = new OffscreenCanvas(500,500).getContext("2d");
                        o.font = i.style + " " + i.weight + " 100px " + e.fFamily,
                            a = o
                    }
                    return {
                        measureText: function(e) {
                            return "svg" === s ? (a.textContent = e,
                                a.getComputedTextLength()) : a.measureText(e).width
                        }
                    }
                }
                function o(e) {
                    var t = 0
                        , a = e.charCodeAt(0);
                    if (a >= 55296 && a <= 56319) {
                        var s = e.charCodeAt(1);
                        s >= 56320 && s <= 57343 && (t = 1024 * (a - 55296) + s - 56320 + 65536)
                    }
                    return t
                }
                function n(e) {
                    var t = o(e);
                    return t >= 127462 && t <= 127487
                }
                var l = function() {
                    this.fonts = [],
                        this.chars = null,
                        this.typekitLoaded = 0,
                        this.isLoaded = !1,
                        this._warned = !1,
                        this.initTime = Date.now(),
                        this.setIsLoadedBinded = this.setIsLoaded.bind(this),
                        this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this)
                };
                return l.isModifier = function(e, t) {
                    var a = e.toString(16) + t.toString(16);
                    return -1 !== s.indexOf(a)
                }
                    ,
                    l.isZeroWidthJoiner = function(e) {
                        return 8205 === e
                    }
                    ,
                    l.isFlagEmoji = function(e) {
                        return n(e.substr(0, 2)) && n(e.substr(2, 2))
                    }
                    ,
                    l.isRegionalCode = n,
                    l.isCombinedCharacter = function(e) {
                        return -1 !== t.indexOf(e)
                    }
                    ,
                    l.isRegionalFlag = function(e, t) {
                        var s = o(e.substr(t, 2));
                        if (s !== a)
                            return !1;
                        var i = 0;
                        for (t += 2; i < 5; ) {
                            if ((s = o(e.substr(t, 2))) < 917601 || s > 917626)
                                return !1;
                            i += 1,
                                t += 2
                        }
                        return 917631 === o(e.substr(t, 2))
                    }
                    ,
                    l.isVariationSelector = function(e) {
                        return 65039 === e
                    }
                    ,
                    l.BLACK_FLAG_CODE_POINT = a,
                    l.prototype = {
                        addChars: function(e) {
                            if (e) {
                                var t;
                                this.chars || (this.chars = []);
                                var a, s, i = e.length, r = this.chars.length;
                                for (t = 0; t < i; t += 1) {
                                    for (a = 0,
                                             s = !1; a < r; )
                                        this.chars[a].style === e[t].style && this.chars[a].fFamily === e[t].fFamily && this.chars[a].ch === e[t].ch && (s = !0),
                                            a += 1;
                                    s || (this.chars.push(e[t]),
                                        r += 1)
                                }
                            }
                        },
                        addFonts: function(e, t) {
                            if (e) {
                                if (this.chars)
                                    return this.isLoaded = !0,
                                        void (this.fonts = e.list);
                                if (!document.body)
                                    return this.isLoaded = !0,
                                        e.list.forEach((function(e) {
                                                e.helper = r(e),
                                                    e.cache = {}
                                            }
                                        )),
                                        void (this.fonts = e.list);
                                var a, s = e.list, o = s.length, n = o;
                                for (a = 0; a < o; a += 1) {
                                    var l, c, d = !0;
                                    if (s[a].loaded = !1,
                                        s[a].monoCase = i(s[a].fFamily, "monospace"),
                                        s[a].sansCase = i(s[a].fFamily, "sans-serif"),
                                        s[a].fPath) {
                                        if ("p" === s[a].fOrigin || 3 === s[a].origin) {
                                            if ((l = document.querySelectorAll('style[f-forigin="p"][f-family="' + s[a].fFamily + '"], style[f-origin="3"][f-family="' + s[a].fFamily + '"]')).length > 0 && (d = !1),
                                                d) {
                                                var h = createTag("style");
                                                h.setAttribute("f-forigin", s[a].fOrigin),
                                                    h.setAttribute("f-origin", s[a].origin),
                                                    h.setAttribute("f-family", s[a].fFamily),
                                                    h.type = "text/css",
                                                    h.innerText = "@font-face {font-family: " + s[a].fFamily + "; font-style: normal; src: url('" + s[a].fPath + "');}",
                                                    t.appendChild(h)
                                            }
                                        } else if ("g" === s[a].fOrigin || 1 === s[a].origin) {
                                            for (l = document.querySelectorAll('link[f-forigin="g"], link[f-origin="1"]'),
                                                     c = 0; c < l.length; c += 1)
                                                -1 !== l[c].href.indexOf(s[a].fPath) && (d = !1);
                                            if (d) {
                                                var p = createTag("link");
                                                p.setAttribute("f-forigin", s[a].fOrigin),
                                                    p.setAttribute("f-origin", s[a].origin),
                                                    p.type = "text/css",
                                                    p.rel = "stylesheet",
                                                    p.href = s[a].fPath,
                                                    document.body.appendChild(p)
                                            }
                                        } else if ("t" === s[a].fOrigin || 2 === s[a].origin) {
                                            for (l = document.querySelectorAll('script[f-forigin="t"], script[f-origin="2"]'),
                                                     c = 0; c < l.length; c += 1)
                                                s[a].fPath === l[c].src && (d = !1);
                                            if (d) {
                                                var u = createTag("link");
                                                u.setAttribute("f-forigin", s[a].fOrigin),
                                                    u.setAttribute("f-origin", s[a].origin),
                                                    u.setAttribute("rel", "stylesheet"),
                                                    u.setAttribute("href", s[a].fPath),
                                                    t.appendChild(u)
                                            }
                                        }
                                    } else
                                        s[a].loaded = !0,
                                            n -= 1;
                                    s[a].helper = r(s[a], t),
                                        s[a].cache = {},
                                        this.fonts.push(s[a])
                                }
                                0 === n ? this.isLoaded = !0 : setTimeout(this.checkLoadedFonts.bind(this), 100)
                            } else
                                this.isLoaded = !0
                        },
                        getCharData: function(t, a, s) {
                            for (var i = 0, r = this.chars.length; i < r; ) {
                                if (this.chars[i].ch === t && this.chars[i].style === a && this.chars[i].fFamily === s)
                                    return this.chars[i];
                                i += 1
                            }
                            return ("string" == typeof t && 13 !== t.charCodeAt(0) || !t) && console && console.warn && !this._warned && (this._warned = !0),
                                e
                        },
                        getFontByName: function(e) {
                            for (var t = 0, a = this.fonts.length; t < a; ) {
                                if (this.fonts[t].fName === e)
                                    return this.fonts[t];
                                t += 1
                            }
                            return this.fonts[0]
                        },
                        measureText: function(e, t, a) {
                            var s = this.getFontByName(t)
                                , i = e;
                            if (!s.cache[i]) {
                                var r = s.helper;
                                if (" " === e) {
                                    var o = r.measureText("|" + e + "|")
                                        , n = r.measureText("||");
                                    s.cache[i] = (o - n) / 100
                                } else
                                    s.cache[i] = r.measureText(e) / 100
                            }
                            return s.cache[i] * a
                        },
                        checkLoadedFonts: function() {
                            var e, t, a, s = this.fonts.length, i = s;
                            for (e = 0; e < s; e += 1)
                                this.fonts[e].loaded ? i -= 1 : "n" === this.fonts[e].fOrigin || 0 === this.fonts[e].origin ? this.fonts[e].loaded = !0 : (t = this.fonts[e].monoCase.node,
                                    a = this.fonts[e].monoCase.w,
                                    t.offsetWidth !== a ? (i -= 1,
                                        this.fonts[e].loaded = !0) : (t = this.fonts[e].sansCase.node,
                                        a = this.fonts[e].sansCase.w,
                                    t.offsetWidth !== a && (i -= 1,
                                        this.fonts[e].loaded = !0)),
                                this.fonts[e].loaded && (this.fonts[e].sansCase.parent.parentNode.removeChild(this.fonts[e].sansCase.parent),
                                    this.fonts[e].monoCase.parent.parentNode.removeChild(this.fonts[e].monoCase.parent)));
                            0 !== i && Date.now() - this.initTime < 5e3 ? setTimeout(this.checkLoadedFontsBinded, 20) : setTimeout(this.setIsLoadedBinded, 10)
                        },
                        setIsLoaded: function() {
                            this.isLoaded = !0
                        }
                    },
                    l
            }();
            function SlotManager(e) {
                this.animationData = e
            }
            function slotFactory(e) {
                return new SlotManager(e)
            }
            function RenderableElement() {}
            SlotManager.prototype.getProp = function(e) {
                return this.animationData.slots && this.animationData.slots[e.sid] ? Object.assign(e, this.animationData.slots[e.sid].p) : e
            }
                ,
                RenderableElement.prototype = {
                    initRenderable: function() {
                        this.isInRange = !1,
                            this.hidden = !1,
                            this.isTransparent = !1,
                            this.renderableComponents = []
                    },
                    addRenderableComponent: function(e) {
                        -1 === this.renderableComponents.indexOf(e) && this.renderableComponents.push(e)
                    },
                    removeRenderableComponent: function(e) {
                        -1 !== this.renderableComponents.indexOf(e) && this.renderableComponents.splice(this.renderableComponents.indexOf(e), 1)
                    },
                    prepareRenderableFrame: function(e) {
                        this.checkLayerLimits(e)
                    },
                    checkTransparency: function() {
                        this.finalTransform.mProp.o.v <= 0 ? !this.isTransparent && this.globalData.renderConfig.hideOnTransparent && (this.isTransparent = !0,
                            this.hide()) : this.isTransparent && (this.isTransparent = !1,
                            this.show())
                    },
                    checkLayerLimits: function(e) {
                        this.data.ip - this.data.st <= e && this.data.op - this.data.st > e ? !0 !== this.isInRange && (this.globalData._mdf = !0,
                            this._mdf = !0,
                            this.isInRange = !0,
                            this.show()) : !1 !== this.isInRange && (this.globalData._mdf = !0,
                            this.isInRange = !1,
                            this.hide())
                    },
                    renderRenderable: function() {
                        var e, t = this.renderableComponents.length;
                        for (e = 0; e < t; e += 1)
                            this.renderableComponents[e].renderFrame(this._isFirstFrame)
                    },
                    sourceRectAtTime: function() {
                        return {
                            top: 0,
                            left: 0,
                            width: 100,
                            height: 100
                        }
                    },
                    getLayerSize: function() {
                        return 5 === this.data.ty ? {
                            w: this.data.textData.width,
                            h: this.data.textData.height
                        } : {
                            w: this.data.width,
                            h: this.data.height
                        }
                    }
                };
            var getBlendMode = (blendModeEnums = {
                    0: "source-over",
                    1: "multiply",
                    2: "screen",
                    3: "overlay",
                    4: "darken",
                    5: "lighten",
                    6: "color-dodge",
                    7: "color-burn",
                    8: "hard-light",
                    9: "soft-light",
                    10: "difference",
                    11: "exclusion",
                    12: "hue",
                    13: "saturation",
                    14: "color",
                    15: "luminosity"
                },
                    function(e) {
                        return blendModeEnums[e] || ""
                    }
            ), blendModeEnums;
            function SliderEffect(e, t, a) {
                this.p = PropertyFactory.getProp(t, e.v, 0, 0, a)
            }
            function AngleEffect(e, t, a) {
                this.p = PropertyFactory.getProp(t, e.v, 0, 0, a)
            }
            function ColorEffect(e, t, a) {
                this.p = PropertyFactory.getProp(t, e.v, 1, 0, a)
            }
            function PointEffect(e, t, a) {
                this.p = PropertyFactory.getProp(t, e.v, 1, 0, a)
            }
            function LayerIndexEffect(e, t, a) {
                this.p = PropertyFactory.getProp(t, e.v, 0, 0, a)
            }
            function MaskIndexEffect(e, t, a) {
                this.p = PropertyFactory.getProp(t, e.v, 0, 0, a)
            }
            function CheckboxEffect(e, t, a) {
                this.p = PropertyFactory.getProp(t, e.v, 0, 0, a)
            }
            function NoValueEffect() {
                this.p = {}
            }
            function EffectsManager(e, t) {
                var a, s = e.ef || [];
                this.effectElements = [];
                var i, r = s.length;
                for (a = 0; a < r; a += 1)
                    i = new GroupEffect(s[a],t),
                        this.effectElements.push(i)
            }
            function GroupEffect(e, t) {
                this.init(e, t)
            }
            function BaseElement() {}
            function FrameElement() {}
            function FootageElement(e, t, a) {
                this.initFrame(),
                    this.initRenderable(),
                    this.assetData = t.getAssetData(e.refId),
                    this.footageData = t.imageLoader.getAsset(this.assetData),
                    this.initBaseData(e, t, a)
            }
            function AudioElement(e, t, a) {
                this.initFrame(),
                    this.initRenderable(),
                    this.assetData = t.getAssetData(e.refId),
                    this.initBaseData(e, t, a),
                    this._isPlaying = !1,
                    this._canPlay = !1;
                var s = this.globalData.getAssetsPath(this.assetData);
                this.audio = this.globalData.audioController.createAudio(s),
                    this._currentTime = 0,
                    this.globalData.audioController.addAudio(this),
                    this._volumeMultiplier = 1,
                    this._volume = 1,
                    this._previousVolume = null,
                    this.tm = e.tm ? PropertyFactory.getProp(this, e.tm, 0, t.frameRate, this) : {
                        _placeholder: !0
                    },
                    this.lv = PropertyFactory.getProp(this, e.au && e.au.lv ? e.au.lv : {
                        k: [100]
                    }, 1, .01, this)
            }
            function BaseRenderer() {}
            extendPrototype([DynamicPropertyContainer], GroupEffect),
                GroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties,
                GroupEffect.prototype.init = function(e, t) {
                    var a;
                    this.data = e,
                        this.effectElements = [],
                        this.initDynamicPropertyContainer(t);
                    var s, i = this.data.ef.length, r = this.data.ef;
                    for (a = 0; a < i; a += 1) {
                        switch (s = null,
                            r[a].ty) {
                            case 0:
                                s = new SliderEffect(r[a],t,this);
                                break;
                            case 1:
                                s = new AngleEffect(r[a],t,this);
                                break;
                            case 2:
                                s = new ColorEffect(r[a],t,this);
                                break;
                            case 3:
                                s = new PointEffect(r[a],t,this);
                                break;
                            case 4:
                            case 7:
                                s = new CheckboxEffect(r[a],t,this);
                                break;
                            case 10:
                                s = new LayerIndexEffect(r[a],t,this);
                                break;
                            case 11:
                                s = new MaskIndexEffect(r[a],t,this);
                                break;
                            case 5:
                                s = new EffectsManager(r[a],t);
                                break;
                            default:
                                s = new NoValueEffect(r[a])
                        }
                        s && this.effectElements.push(s)
                    }
                }
                ,
                BaseElement.prototype = {
                    checkMasks: function() {
                        if (!this.data.hasMask)
                            return !1;
                        for (var e = 0, t = this.data.masksProperties.length; e < t; ) {
                            if ("n" !== this.data.masksProperties[e].mode && !1 !== this.data.masksProperties[e].cl)
                                return !0;
                            e += 1
                        }
                        return !1
                    },
                    initExpressions: function() {
                        var e = getExpressionInterfaces();
                        if (e) {
                            var t = e("layer")
                                , a = e("effects")
                                , s = e("shape")
                                , i = e("text")
                                , r = e("comp");
                            this.layerInterface = t(this),
                            this.data.hasMask && this.maskManager && this.layerInterface.registerMaskInterface(this.maskManager);
                            var o = a.createEffectsInterface(this, this.layerInterface);
                            this.layerInterface.registerEffectsInterface(o),
                                0 === this.data.ty || this.data.xt ? this.compInterface = r(this) : 4 === this.data.ty ? (this.layerInterface.shapeInterface = s(this.shapesData, this.itemsData, this.layerInterface),
                                    this.layerInterface.content = this.layerInterface.shapeInterface) : 5 === this.data.ty && (this.layerInterface.textInterface = i(this),
                                    this.layerInterface.text = this.layerInterface.textInterface)
                        }
                    },
                    setBlendMode: function() {
                        var e = getBlendMode(this.data.bm);
                        (this.baseElement || this.layerElement).style["mix-blend-mode"] = e
                    },
                    initBaseData: function(e, t, a) {
                        this.globalData = t,
                            this.comp = a,
                            this.data = e,
                            this.layerId = createElementID(),
                        this.data.sr || (this.data.sr = 1),
                            this.effectsManager = new EffectsManager(this.data,this,this.dynamicProperties)
                    },
                    getType: function() {
                        return this.type
                    },
                    sourceRectAtTime: function() {}
                },
                FrameElement.prototype = {
                    initFrame: function() {
                        this._isFirstFrame = !1,
                            this.dynamicProperties = [],
                            this._mdf = !1
                    },
                    prepareProperties: function(e, t) {
                        var a, s = this.dynamicProperties.length;
                        for (a = 0; a < s; a += 1)
                            (t || this._isParent && "transform" === this.dynamicProperties[a].propType) && (this.dynamicProperties[a].getValue(),
                            this.dynamicProperties[a]._mdf && (this.globalData._mdf = !0,
                                this._mdf = !0))
                    },
                    addDynamicProperty: function(e) {
                        -1 === this.dynamicProperties.indexOf(e) && this.dynamicProperties.push(e)
                    }
                },
                FootageElement.prototype.prepareFrame = function() {}
                ,
                extendPrototype([RenderableElement, BaseElement, FrameElement], FootageElement),
                FootageElement.prototype.getBaseElement = function() {
                    return null
                }
                ,
                FootageElement.prototype.renderFrame = function() {}
                ,
                FootageElement.prototype.destroy = function() {}
                ,
                FootageElement.prototype.initExpressions = function() {
                    var e = getExpressionInterfaces();
                    if (e) {
                        var t = e("footage");
                        this.layerInterface = t(this)
                    }
                }
                ,
                FootageElement.prototype.getFootageData = function() {
                    return this.footageData
                }
                ,
                AudioElement.prototype.prepareFrame = function(e) {
                    if (this.prepareRenderableFrame(e, !0),
                        this.prepareProperties(e, !0),
                        this.tm._placeholder)
                        this._currentTime = e / this.data.sr;
                    else {
                        var t = this.tm.v;
                        this._currentTime = t
                    }
                    this._volume = this.lv.v[0];
                    var a = this._volume * this._volumeMultiplier;
                    this._previousVolume !== a && (this._previousVolume = a,
                        this.audio.volume(a))
                }
                ,
                extendPrototype([RenderableElement, BaseElement, FrameElement], AudioElement),
                AudioElement.prototype.renderFrame = function() {
                    this.isInRange && this._canPlay && (this._isPlaying ? (!this.audio.playing() || Math.abs(this._currentTime / this.globalData.frameRate - this.audio.seek()) > .1) && this.audio.seek(this._currentTime / this.globalData.frameRate) : (this.audio.play(),
                        this.audio.seek(this._currentTime / this.globalData.frameRate),
                        this._isPlaying = !0))
                }
                ,
                AudioElement.prototype.show = function() {}
                ,
                AudioElement.prototype.hide = function() {
                    this.audio.pause(),
                        this._isPlaying = !1
                }
                ,
                AudioElement.prototype.pause = function() {
                    this.audio.pause(),
                        this._isPlaying = !1,
                        this._canPlay = !1
                }
                ,
                AudioElement.prototype.resume = function() {
                    this._canPlay = !0
                }
                ,
                AudioElement.prototype.setRate = function(e) {
                    this.audio.rate(e)
                }
                ,
                AudioElement.prototype.volume = function(e) {
                    this._volumeMultiplier = e,
                        this._previousVolume = e * this._volume,
                        this.audio.volume(this._previousVolume)
                }
                ,
                AudioElement.prototype.getBaseElement = function() {
                    return null
                }
                ,
                AudioElement.prototype.destroy = function() {}
                ,
                AudioElement.prototype.sourceRectAtTime = function() {}
                ,
                AudioElement.prototype.initExpressions = function() {}
                ,
                BaseRenderer.prototype.checkLayers = function(e) {
                    var t, a, s = this.layers.length;
                    for (this.completeLayers = !0,
                             t = s - 1; t >= 0; t -= 1)
                        this.elements[t] || (a = this.layers[t]).ip - a.st <= e - this.layers[t].st && a.op - a.st > e - this.layers[t].st && this.buildItem(t),
                            this.completeLayers = !!this.elements[t] && this.completeLayers;
                    this.checkPendingElements()
                }
                ,
                BaseRenderer.prototype.createItem = function(e) {
                    switch (e.ty) {
                        case 2:
                            return this.createImage(e);
                        case 0:
                            return this.createComp(e);
                        case 1:
                            return this.createSolid(e);
                        case 3:
                        default:
                            return this.createNull(e);
                        case 4:
                            return this.createShape(e);
                        case 5:
                            return this.createText(e);
                        case 6:
                            return this.createAudio(e);
                        case 13:
                            return this.createCamera(e);
                        case 15:
                            return this.createFootage(e)
                    }
                }
                ,
                BaseRenderer.prototype.createCamera = function() {
                    throw new Error("You're using a 3d camera. Try the html renderer.")
                }
                ,
                BaseRenderer.prototype.createAudio = function(e) {
                    return new AudioElement(e,this.globalData,this)
                }
                ,
                BaseRenderer.prototype.createFootage = function(e) {
                    return new FootageElement(e,this.globalData,this)
                }
                ,
                BaseRenderer.prototype.buildAllItems = function() {
                    var e, t = this.layers.length;
                    for (e = 0; e < t; e += 1)
                        this.buildItem(e);
                    this.checkPendingElements()
                }
                ,
                BaseRenderer.prototype.includeLayers = function(e) {
                    var t;
                    this.completeLayers = !1;
                    var a, s = e.length, i = this.layers.length;
                    for (t = 0; t < s; t += 1)
                        for (a = 0; a < i; ) {
                            if (this.layers[a].id === e[t].id) {
                                this.layers[a] = e[t];
                                break
                            }
                            a += 1
                        }
                }
                ,
                BaseRenderer.prototype.setProjectInterface = function(e) {
                    this.globalData.projectInterface = e
                }
                ,
                BaseRenderer.prototype.initItems = function() {
                    this.globalData.progressiveLoad || this.buildAllItems()
                }
                ,
                BaseRenderer.prototype.buildElementParenting = function(e, t, a) {
                    for (var s = this.elements, i = this.layers, r = 0, o = i.length; r < o; )
                        i[r].ind == t && (s[r] && !0 !== s[r] ? (a.push(s[r]),
                            s[r].setAsParent(),
                            void 0 !== i[r].parent ? this.buildElementParenting(e, i[r].parent, a) : e.setHierarchy(a)) : (this.buildItem(r),
                            this.addPendingElement(e))),
                            r += 1
                }
                ,
                BaseRenderer.prototype.addPendingElement = function(e) {
                    this.pendingElements.push(e)
                }
                ,
                BaseRenderer.prototype.searchExtraCompositions = function(e) {
                    var t, a = e.length;
                    for (t = 0; t < a; t += 1)
                        if (e[t].xt) {
                            var s = this.createComp(e[t]);
                            s.initExpressions(),
                                this.globalData.projectInterface.registerComposition(s)
                        }
                }
                ,
                BaseRenderer.prototype.getElementById = function(e) {
                    var t, a = this.elements.length;
                    for (t = 0; t < a; t += 1)
                        if (this.elements[t].data.ind === e)
                            return this.elements[t];
                    return null
                }
                ,
                BaseRenderer.prototype.getElementByPath = function(e) {
                    var t, a = e.shift();
                    if ("number" == typeof a)
                        t = this.elements[a];
                    else {
                        var s, i = this.elements.length;
                        for (s = 0; s < i; s += 1)
                            if (this.elements[s].data.nm === a) {
                                t = this.elements[s];
                                break
                            }
                    }
                    return 0 === e.length ? t : t.getElementByPath(e)
                }
                ,
                BaseRenderer.prototype.setupGlobalData = function(e, t) {
                    this.globalData.fontManager = new FontManager,
                        this.globalData.slotManager = slotFactory(e),
                        this.globalData.fontManager.addChars(e.chars),
                        this.globalData.fontManager.addFonts(e.fonts, t),
                        this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem),
                        this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem),
                        this.globalData.imageLoader = this.animationItem.imagePreloader,
                        this.globalData.audioController = this.animationItem.audioController,
                        this.globalData.frameId = 0,
                        this.globalData.frameRate = e.fr,
                        this.globalData.nm = e.nm,
                        this.globalData.compSize = {
                            w: e.w,
                            h: e.h
                        }
                }
            ;
            var effectTypes = {
                TRANSFORM_EFFECT: "transformEFfect"
            };
            function TransformElement() {}
            function MaskElement(e, t, a) {
                this.data = e,
                    this.element = t,
                    this.globalData = a,
                    this.storedData = [],
                    this.masksProperties = this.data.masksProperties || [],
                    this.maskElement = null;
                var s, i, r = this.globalData.defs, o = this.masksProperties ? this.masksProperties.length : 0;
                this.viewData = createSizedArray(o),
                    this.solidPath = "";
                var n, l, c, d, h, p, u = this.masksProperties, m = 0, f = [], v = createElementID(), g = "clipPath", y = "clip-path";
                for (s = 0; s < o; s += 1)
                    if (("a" !== u[s].mode && "n" !== u[s].mode || u[s].inv || 100 !== u[s].o.k || u[s].o.x) && (g = "mask",
                        y = "mask"),
                        "s" !== u[s].mode && "i" !== u[s].mode || 0 !== m ? c = null : ((c = createNS("rect")).setAttribute("fill", "#ffffff"),
                            c.setAttribute("width", this.element.comp.data.w || 0),
                            c.setAttribute("height", this.element.comp.data.h || 0),
                            f.push(c)),
                        i = createNS("path"),
                    "n" === u[s].mode)
                        this.viewData[s] = {
                            op: PropertyFactory.getProp(this.element, u[s].o, 0, .01, this.element),
                            prop: ShapePropertyFactory.getShapeProp(this.element, u[s], 3),
                            elem: i,
                            lastPath: ""
                        },
                            r.appendChild(i);
                    else {
                        var _;
                        if (m += 1,
                            i.setAttribute("fill", "s" === u[s].mode ? "#000000" : "#ffffff"),
                            i.setAttribute("clip-rule", "nonzero"),
                            0 !== u[s].x.k ? (g = "mask",
                                y = "mask",
                                p = PropertyFactory.getProp(this.element, u[s].x, 0, null, this.element),
                                _ = createElementID(),
                                (d = createNS("filter")).setAttribute("id", _),
                                (h = createNS("feMorphology")).setAttribute("operator", "erode"),
                                h.setAttribute("in", "SourceGraphic"),
                                h.setAttribute("radius", "0"),
                                d.appendChild(h),
                                r.appendChild(d),
                                i.setAttribute("stroke", "s" === u[s].mode ? "#000000" : "#ffffff")) : (h = null,
                                p = null),
                            this.storedData[s] = {
                                elem: i,
                                x: p,
                                expan: h,
                                lastPath: "",
                                lastOperator: "",
                                filterId: _,
                                lastRadius: 0
                            },
                        "i" === u[s].mode) {
                            l = f.length;
                            var b = createNS("g");
                            for (n = 0; n < l; n += 1)
                                b.appendChild(f[n]);
                            var k = createNS("mask");
                            k.setAttribute("mask-type", "alpha"),
                                k.setAttribute("id", v + "_" + m),
                                k.appendChild(i),
                                r.appendChild(k),
                                b.setAttribute("mask", "url(" + getLocationHref() + "#" + v + "_" + m + ")"),
                                f.length = 0,
                                f.push(b)
                        } else
                            f.push(i);
                        u[s].inv && !this.solidPath && (this.solidPath = this.createLayerSolidPath()),
                            this.viewData[s] = {
                                elem: i,
                                lastPath: "",
                                op: PropertyFactory.getProp(this.element, u[s].o, 0, .01, this.element),
                                prop: ShapePropertyFactory.getShapeProp(this.element, u[s], 3),
                                invRect: c
                            },
                        this.viewData[s].prop.k || this.drawPath(u[s], this.viewData[s].prop.v, this.viewData[s])
                    }
                for (this.maskElement = createNS(g),
                         o = f.length,
                         s = 0; s < o; s += 1)
                    this.maskElement.appendChild(f[s]);
                m > 0 && (this.maskElement.setAttribute("id", v),
                    this.element.maskedElement.setAttribute(y, "url(" + getLocationHref() + "#" + v + ")"),
                    r.appendChild(this.maskElement)),
                this.viewData.length && this.element.addRenderableComponent(this)
            }
            TransformElement.prototype = {
                initTransform: function() {
                    var e = new Matrix;
                    this.finalTransform = {
                        mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {
                            o: 0
                        },
                        _matMdf: !1,
                        _localMatMdf: !1,
                        _opMdf: !1,
                        mat: e,
                        localMat: e,
                        localOpacity: 1
                    },
                    this.data.ao && (this.finalTransform.mProp.autoOriented = !0),
                        this.data.ty
                },
                renderTransform: function() {
                    if (this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame,
                        this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame,
                        this.hierarchy) {
                        var e, t = this.finalTransform.mat, a = 0, s = this.hierarchy.length;
                        if (!this.finalTransform._matMdf)
                            for (; a < s; ) {
                                if (this.hierarchy[a].finalTransform.mProp._mdf) {
                                    this.finalTransform._matMdf = !0;
                                    break
                                }
                                a += 1
                            }
                        if (this.finalTransform._matMdf)
                            for (e = this.finalTransform.mProp.v.props,
                                     t.cloneFromProps(e),
                                     a = 0; a < s; a += 1)
                                t.multiply(this.hierarchy[a].finalTransform.mProp.v)
                    }
                    this.finalTransform._matMdf && (this.finalTransform._localMatMdf = this.finalTransform._matMdf),
                    this.finalTransform._opMdf && (this.finalTransform.localOpacity = this.finalTransform.mProp.o.v)
                },
                renderLocalTransform: function() {
                    if (this.localTransforms) {
                        var e = 0
                            , t = this.localTransforms.length;
                        if (this.finalTransform._localMatMdf = this.finalTransform._matMdf,
                        !this.finalTransform._localMatMdf || !this.finalTransform._opMdf)
                            for (; e < t; )
                                this.localTransforms[e]._mdf && (this.finalTransform._localMatMdf = !0),
                                this.localTransforms[e]._opMdf && !this.finalTransform._opMdf && (this.finalTransform.localOpacity = this.finalTransform.mProp.o.v,
                                    this.finalTransform._opMdf = !0),
                                    e += 1;
                        if (this.finalTransform._localMatMdf) {
                            var a = this.finalTransform.localMat;
                            for (this.localTransforms[0].matrix.clone(a),
                                     e = 1; e < t; e += 1) {
                                var s = this.localTransforms[e].matrix;
                                a.multiply(s)
                            }
                            a.multiply(this.finalTransform.mat)
                        }
                        if (this.finalTransform._opMdf) {
                            var i = this.finalTransform.localOpacity;
                            for (e = 0; e < t; e += 1)
                                i *= .01 * this.localTransforms[e].opacity;
                            this.finalTransform.localOpacity = i
                        }
                    }
                },
                searchEffectTransforms: function() {
                    if (this.renderableEffectsManager) {
                        var e = this.renderableEffectsManager.getEffects(effectTypes.TRANSFORM_EFFECT);
                        if (e.length) {
                            this.localTransforms = [],
                                this.finalTransform.localMat = new Matrix;
                            var t = 0
                                , a = e.length;
                            for (t = 0; t < a; t += 1)
                                this.localTransforms.push(e[t])
                        }
                    }
                },
                globalToLocal: function(e) {
                    var t = [];
                    t.push(this.finalTransform);
                    for (var a, s = !0, i = this.comp; s; )
                        i.finalTransform ? (i.data.hasMask && t.splice(0, 0, i.finalTransform),
                            i = i.comp) : s = !1;
                    var r, o = t.length;
                    for (a = 0; a < o; a += 1)
                        r = t[a].mat.applyToPointArray(0, 0, 0),
                            e = [e[0] - r[0], e[1] - r[1], 0];
                    return e
                },
                mHelper: new Matrix
            },
                MaskElement.prototype.getMaskProperty = function(e) {
                    return this.viewData[e].prop
                }
                ,
                MaskElement.prototype.renderFrame = function(e) {
                    var t, a = this.element.finalTransform.mat, s = this.masksProperties.length;
                    for (t = 0; t < s; t += 1)
                        if ((this.viewData[t].prop._mdf || e) && this.drawPath(this.masksProperties[t], this.viewData[t].prop.v, this.viewData[t]),
                        (this.viewData[t].op._mdf || e) && this.viewData[t].elem.setAttribute("fill-opacity", this.viewData[t].op.v),
                        "n" !== this.masksProperties[t].mode && (this.viewData[t].invRect && (this.element.finalTransform.mProp._mdf || e) && this.viewData[t].invRect.setAttribute("transform", a.getInverseMatrix().to2dCSS()),
                        this.storedData[t].x && (this.storedData[t].x._mdf || e))) {
                            var i = this.storedData[t].expan;
                            this.storedData[t].x.v < 0 ? ("erode" !== this.storedData[t].lastOperator && (this.storedData[t].lastOperator = "erode",
                                this.storedData[t].elem.setAttribute("filter", "url(" + getLocationHref() + "#" + this.storedData[t].filterId + ")")),
                                i.setAttribute("radius", -this.storedData[t].x.v)) : ("dilate" !== this.storedData[t].lastOperator && (this.storedData[t].lastOperator = "dilate",
                                this.storedData[t].elem.setAttribute("filter", null)),
                                this.storedData[t].elem.setAttribute("stroke-width", 2 * this.storedData[t].x.v))
                        }
                }
                ,
                MaskElement.prototype.getMaskelement = function() {
                    return this.maskElement
                }
                ,
                MaskElement.prototype.createLayerSolidPath = function() {
                    var e = "M0,0 ";
                    return e += " h" + this.globalData.compSize.w,
                        e += " v" + this.globalData.compSize.h,
                        e += " h-" + this.globalData.compSize.w,
                        e += " v-" + this.globalData.compSize.h + " "
                }
                ,
                MaskElement.prototype.drawPath = function(e, t, a) {
                    var s, i, r = " M" + t.v[0][0] + "," + t.v[0][1];
                    for (i = t._length,
                             s = 1; s < i; s += 1)
                        r += " C" + t.o[s - 1][0] + "," + t.o[s - 1][1] + " " + t.i[s][0] + "," + t.i[s][1] + " " + t.v[s][0] + "," + t.v[s][1];
                    if (t.c && i > 1 && (r += " C" + t.o[s - 1][0] + "," + t.o[s - 1][1] + " " + t.i[0][0] + "," + t.i[0][1] + " " + t.v[0][0] + "," + t.v[0][1]),
                    a.lastPath !== r) {
                        var o = "";
                        a.elem && (t.c && (o = e.inv ? this.solidPath + r : r),
                            a.elem.setAttribute("d", o)),
                            a.lastPath = r
                    }
                }
                ,
                MaskElement.prototype.destroy = function() {
                    this.element = null,
                        this.globalData = null,
                        this.maskElement = null,
                        this.data = null,
                        this.masksProperties = null
                }
            ;
            var filtersFactory = function() {
                var e = {
                    createFilter: function(e, t) {
                        var a = createNS("filter");
                        return a.setAttribute("id", e),
                        !0 !== t && (a.setAttribute("filterUnits", "objectBoundingBox"),
                            a.setAttribute("x", "0%"),
                            a.setAttribute("y", "0%"),
                            a.setAttribute("width", "100%"),
                            a.setAttribute("height", "100%")),
                            a
                    },
                    createAlphaToLuminanceFilter: function() {
                        var e = createNS("feColorMatrix");
                        return e.setAttribute("type", "matrix"),
                            e.setAttribute("color-interpolation-filters", "sRGB"),
                            e.setAttribute("values", "0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1"),
                            e
                    }
                };
                return e
            }()
                , featureSupport = function() {
                var e = {
                    maskType: !0,
                    svgLumaHidden: !0,
                    offscreenCanvas: "undefined" != typeof OffscreenCanvas
                };
                return (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\/\d./i.test(navigator.userAgent)) && (e.maskType = !1),
                /firefox/i.test(navigator.userAgent) && (e.svgLumaHidden = !1),
                    e
            }()
                , registeredEffects$1 = {}
                , idPrefix = "filter_result_";
            function SVGEffects(e) {
                var t, a, s = "SourceGraphic", i = e.data.ef ? e.data.ef.length : 0, r = createElementID(), o = filtersFactory.createFilter(r, !0), n = 0;
                for (this.filters = [],
                         t = 0; t < i; t += 1) {
                    a = null;
                    var l = e.data.ef[t].ty;
                    registeredEffects$1[l] && (a = new (0,
                        registeredEffects$1[l].effect)(o,e.effectsManager.effectElements[t],e,idPrefix + n,s),
                        s = idPrefix + n,
                    registeredEffects$1[l].countsAsEffect && (n += 1)),
                    a && this.filters.push(a)
                }
                n && (e.globalData.defs.appendChild(o),
                    e.layerElement.setAttribute("filter", "url(" + getLocationHref() + "#" + r + ")")),
                this.filters.length && e.addRenderableComponent(this)
            }
            function registerEffect$1(e, t, a) {
                registeredEffects$1[e] = {
                    effect: t,
                    countsAsEffect: a
                }
            }
            function SVGBaseElement() {}
            function HierarchyElement() {}
            function RenderableDOMElement() {}
            function IImageElement(e, t, a) {
                this.assetData = t.getAssetData(e.refId),
                this.assetData && this.assetData.sid && (this.assetData = t.slotManager.getProp(this.assetData)),
                    this.initElement(e, t, a),
                    this.sourceRect = {
                        top: 0,
                        left: 0,
                        width: this.assetData.w,
                        height: this.assetData.h
                    }
            }
            function ProcessedElement(e, t) {
                this.elem = e,
                    this.pos = t
            }
            function IShapeElement() {}
            SVGEffects.prototype.renderFrame = function(e) {
                var t, a = this.filters.length;
                for (t = 0; t < a; t += 1)
                    this.filters[t].renderFrame(e)
            }
                ,
                SVGEffects.prototype.getEffects = function(e) {
                    var t, a = this.filters.length, s = [];
                    for (t = 0; t < a; t += 1)
                        this.filters[t].type === e && s.push(this.filters[t]);
                    return s
                }
                ,
                SVGBaseElement.prototype = {
                    initRendererElement: function() {
                        this.layerElement = createNS("g")
                    },
                    createContainerElements: function() {
                        this.matteElement = createNS("g"),
                            this.transformedElement = this.layerElement,
                            this.maskedElement = this.layerElement,
                            this._sizeChanged = !1;
                        var e = null;
                        if (this.data.td) {
                            this.matteMasks = {};
                            var t = createNS("g");
                            t.setAttribute("id", this.layerId),
                                t.appendChild(this.layerElement),
                                e = t,
                                this.globalData.defs.appendChild(t)
                        } else
                            this.data.tt ? (this.matteElement.appendChild(this.layerElement),
                                e = this.matteElement,
                                this.baseElement = this.matteElement) : this.baseElement = this.layerElement;
                        if (this.data.ln && this.layerElement.setAttribute("id", this.data.ln),
                        this.data.cl && this.layerElement.setAttribute("class", this.data.cl),
                        0 === this.data.ty && !this.data.hd) {
                            var a = createNS("clipPath")
                                , s = createNS("path");
                            s.setAttribute("d", "M0,0 L" + this.data.w + ",0 L" + this.data.w + "," + this.data.h + " L0," + this.data.h + "z");
                            var i = createElementID();
                            if (a.setAttribute("id", i),
                                a.appendChild(s),
                                this.globalData.defs.appendChild(a),
                                this.checkMasks()) {
                                var r = createNS("g");
                                r.setAttribute("clip-path", "url(" + getLocationHref() + "#" + i + ")"),
                                    r.appendChild(this.layerElement),
                                    this.transformedElement = r,
                                    e ? e.appendChild(this.transformedElement) : this.baseElement = this.transformedElement
                            } else
                                this.layerElement.setAttribute("clip-path", "url(" + getLocationHref() + "#" + i + ")")
                        }
                        0 !== this.data.bm && this.setBlendMode()
                    },
                    renderElement: function() {
                        this.finalTransform._localMatMdf && this.transformedElement.setAttribute("transform", this.finalTransform.localMat.to2dCSS()),
                        this.finalTransform._opMdf && this.transformedElement.setAttribute("opacity", this.finalTransform.localOpacity)
                    },
                    destroyBaseElement: function() {
                        this.layerElement = null,
                            this.matteElement = null,
                            this.maskManager.destroy()
                    },
                    getBaseElement: function() {
                        return this.data.hd ? null : this.baseElement
                    },
                    createRenderableComponents: function() {
                        this.maskManager = new MaskElement(this.data,this,this.globalData),
                            this.renderableEffectsManager = new SVGEffects(this),
                            this.searchEffectTransforms()
                    },
                    getMatte: function(e) {
                        if (this.matteMasks || (this.matteMasks = {}),
                            !this.matteMasks[e]) {
                            var t, a, s, i, r = this.layerId + "_" + e;
                            if (1 === e || 3 === e) {
                                var o = createNS("mask");
                                o.setAttribute("id", r),
                                    o.setAttribute("mask-type", 3 === e ? "luminance" : "alpha"),
                                    (s = createNS("use")).setAttributeNS("http://www.w3.org/1999/xlink", "href", "#" + this.layerId),
                                    o.appendChild(s),
                                    this.globalData.defs.appendChild(o),
                                featureSupport.maskType || 1 !== e || (o.setAttribute("mask-type", "luminance"),
                                    t = createElementID(),
                                    a = filtersFactory.createFilter(t),
                                    this.globalData.defs.appendChild(a),
                                    a.appendChild(filtersFactory.createAlphaToLuminanceFilter()),
                                    (i = createNS("g")).appendChild(s),
                                    o.appendChild(i),
                                    i.setAttribute("filter", "url(" + getLocationHref() + "#" + t + ")"))
                            } else if (2 === e) {
                                var n = createNS("mask");
                                n.setAttribute("id", r),
                                    n.setAttribute("mask-type", "alpha");
                                var l = createNS("g");
                                n.appendChild(l),
                                    t = createElementID(),
                                    a = filtersFactory.createFilter(t);
                                var c = createNS("feComponentTransfer");
                                c.setAttribute("in", "SourceGraphic"),
                                    a.appendChild(c);
                                var d = createNS("feFuncA");
                                d.setAttribute("type", "table"),
                                    d.setAttribute("tableValues", "1.0 0.0"),
                                    c.appendChild(d),
                                    this.globalData.defs.appendChild(a);
                                var h = createNS("rect");
                                h.setAttribute("width", this.comp.data.w),
                                    h.setAttribute("height", this.comp.data.h),
                                    h.setAttribute("x", "0"),
                                    h.setAttribute("y", "0"),
                                    h.setAttribute("fill", "#ffffff"),
                                    h.setAttribute("opacity", "0"),
                                    l.setAttribute("filter", "url(" + getLocationHref() + "#" + t + ")"),
                                    l.appendChild(h),
                                    (s = createNS("use")).setAttributeNS("http://www.w3.org/1999/xlink", "href", "#" + this.layerId),
                                    l.appendChild(s),
                                featureSupport.maskType || (n.setAttribute("mask-type", "luminance"),
                                    a.appendChild(filtersFactory.createAlphaToLuminanceFilter()),
                                    i = createNS("g"),
                                    l.appendChild(h),
                                    i.appendChild(this.layerElement),
                                    l.appendChild(i)),
                                    this.globalData.defs.appendChild(n)
                            }
                            this.matteMasks[e] = r
                        }
                        return this.matteMasks[e]
                    },
                    setMatte: function(e) {
                        this.matteElement && this.matteElement.setAttribute("mask", "url(" + getLocationHref() + "#" + e + ")")
                    }
                },
                HierarchyElement.prototype = {
                    initHierarchy: function() {
                        this.hierarchy = [],
                            this._isParent = !1,
                            this.checkParenting()
                    },
                    setHierarchy: function(e) {
                        this.hierarchy = e
                    },
                    setAsParent: function() {
                        this._isParent = !0
                    },
                    checkParenting: function() {
                        void 0 !== this.data.parent && this.comp.buildElementParenting(this, this.data.parent, [])
                    }
                },
                extendPrototype([RenderableElement, createProxyFunction({
                    initElement: function(e, t, a) {
                        this.initFrame(),
                            this.initBaseData(e, t, a),
                            this.initTransform(e, t, a),
                            this.initHierarchy(),
                            this.initRenderable(),
                            this.initRendererElement(),
                            this.createContainerElements(),
                            this.createRenderableComponents(),
                            this.createContent(),
                            this.hide()
                    },
                    hide: function() {
                        this.hidden || this.isInRange && !this.isTransparent || ((this.baseElement || this.layerElement).style.display = "none",
                            this.hidden = !0)
                    },
                    show: function() {
                        this.isInRange && !this.isTransparent && (this.data.hd || ((this.baseElement || this.layerElement).style.display = "block"),
                            this.hidden = !1,
                            this._isFirstFrame = !0)
                    },
                    renderFrame: function() {
                        this.data.hd || this.hidden || (this.renderTransform(),
                            this.renderRenderable(),
                            this.renderLocalTransform(),
                            this.renderElement(),
                            this.renderInnerContent(),
                        this._isFirstFrame && (this._isFirstFrame = !1))
                    },
                    renderInnerContent: function() {},
                    prepareFrame: function(e) {
                        this._mdf = !1,
                            this.prepareRenderableFrame(e),
                            this.prepareProperties(e, this.isInRange),
                            this.checkTransparency()
                    },
                    destroy: function() {
                        this.innerElem = null,
                            this.destroyBaseElement()
                    }
                })], RenderableDOMElement),
                extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], IImageElement),
                IImageElement.prototype.createContent = function() {
                    var e = this.globalData.getAssetsPath(this.assetData);
                    this.innerElem = createNS("image"),
                        this.innerElem.setAttribute("width", this.assetData.w + "px"),
                        this.innerElem.setAttribute("height", this.assetData.h + "px"),
                        this.innerElem.setAttribute("preserveAspectRatio", this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio),
                        this.innerElem.setAttributeNS("http://www.w3.org/1999/xlink", "href", e),
                        this.layerElement.appendChild(this.innerElem)
                }
                ,
                IImageElement.prototype.sourceRectAtTime = function() {
                    return this.sourceRect
                }
                ,
                IShapeElement.prototype = {
                    addShapeToModifiers: function(e) {
                        var t, a = this.shapeModifiers.length;
                        for (t = 0; t < a; t += 1)
                            this.shapeModifiers[t].addShape(e)
                    },
                    isShapeInAnimatedModifiers: function(e) {
                        for (var t = this.shapeModifiers.length; 0 < t; )
                            if (this.shapeModifiers[0].isAnimatedWithShape(e))
                                return !0;
                        return !1
                    },
                    renderModifiers: function() {
                        if (this.shapeModifiers.length) {
                            var e, t = this.shapes.length;
                            for (e = 0; e < t; e += 1)
                                this.shapes[e].sh.reset();
                            for (e = (t = this.shapeModifiers.length) - 1; e >= 0 && !this.shapeModifiers[e].processShapes(this._isFirstFrame); e -= 1)
                                ;
                        }
                    },
                    searchProcessedElement: function(e) {
                        for (var t = this.processedElements, a = 0, s = t.length; a < s; ) {
                            if (t[a].elem === e)
                                return t[a].pos;
                            a += 1
                        }
                        return 0
                    },
                    addProcessedElement: function(e, t) {
                        for (var a = this.processedElements, s = a.length; s; )
                            if (a[s -= 1].elem === e)
                                return void (a[s].pos = t);
                        a.push(new ProcessedElement(e,t))
                    },
                    prepareFrame: function(e) {
                        this.prepareRenderableFrame(e),
                            this.prepareProperties(e, this.isInRange)
                    }
                };
            var lineCapEnum = {
                1: "butt",
                2: "round",
                3: "square"
            }
                , lineJoinEnum = {
                1: "miter",
                2: "round",
                3: "bevel"
            };
            function SVGShapeData(e, t, a) {
                this.caches = [],
                    this.styles = [],
                    this.transformers = e,
                    this.lStr = "",
                    this.sh = a,
                    this.lvl = t,
                    this._isAnimated = !!a.k;
                for (var s = 0, i = e.length; s < i; ) {
                    if (e[s].mProps.dynamicProperties.length) {
                        this._isAnimated = !0;
                        break
                    }
                    s += 1
                }
            }
            function SVGStyleData(e, t) {
                this.data = e,
                    this.type = e.ty,
                    this.d = "",
                    this.lvl = t,
                    this._mdf = !1,
                    this.closed = !0 === e.hd,
                    this.pElem = createNS("path"),
                    this.msElem = null
            }
            function DashProperty(e, t, a, s) {
                var i;
                this.elem = e,
                    this.frameId = -1,
                    this.dataProps = createSizedArray(t.length),
                    this.renderer = a,
                    this.k = !1,
                    this.dashStr = "",
                    this.dashArray = createTypedArray("float32", t.length ? t.length - 1 : 0),
                    this.dashoffset = createTypedArray("float32", 1),
                    this.initDynamicPropertyContainer(s);
                var r, o = t.length || 0;
                for (i = 0; i < o; i += 1)
                    r = PropertyFactory.getProp(e, t[i].v, 0, 0, this),
                        this.k = r.k || this.k,
                        this.dataProps[i] = {
                            n: t[i].n,
                            p: r
                        };
                this.k || this.getValue(!0),
                    this._isAnimated = this.k
            }
            function SVGStrokeStyleData(e, t, a) {
                this.initDynamicPropertyContainer(e),
                    this.getValue = this.iterateDynamicProperties,
                    this.o = PropertyFactory.getProp(e, t.o, 0, .01, this),
                    this.w = PropertyFactory.getProp(e, t.w, 0, null, this),
                    this.d = new DashProperty(e,t.d || {},"svg",this),
                    this.c = PropertyFactory.getProp(e, t.c, 1, 255, this),
                    this.style = a,
                    this._isAnimated = !!this._isAnimated
            }
            function SVGFillStyleData(e, t, a) {
                this.initDynamicPropertyContainer(e),
                    this.getValue = this.iterateDynamicProperties,
                    this.o = PropertyFactory.getProp(e, t.o, 0, .01, this),
                    this.c = PropertyFactory.getProp(e, t.c, 1, 255, this),
                    this.style = a
            }
            function SVGNoStyleData(e, t, a) {
                this.initDynamicPropertyContainer(e),
                    this.getValue = this.iterateDynamicProperties,
                    this.style = a
            }
            function GradientProperty(e, t, a) {
                this.data = t,
                    this.c = createTypedArray("uint8c", 4 * t.p);
                var s = t.k.k[0].s ? t.k.k[0].s.length - 4 * t.p : t.k.k.length - 4 * t.p;
                this.o = createTypedArray("float32", s),
                    this._cmdf = !1,
                    this._omdf = !1,
                    this._collapsable = this.checkCollapsable(),
                    this._hasOpacity = s,
                    this.initDynamicPropertyContainer(a),
                    this.prop = PropertyFactory.getProp(e, t.k, 1, null, this),
                    this.k = this.prop.k,
                    this.getValue(!0)
            }
            function SVGGradientFillStyleData(e, t, a) {
                this.initDynamicPropertyContainer(e),
                    this.getValue = this.iterateDynamicProperties,
                    this.initGradientData(e, t, a)
            }
            function SVGGradientStrokeStyleData(e, t, a) {
                this.initDynamicPropertyContainer(e),
                    this.getValue = this.iterateDynamicProperties,
                    this.w = PropertyFactory.getProp(e, t.w, 0, null, this),
                    this.d = new DashProperty(e,t.d || {},"svg",this),
                    this.initGradientData(e, t, a),
                    this._isAnimated = !!this._isAnimated
            }
            function ShapeGroupData() {
                this.it = [],
                    this.prevViewData = [],
                    this.gr = createNS("g")
            }
            function SVGTransformData(e, t, a) {
                this.transform = {
                    mProps: e,
                    op: t,
                    container: a
                },
                    this.elements = [],
                    this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length
            }
            SVGShapeData.prototype.setAsAnimated = function() {
                this._isAnimated = !0
            }
                ,
                SVGStyleData.prototype.reset = function() {
                    this.d = "",
                        this._mdf = !1
                }
                ,
                DashProperty.prototype.getValue = function(e) {
                    if ((this.elem.globalData.frameId !== this.frameId || e) && (this.frameId = this.elem.globalData.frameId,
                        this.iterateDynamicProperties(),
                        this._mdf = this._mdf || e,
                        this._mdf)) {
                        var t = 0
                            , a = this.dataProps.length;
                        for ("svg" === this.renderer && (this.dashStr = ""),
                                 t = 0; t < a; t += 1)
                            "o" !== this.dataProps[t].n ? "svg" === this.renderer ? this.dashStr += " " + this.dataProps[t].p.v : this.dashArray[t] = this.dataProps[t].p.v : this.dashoffset[0] = this.dataProps[t].p.v
                    }
                }
                ,
                extendPrototype([DynamicPropertyContainer], DashProperty),
                extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData),
                extendPrototype([DynamicPropertyContainer], SVGFillStyleData),
                extendPrototype([DynamicPropertyContainer], SVGNoStyleData),
                GradientProperty.prototype.comparePoints = function(e, t) {
                    for (var a = 0, s = this.o.length / 2; a < s; ) {
                        if (Math.abs(e[4 * a] - e[4 * t + 2 * a]) > .01)
                            return !1;
                        a += 1
                    }
                    return !0
                }
                ,
                GradientProperty.prototype.checkCollapsable = function() {
                    if (this.o.length / 2 != this.c.length / 4)
                        return !1;
                    if (this.data.k.k[0].s)
                        for (var e = 0, t = this.data.k.k.length; e < t; ) {
                            if (!this.comparePoints(this.data.k.k[e].s, this.data.p))
                                return !1;
                            e += 1
                        }
                    else if (!this.comparePoints(this.data.k.k, this.data.p))
                        return !1;
                    return !0
                }
                ,
                GradientProperty.prototype.getValue = function(e) {
                    if (this.prop.getValue(),
                        this._mdf = !1,
                        this._cmdf = !1,
                        this._omdf = !1,
                    this.prop._mdf || e) {
                        var t, a, s, i = 4 * this.data.p;
                        for (t = 0; t < i; t += 1)
                            a = t % 4 == 0 ? 100 : 255,
                                s = Math.round(this.prop.v[t] * a),
                            this.c[t] !== s && (this.c[t] = s,
                                this._cmdf = !e);
                        if (this.o.length)
                            for (i = this.prop.v.length,
                                     t = 4 * this.data.p; t < i; t += 1)
                                a = t % 2 == 0 ? 100 : 1,
                                    s = t % 2 == 0 ? Math.round(100 * this.prop.v[t]) : this.prop.v[t],
                                this.o[t - 4 * this.data.p] !== s && (this.o[t - 4 * this.data.p] = s,
                                    this._omdf = !e);
                        this._mdf = !e
                    }
                }
                ,
                extendPrototype([DynamicPropertyContainer], GradientProperty),
                SVGGradientFillStyleData.prototype.initGradientData = function(e, t, a) {
                    this.o = PropertyFactory.getProp(e, t.o, 0, .01, this),
                        this.s = PropertyFactory.getProp(e, t.s, 1, null, this),
                        this.e = PropertyFactory.getProp(e, t.e, 1, null, this),
                        this.h = PropertyFactory.getProp(e, t.h || {
                            k: 0
                        }, 0, .01, this),
                        this.a = PropertyFactory.getProp(e, t.a || {
                            k: 0
                        }, 0, degToRads, this),
                        this.g = new GradientProperty(e,t.g,this),
                        this.style = a,
                        this.stops = [],
                        this.setGradientData(a.pElem, t),
                        this.setGradientOpacity(t, a),
                        this._isAnimated = !!this._isAnimated
                }
                ,
                SVGGradientFillStyleData.prototype.setGradientData = function(e, t) {
                    var a = createElementID()
                        , s = createNS(1 === t.t ? "linearGradient" : "radialGradient");
                    s.setAttribute("id", a),
                        s.setAttribute("spreadMethod", "pad"),
                        s.setAttribute("gradientUnits", "userSpaceOnUse");
                    var i, r, o, n = [];
                    for (o = 4 * t.g.p,
                             r = 0; r < o; r += 4)
                        i = createNS("stop"),
                            s.appendChild(i),
                            n.push(i);
                    e.setAttribute("gf" === t.ty ? "fill" : "stroke", "url(" + getLocationHref() + "#" + a + ")"),
                        this.gf = s,
                        this.cst = n
                }
                ,
                SVGGradientFillStyleData.prototype.setGradientOpacity = function(e, t) {
                    if (this.g._hasOpacity && !this.g._collapsable) {
                        var a, s, i, r = createNS("mask"), o = createNS("path");
                        r.appendChild(o);
                        var n = createElementID()
                            , l = createElementID();
                        r.setAttribute("id", l);
                        var c = createNS(1 === e.t ? "linearGradient" : "radialGradient");
                        c.setAttribute("id", n),
                            c.setAttribute("spreadMethod", "pad"),
                            c.setAttribute("gradientUnits", "userSpaceOnUse"),
                            i = e.g.k.k[0].s ? e.g.k.k[0].s.length : e.g.k.k.length;
                        var d = this.stops;
                        for (s = 4 * e.g.p; s < i; s += 2)
                            (a = createNS("stop")).setAttribute("stop-color", "rgb(255,255,255)"),
                                c.appendChild(a),
                                d.push(a);
                        o.setAttribute("gf" === e.ty ? "fill" : "stroke", "url(" + getLocationHref() + "#" + n + ")"),
                        "gs" === e.ty && (o.setAttribute("stroke-linecap", lineCapEnum[e.lc || 2]),
                            o.setAttribute("stroke-linejoin", lineJoinEnum[e.lj || 2]),
                        1 === e.lj && o.setAttribute("stroke-miterlimit", e.ml)),
                            this.of = c,
                            this.ms = r,
                            this.ost = d,
                            this.maskId = l,
                            t.msElem = o
                    }
                }
                ,
                extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData),
                extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);
            var buildShapeString = function(e, t, a, s) {
                if (0 === t)
                    return "";
                var i, r = e.o, o = e.i, n = e.v, l = " M" + s.applyToPointStringified(n[0][0], n[0][1]);
                for (i = 1; i < t; i += 1)
                    l += " C" + s.applyToPointStringified(r[i - 1][0], r[i - 1][1]) + " " + s.applyToPointStringified(o[i][0], o[i][1]) + " " + s.applyToPointStringified(n[i][0], n[i][1]);
                return a && t && (l += " C" + s.applyToPointStringified(r[i - 1][0], r[i - 1][1]) + " " + s.applyToPointStringified(o[0][0], o[0][1]) + " " + s.applyToPointStringified(n[0][0], n[0][1]),
                    l += "z"),
                    l
            }
                , SVGElementsRenderer = function() {
                var e = new Matrix
                    , t = new Matrix;
                function a(e, t, a) {
                    (a || t.transform.op._mdf) && t.transform.container.setAttribute("opacity", t.transform.op.v),
                    (a || t.transform.mProps._mdf) && t.transform.container.setAttribute("transform", t.transform.mProps.v.to2dCSS())
                }
                function s() {}
                function i(a, s, i) {
                    var r, o, n, l, c, d, h, p, u, m, f = s.styles.length, v = s.lvl;
                    for (d = 0; d < f; d += 1) {
                        if (l = s.sh._mdf || i,
                        s.styles[d].lvl < v) {
                            for (p = t.reset(),
                                     u = v - s.styles[d].lvl,
                                     m = s.transformers.length - 1; !l && u > 0; )
                                l = s.transformers[m].mProps._mdf || l,
                                    u -= 1,
                                    m -= 1;
                            if (l)
                                for (u = v - s.styles[d].lvl,
                                         m = s.transformers.length - 1; u > 0; )
                                    p.multiply(s.transformers[m].mProps.v),
                                        u -= 1,
                                        m -= 1
                        } else
                            p = e;
                        if (o = (h = s.sh.paths)._length,
                            l) {
                            for (n = "",
                                     r = 0; r < o; r += 1)
                                (c = h.shapes[r]) && c._length && (n += buildShapeString(c, c._length, c.c, p));
                            s.caches[d] = n
                        } else
                            n = s.caches[d];
                        s.styles[d].d += !0 === a.hd ? "" : n,
                            s.styles[d]._mdf = l || s.styles[d]._mdf
                    }
                }
                function r(e, t, a) {
                    var s = t.style;
                    (t.c._mdf || a) && s.pElem.setAttribute("fill", "rgb(" + bmFloor(t.c.v[0]) + "," + bmFloor(t.c.v[1]) + "," + bmFloor(t.c.v[2]) + ")"),
                    (t.o._mdf || a) && s.pElem.setAttribute("fill-opacity", t.o.v)
                }
                function o(e, t, a) {
                    n(e, t, a),
                        l(0, t, a)
                }
                function n(e, t, a) {
                    var s, i, r, o, n, l = t.gf, c = t.g._hasOpacity, d = t.s.v, h = t.e.v;
                    if (t.o._mdf || a) {
                        var p = "gf" === e.ty ? "fill-opacity" : "stroke-opacity";
                        t.style.pElem.setAttribute(p, t.o.v)
                    }
                    if (t.s._mdf || a) {
                        var u = 1 === e.t ? "x1" : "cx"
                            , m = "x1" === u ? "y1" : "cy";
                        l.setAttribute(u, d[0]),
                            l.setAttribute(m, d[1]),
                        c && !t.g._collapsable && (t.of.setAttribute(u, d[0]),
                            t.of.setAttribute(m, d[1]))
                    }
                    if (t.g._cmdf || a) {
                        s = t.cst;
                        var f = t.g.c;
                        for (r = s.length,
                                 i = 0; i < r; i += 1)
                            (o = s[i]).setAttribute("offset", f[4 * i] + "%"),
                                o.setAttribute("stop-color", "rgb(" + f[4 * i + 1] + "," + f[4 * i + 2] + "," + f[4 * i + 3] + ")")
                    }
                    if (c && (t.g._omdf || a)) {
                        var v = t.g.o;
                        for (r = (s = t.g._collapsable ? t.cst : t.ost).length,
                                 i = 0; i < r; i += 1)
                            o = s[i],
                            t.g._collapsable || o.setAttribute("offset", v[2 * i] + "%"),
                                o.setAttribute("stop-opacity", v[2 * i + 1])
                    }
                    if (1 === e.t)
                        (t.e._mdf || a) && (l.setAttribute("x2", h[0]),
                            l.setAttribute("y2", h[1]),
                        c && !t.g._collapsable && (t.of.setAttribute("x2", h[0]),
                            t.of.setAttribute("y2", h[1])));
                    else if ((t.s._mdf || t.e._mdf || a) && (n = Math.sqrt(Math.pow(d[0] - h[0], 2) + Math.pow(d[1] - h[1], 2)),
                        l.setAttribute("r", n),
                    c && !t.g._collapsable && t.of.setAttribute("r", n)),
                    t.e._mdf || t.h._mdf || t.a._mdf || a) {
                        n || (n = Math.sqrt(Math.pow(d[0] - h[0], 2) + Math.pow(d[1] - h[1], 2)));
                        var g = Math.atan2(h[1] - d[1], h[0] - d[0])
                            , y = t.h.v;
                        y >= 1 ? y = .99 : y <= -1 && (y = -.99);
                        var _ = n * y
                            , b = Math.cos(g + t.a.v) * _ + d[0]
                            , k = Math.sin(g + t.a.v) * _ + d[1];
                        l.setAttribute("fx", b),
                            l.setAttribute("fy", k),
                        c && !t.g._collapsable && (t.of.setAttribute("fx", b),
                            t.of.setAttribute("fy", k))
                    }
                }
                function l(e, t, a) {
                    var s = t.style
                        , i = t.d;
                    i && (i._mdf || a) && i.dashStr && (s.pElem.setAttribute("stroke-dasharray", i.dashStr),
                        s.pElem.setAttribute("stroke-dashoffset", i.dashoffset[0])),
                    t.c && (t.c._mdf || a) && s.pElem.setAttribute("stroke", "rgb(" + bmFloor(t.c.v[0]) + "," + bmFloor(t.c.v[1]) + "," + bmFloor(t.c.v[2]) + ")"),
                    (t.o._mdf || a) && s.pElem.setAttribute("stroke-opacity", t.o.v),
                    (t.w._mdf || a) && (s.pElem.setAttribute("stroke-width", t.w.v),
                    s.msElem && s.msElem.setAttribute("stroke-width", t.w.v))
                }
                return {
                    createRenderFunction: function(e) {
                        switch (e.ty) {
                            case "fl":
                                return r;
                            case "gf":
                                return n;
                            case "gs":
                                return o;
                            case "st":
                                return l;
                            case "sh":
                            case "el":
                            case "rc":
                            case "sr":
                                return i;
                            case "tr":
                                return a;
                            case "no":
                                return s;
                            default:
                                return null
                        }
                    }
                }
            }();
            function SVGShapeElement(e, t, a) {
                this.shapes = [],
                    this.shapesData = e.shapes,
                    this.stylesList = [],
                    this.shapeModifiers = [],
                    this.itemsData = [],
                    this.processedElements = [],
                    this.animatedContents = [],
                    this.initElement(e, t, a),
                    this.prevViewData = []
            }
            function LetterProps(e, t, a, s, i, r) {
                this.o = e,
                    this.sw = t,
                    this.sc = a,
                    this.fc = s,
                    this.m = i,
                    this.p = r,
                    this._mdf = {
                        o: !0,
                        sw: !!t,
                        sc: !!a,
                        fc: !!s,
                        m: !0,
                        p: !0
                    }
            }
            function TextProperty(e, t) {
                this._frameId = initialDefaultFrame,
                    this.pv = "",
                    this.v = "",
                    this.kf = !1,
                    this._isFirstFrame = !0,
                    this._mdf = !1,
                t.d && t.d.sid && (t.d = e.globalData.slotManager.getProp(t.d)),
                    this.data = t,
                    this.elem = e,
                    this.comp = this.elem.comp,
                    this.keysIndex = 0,
                    this.canResize = !1,
                    this.minimumFontSize = 1,
                    this.effectsSequence = [],
                    this.currentData = {
                        ascent: 0,
                        boxWidth: this.defaultBoxWidth,
                        f: "",
                        fStyle: "",
                        fWeight: "",
                        fc: "",
                        j: "",
                        justifyOffset: "",
                        l: [],
                        lh: 0,
                        lineWidths: [],
                        ls: "",
                        of: "",
                        s: "",
                        sc: "",
                        sw: 0,
                        t: 0,
                        tr: 0,
                        sz: 0,
                        ps: null,
                        fillColorAnim: !1,
                        strokeColorAnim: !1,
                        strokeWidthAnim: !1,
                        yOffset: 0,
                        finalSize: 0,
                        finalText: [],
                        finalLineHeight: 0,
                        __complete: !1
                    },
                    this.copyData(this.currentData, this.data.d.k[0].s),
                this.searchProperty() || this.completeTextData(this.currentData)
            }
            extendPrototype([BaseElement, TransformElement, SVGBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableDOMElement], SVGShapeElement),
                SVGShapeElement.prototype.initSecondaryElement = function() {}
                ,
                SVGShapeElement.prototype.identityMatrix = new Matrix,
                SVGShapeElement.prototype.buildExpressionInterface = function() {}
                ,
                SVGShapeElement.prototype.createContent = function() {
                    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], !0),
                        this.filterUniqueShapes()
                }
                ,
                SVGShapeElement.prototype.filterUniqueShapes = function() {
                    var e, t, a, s, i = this.shapes.length, r = this.stylesList.length, o = [], n = !1;
                    for (a = 0; a < r; a += 1) {
                        for (s = this.stylesList[a],
                                 n = !1,
                                 o.length = 0,
                                 e = 0; e < i; e += 1)
                            -1 !== (t = this.shapes[e]).styles.indexOf(s) && (o.push(t),
                                n = t._isAnimated || n);
                        o.length > 1 && n && this.setShapesAsAnimated(o)
                    }
                }
                ,
                SVGShapeElement.prototype.setShapesAsAnimated = function(e) {
                    var t, a = e.length;
                    for (t = 0; t < a; t += 1)
                        e[t].setAsAnimated()
                }
                ,
                SVGShapeElement.prototype.createStyleElement = function(e, t) {
                    var a, s = new SVGStyleData(e,t), i = s.pElem;
                    return "st" === e.ty ? a = new SVGStrokeStyleData(this,e,s) : "fl" === e.ty ? a = new SVGFillStyleData(this,e,s) : "gf" === e.ty || "gs" === e.ty ? (a = new ("gf" === e.ty ? SVGGradientFillStyleData : SVGGradientStrokeStyleData)(this,e,s),
                        this.globalData.defs.appendChild(a.gf),
                    a.maskId && (this.globalData.defs.appendChild(a.ms),
                        this.globalData.defs.appendChild(a.of),
                        i.setAttribute("mask", "url(" + getLocationHref() + "#" + a.maskId + ")"))) : "no" === e.ty && (a = new SVGNoStyleData(this,e,s)),
                    "st" !== e.ty && "gs" !== e.ty || (i.setAttribute("stroke-linecap", lineCapEnum[e.lc || 2]),
                        i.setAttribute("stroke-linejoin", lineJoinEnum[e.lj || 2]),
                        i.setAttribute("fill-opacity", "0"),
                    1 === e.lj && i.setAttribute("stroke-miterlimit", e.ml)),
                    2 === e.r && i.setAttribute("fill-rule", "evenodd"),
                    e.ln && i.setAttribute("id", e.ln),
                    e.cl && i.setAttribute("class", e.cl),
                    e.bm && (i.style["mix-blend-mode"] = getBlendMode(e.bm)),
                        this.stylesList.push(s),
                        this.addToAnimatedContents(e, a),
                        a
                }
                ,
                SVGShapeElement.prototype.createGroupElement = function(e) {
                    var t = new ShapeGroupData;
                    return e.ln && t.gr.setAttribute("id", e.ln),
                    e.cl && t.gr.setAttribute("class", e.cl),
                    e.bm && (t.gr.style["mix-blend-mode"] = getBlendMode(e.bm)),
                        t
                }
                ,
                SVGShapeElement.prototype.createTransformElement = function(e, t) {
                    var a = TransformPropertyFactory.getTransformProperty(this, e, this)
                        , s = new SVGTransformData(a,a.o,t);
                    return this.addToAnimatedContents(e, s),
                        s
                }
                ,
                SVGShapeElement.prototype.createShapeElement = function(e, t, a) {
                    var s = 4;
                    "rc" === e.ty ? s = 5 : "el" === e.ty ? s = 6 : "sr" === e.ty && (s = 7);
                    var i = new SVGShapeData(t,a,ShapePropertyFactory.getShapeProp(this, e, s, this));
                    return this.shapes.push(i),
                        this.addShapeToModifiers(i),
                        this.addToAnimatedContents(e, i),
                        i
                }
                ,
                SVGShapeElement.prototype.addToAnimatedContents = function(e, t) {
                    for (var a = 0, s = this.animatedContents.length; a < s; ) {
                        if (this.animatedContents[a].element === t)
                            return;
                        a += 1
                    }
                    this.animatedContents.push({
                        fn: SVGElementsRenderer.createRenderFunction(e),
                        element: t,
                        data: e
                    })
                }
                ,
                SVGShapeElement.prototype.setElementStyles = function(e) {
                    var t, a = e.styles, s = this.stylesList.length;
                    for (t = 0; t < s; t += 1)
                        this.stylesList[t].closed || a.push(this.stylesList[t])
                }
                ,
                SVGShapeElement.prototype.reloadShapes = function() {
                    var e;
                    this._isFirstFrame = !0;
                    var t = this.itemsData.length;
                    for (e = 0; e < t; e += 1)
                        this.prevViewData[e] = this.itemsData[e];
                    for (this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], !0),
                             this.filterUniqueShapes(),
                             t = this.dynamicProperties.length,
                             e = 0; e < t; e += 1)
                        this.dynamicProperties[e].getValue();
                    this.renderModifiers()
                }
                ,
                SVGShapeElement.prototype.searchShapes = function(e, t, a, s, i, r, o) {
                    var n, l, c, d, h, p, u = [].concat(r), m = e.length - 1, f = [], v = [];
                    for (n = m; n >= 0; n -= 1) {
                        if ((p = this.searchProcessedElement(e[n])) ? t[n] = a[p - 1] : e[n]._render = o,
                        "fl" === e[n].ty || "st" === e[n].ty || "gf" === e[n].ty || "gs" === e[n].ty || "no" === e[n].ty)
                            p ? t[n].style.closed = !1 : t[n] = this.createStyleElement(e[n], i),
                            e[n]._render && t[n].style.pElem.parentNode !== s && s.appendChild(t[n].style.pElem),
                                f.push(t[n].style);
                        else if ("gr" === e[n].ty) {
                            if (p)
                                for (c = t[n].it.length,
                                         l = 0; l < c; l += 1)
                                    t[n].prevViewData[l] = t[n].it[l];
                            else
                                t[n] = this.createGroupElement(e[n]);
                            this.searchShapes(e[n].it, t[n].it, t[n].prevViewData, t[n].gr, i + 1, u, o),
                            e[n]._render && t[n].gr.parentNode !== s && s.appendChild(t[n].gr)
                        } else
                            "tr" === e[n].ty ? (p || (t[n] = this.createTransformElement(e[n], s)),
                                d = t[n].transform,
                                u.push(d)) : "sh" === e[n].ty || "rc" === e[n].ty || "el" === e[n].ty || "sr" === e[n].ty ? (p || (t[n] = this.createShapeElement(e[n], u, i)),
                                this.setElementStyles(t[n])) : "tm" === e[n].ty || "rd" === e[n].ty || "ms" === e[n].ty || "pb" === e[n].ty || "zz" === e[n].ty || "op" === e[n].ty ? (p ? (h = t[n]).closed = !1 : ((h = ShapeModifiers.getModifier(e[n].ty)).init(this, e[n]),
                                t[n] = h,
                                this.shapeModifiers.push(h)),
                                v.push(h)) : "rp" === e[n].ty && (p ? (h = t[n]).closed = !0 : (h = ShapeModifiers.getModifier(e[n].ty),
                                t[n] = h,
                                h.init(this, e, n, t),
                                this.shapeModifiers.push(h),
                                o = !1),
                                v.push(h));
                        this.addProcessedElement(e[n], n + 1)
                    }
                    for (m = f.length,
                             n = 0; n < m; n += 1)
                        f[n].closed = !0;
                    for (m = v.length,
                             n = 0; n < m; n += 1)
                        v[n].closed = !0
                }
                ,
                SVGShapeElement.prototype.renderInnerContent = function() {
                    var e;
                    this.renderModifiers();
                    var t = this.stylesList.length;
                    for (e = 0; e < t; e += 1)
                        this.stylesList[e].reset();
                    for (this.renderShape(),
                             e = 0; e < t; e += 1)
                        (this.stylesList[e]._mdf || this._isFirstFrame) && (this.stylesList[e].msElem && (this.stylesList[e].msElem.setAttribute("d", this.stylesList[e].d),
                            this.stylesList[e].d = "M0 0" + this.stylesList[e].d),
                            this.stylesList[e].pElem.setAttribute("d", this.stylesList[e].d || "M0 0"))
                }
                ,
                SVGShapeElement.prototype.renderShape = function() {
                    var e, t, a = this.animatedContents.length;
                    for (e = 0; e < a; e += 1)
                        t = this.animatedContents[e],
                        (this._isFirstFrame || t.element._isAnimated) && !0 !== t.data && t.fn(t.data, t.element, this._isFirstFrame)
                }
                ,
                SVGShapeElement.prototype.destroy = function() {
                    this.destroyBaseElement(),
                        this.shapesData = null,
                        this.itemsData = null
                }
                ,
                LetterProps.prototype.update = function(e, t, a, s, i, r) {
                    this._mdf.o = !1,
                        this._mdf.sw = !1,
                        this._mdf.sc = !1,
                        this._mdf.fc = !1,
                        this._mdf.m = !1,
                        this._mdf.p = !1;
                    var o = !1;
                    return this.o !== e && (this.o = e,
                        this._mdf.o = !0,
                        o = !0),
                    this.sw !== t && (this.sw = t,
                        this._mdf.sw = !0,
                        o = !0),
                    this.sc !== a && (this.sc = a,
                        this._mdf.sc = !0,
                        o = !0),
                    this.fc !== s && (this.fc = s,
                        this._mdf.fc = !0,
                        o = !0),
                    this.m !== i && (this.m = i,
                        this._mdf.m = !0,
                        o = !0),
                    !r.length || this.p[0] === r[0] && this.p[1] === r[1] && this.p[4] === r[4] && this.p[5] === r[5] && this.p[12] === r[12] && this.p[13] === r[13] || (this.p = r,
                        this._mdf.p = !0,
                        o = !0),
                        o
                }
                ,
                TextProperty.prototype.defaultBoxWidth = [0, 0],
                TextProperty.prototype.copyData = function(e, t) {
                    for (var a in t)
                        Object.prototype.hasOwnProperty.call(t, a) && (e[a] = t[a]);
                    return e
                }
                ,
                TextProperty.prototype.setCurrentData = function(e) {
                    e.__complete || this.completeTextData(e),
                        this.currentData = e,
                        this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth,
                        this._mdf = !0
                }
                ,
                TextProperty.prototype.searchProperty = function() {
                    return this.searchKeyframes()
                }
                ,
                TextProperty.prototype.searchKeyframes = function() {
                    return this.kf = this.data.d.k.length > 1,
                    this.kf && this.addEffect(this.getKeyframeValue.bind(this)),
                        this.kf
                }
                ,
                TextProperty.prototype.addEffect = function(e) {
                    this.effectsSequence.push(e),
                        this.elem.addDynamicProperty(this)
                }
                ,
                TextProperty.prototype.getValue = function(e) {
                    if (this.elem.globalData.frameId !== this.frameId && this.effectsSequence.length || e) {
                        this.currentData.t = this.data.d.k[this.keysIndex].s.t;
                        var t = this.currentData
                            , a = this.keysIndex;
                        if (this.lock)
                            this.setCurrentData(this.currentData);
                        else {
                            var s;
                            this.lock = !0,
                                this._mdf = !1;
                            var i = this.effectsSequence.length
                                , r = e || this.data.d.k[this.keysIndex].s;
                            for (s = 0; s < i; s += 1)
                                r = a !== this.keysIndex ? this.effectsSequence[s](r, r.t) : this.effectsSequence[s](this.currentData, r.t);
                            t !== r && this.setCurrentData(r),
                                this.v = this.currentData,
                                this.pv = this.v,
                                this.lock = !1,
                                this.frameId = this.elem.globalData.frameId
                        }
                    }
                }
                ,
                TextProperty.prototype.getKeyframeValue = function() {
                    for (var e = this.data.d.k, t = this.elem.comp.renderedFrame, a = 0, s = e.length; a <= s - 1 && !(a === s - 1 || e[a + 1].t > t); )
                        a += 1;
                    return this.keysIndex !== a && (this.keysIndex = a),
                        this.data.d.k[this.keysIndex].s
                }
                ,
                TextProperty.prototype.buildFinalText = function(e) {
                    for (var t, a, s = [], i = 0, r = e.length, o = !1, n = !1, l = ""; i < r; )
                        o = n,
                            n = !1,
                            t = e.charCodeAt(i),
                            l = e.charAt(i),
                            FontManager.isCombinedCharacter(t) ? o = !0 : t >= 55296 && t <= 56319 ? FontManager.isRegionalFlag(e, i) ? l = e.substr(i, 14) : (a = e.charCodeAt(i + 1)) >= 56320 && a <= 57343 && (FontManager.isModifier(t, a) ? (l = e.substr(i, 2),
                                o = !0) : l = FontManager.isFlagEmoji(e.substr(i, 4)) ? e.substr(i, 4) : e.substr(i, 2)) : t > 56319 ? (a = e.charCodeAt(i + 1),
                            FontManager.isVariationSelector(t) && (o = !0)) : FontManager.isZeroWidthJoiner(t) && (o = !0,
                                n = !0),
                            o ? (s[s.length - 1] += l,
                                o = !1) : s.push(l),
                            i += l.length;
                    return s
                }
                ,
                TextProperty.prototype.completeTextData = function(e) {
                    e.__complete = !0;
                    var t, a, s, i, r, o, n, l = this.elem.globalData.fontManager, c = this.data, d = [], h = 0, p = c.m.g, u = 0, m = 0, f = 0, v = [], g = 0, y = 0, _ = l.getFontByName(e.f), b = 0, k = getFontProperties(_);
                    e.fWeight = k.weight,
                        e.fStyle = k.style,
                        e.finalSize = e.s,
                        e.finalText = this.buildFinalText(e.t),
                        a = e.finalText.length,
                        e.finalLineHeight = e.lh;
                    var w, B = e.tr / 1e3 * e.finalSize;
                    if (e.sz)
                        for (var C, x, S = !0, E = e.sz[0], V = e.sz[1]; S; ) {
                            C = 0,
                                g = 0,
                                a = (x = this.buildFinalText(e.t)).length,
                                B = e.tr / 1e3 * e.finalSize;
                            var N = -1;
                            for (t = 0; t < a; t += 1)
                                w = x[t].charCodeAt(0),
                                    s = !1,
                                    " " === x[t] ? N = t : 13 !== w && 3 !== w || (g = 0,
                                        s = !0,
                                        C += e.finalLineHeight || 1.2 * e.finalSize),
                                    l.chars ? (n = l.getCharData(x[t], _.fStyle, _.fFamily),
                                        b = s ? 0 : n.w * e.finalSize / 100) : b = l.measureText(x[t], e.f, e.finalSize),
                                    g + b > E && " " !== x[t] ? (-1 === N ? a += 1 : t = N,
                                        C += e.finalLineHeight || 1.2 * e.finalSize,
                                        x.splice(t, N === t ? 1 : 0, "\r"),
                                        N = -1,
                                        g = 0) : (g += b,
                                        g += B);
                            C += _.ascent * e.finalSize / 100,
                                this.canResize && e.finalSize > this.minimumFontSize && V < C ? (e.finalSize -= 1,
                                    e.finalLineHeight = e.finalSize * e.lh / e.s) : (e.finalText = x,
                                    a = e.finalText.length,
                                    S = !1)
                        }
                    g = -B,
                        b = 0;
                    var P, A = 0;
                    for (t = 0; t < a; t += 1)
                        if (s = !1,
                            13 === (w = (P = e.finalText[t]).charCodeAt(0)) || 3 === w ? (A = 0,
                                v.push(g),
                                y = g > y ? g : y,
                                g = -2 * B,
                                i = "",
                                s = !0,
                                f += 1) : i = P,
                            l.chars ? (n = l.getCharData(P, _.fStyle, l.getFontByName(e.f).fFamily),
                                b = s ? 0 : n.w * e.finalSize / 100) : b = l.measureText(i, e.f, e.finalSize),
                            " " === P ? A += b + B : (g += b + B + A,
                                A = 0),
                            d.push({
                                l: b,
                                an: b,
                                add: u,
                                n: s,
                                anIndexes: [],
                                val: i,
                                line: f,
                                animatorJustifyOffset: 0
                            }),
                        2 == p) {
                            if (u += b,
                            "" === i || " " === i || t === a - 1) {
                                for ("" !== i && " " !== i || (u -= b); m <= t; )
                                    d[m].an = u,
                                        d[m].ind = h,
                                        d[m].extra = b,
                                        m += 1;
                                h += 1,
                                    u = 0
                            }
                        } else if (3 == p) {
                            if (u += b,
                            "" === i || t === a - 1) {
                                for ("" === i && (u -= b); m <= t; )
                                    d[m].an = u,
                                        d[m].ind = h,
                                        d[m].extra = b,
                                        m += 1;
                                u = 0,
                                    h += 1
                            }
                        } else
                            d[h].ind = h,
                                d[h].extra = 0,
                                h += 1;
                    if (e.l = d,
                        y = g > y ? g : y,
                        v.push(g),
                        e.sz)
                        e.boxWidth = e.sz[0],
                            e.justifyOffset = 0;
                    else
                        switch (e.boxWidth = y,
                            e.j) {
                            case 1:
                                e.justifyOffset = -e.boxWidth;
                                break;
                            case 2:
                                e.justifyOffset = -e.boxWidth / 2;
                                break;
                            default:
                                e.justifyOffset = 0
                        }
                    e.lineWidths = v;
                    var $, T, M, D, I = c.a;
                    o = I.length;
                    var F = [];
                    for (r = 0; r < o; r += 1) {
                        for (($ = I[r]).a.sc && (e.strokeColorAnim = !0),
                             $.a.sw && (e.strokeWidthAnim = !0),
                             ($.a.fc || $.a.fh || $.a.fs || $.a.fb) && (e.fillColorAnim = !0),
                                 D = 0,
                                 M = $.s.b,
                                 t = 0; t < a; t += 1)
                            (T = d[t]).anIndexes[r] = D,
                            (1 == M && "" !== T.val || 2 == M && "" !== T.val && " " !== T.val || 3 == M && (T.n || " " == T.val || t == a - 1) || 4 == M && (T.n || t == a - 1)) && (1 === $.s.rn && F.push(D),
                                D += 1);
                        c.a[r].s.totalChars = D;
                        var L, R = -1;
                        if (1 === $.s.rn)
                            for (t = 0; t < a; t += 1)
                                R != (T = d[t]).anIndexes[r] && (R = T.anIndexes[r],
                                    L = F.splice(Math.floor(Math.random() * F.length), 1)[0]),
                                    T.anIndexes[r] = L
                    }
                    e.yOffset = e.finalLineHeight || 1.2 * e.finalSize,
                        e.ls = e.ls || 0,
                        e.ascent = _.ascent * e.finalSize / 100
                }
                ,
                TextProperty.prototype.updateDocumentData = function(e, t) {
                    t = void 0 === t ? this.keysIndex : t;
                    var a = this.copyData({}, this.data.d.k[t].s);
                    a = this.copyData(a, e),
                        this.data.d.k[t].s = a,
                        this.recalculate(t),
                        this.setCurrentData(a),
                        this.elem.addDynamicProperty(this)
                }
                ,
                TextProperty.prototype.recalculate = function(e) {
                    var t = this.data.d.k[e].s;
                    t.__complete = !1,
                        this.keysIndex = 0,
                        this._isFirstFrame = !0,
                        this.getValue(t)
                }
                ,
                TextProperty.prototype.canResizeFont = function(e) {
                    this.canResize = e,
                        this.recalculate(this.keysIndex),
                        this.elem.addDynamicProperty(this)
                }
                ,
                TextProperty.prototype.setMinimumFontSize = function(e) {
                    this.minimumFontSize = Math.floor(e) || 1,
                        this.recalculate(this.keysIndex),
                        this.elem.addDynamicProperty(this)
                }
            ;
            var TextSelectorProp = function() {
                var e = Math.max
                    , t = Math.min
                    , a = Math.floor;
                function s(e, t) {
                    this._currentTextLength = -1,
                        this.k = !1,
                        this.data = t,
                        this.elem = e,
                        this.comp = e.comp,
                        this.finalS = 0,
                        this.finalE = 0,
                        this.initDynamicPropertyContainer(e),
                        this.s = PropertyFactory.getProp(e, t.s || {
                            k: 0
                        }, 0, 0, this),
                        this.e = "e"in t ? PropertyFactory.getProp(e, t.e, 0, 0, this) : {
                            v: 100
                        },
                        this.o = PropertyFactory.getProp(e, t.o || {
                            k: 0
                        }, 0, 0, this),
                        this.xe = PropertyFactory.getProp(e, t.xe || {
                            k: 0
                        }, 0, 0, this),
                        this.ne = PropertyFactory.getProp(e, t.ne || {
                            k: 0
                        }, 0, 0, this),
                        this.sm = PropertyFactory.getProp(e, t.sm || {
                            k: 100
                        }, 0, 0, this),
                        this.a = PropertyFactory.getProp(e, t.a, 0, .01, this),
                    this.dynamicProperties.length || this.getValue()
                }
                return s.prototype = {
                    getMult: function(s) {
                        this._currentTextLength !== this.elem.textProperty.currentData.l.length && this.getValue();
                        var i = 0
                            , r = 0
                            , o = 1
                            , n = 1;
                        this.ne.v > 0 ? i = this.ne.v / 100 : r = -this.ne.v / 100,
                            this.xe.v > 0 ? o = 1 - this.xe.v / 100 : n = 1 + this.xe.v / 100;
                        var l = BezierFactory.getBezierEasing(i, r, o, n).get
                            , c = 0
                            , d = this.finalS
                            , h = this.finalE
                            , p = this.data.sh;
                        if (2 === p)
                            c = l(c = h === d ? s >= h ? 1 : 0 : e(0, t(.5 / (h - d) + (s - d) / (h - d), 1)));
                        else if (3 === p)
                            c = l(c = h === d ? s >= h ? 0 : 1 : 1 - e(0, t(.5 / (h - d) + (s - d) / (h - d), 1)));
                        else if (4 === p)
                            h === d ? c = 0 : (c = e(0, t(.5 / (h - d) + (s - d) / (h - d), 1))) < .5 ? c *= 2 : c = 1 - 2 * (c - .5),
                                c = l(c);
                        else if (5 === p) {
                            if (h === d)
                                c = 0;
                            else {
                                var u = h - d
                                    , m = -u / 2 + (s = t(e(0, s + .5 - d), h - d))
                                    , f = u / 2;
                                c = Math.sqrt(1 - m * m / (f * f))
                            }
                            c = l(c)
                        } else
                            6 === p ? (h === d ? c = 0 : (s = t(e(0, s + .5 - d), h - d),
                                c = (1 + Math.cos(Math.PI + 2 * Math.PI * s / (h - d))) / 2),
                                c = l(c)) : (s >= a(d) && (c = e(0, t(s - d < 0 ? t(h, 1) - (d - s) : h - s, 1))),
                                c = l(c));
                        if (100 !== this.sm.v) {
                            var v = .01 * this.sm.v;
                            0 === v && (v = 1e-8);
                            var g = .5 - .5 * v;
                            c < g ? c = 0 : (c = (c - g) / v) > 1 && (c = 1)
                        }
                        return c * this.a.v
                    },
                    getValue: function(e) {
                        this.iterateDynamicProperties(),
                            this._mdf = e || this._mdf,
                            this._currentTextLength = this.elem.textProperty.currentData.l.length || 0,
                        e && 2 === this.data.r && (this.e.v = this._currentTextLength);
                        var t = 2 === this.data.r ? 1 : 100 / this.data.totalChars
                            , a = this.o.v / t
                            , s = this.s.v / t + a
                            , i = this.e.v / t + a;
                        if (s > i) {
                            var r = s;
                            s = i,
                                i = r
                        }
                        this.finalS = s,
                            this.finalE = i
                    }
                },
                    extendPrototype([DynamicPropertyContainer], s),
                    {
                        getTextSelectorProp: function(e, t, a) {
                            return new s(e,t)
                        }
                    }
            }();
            function TextAnimatorDataProperty(e, t, a) {
                var s = {
                    propType: !1
                }
                    , i = PropertyFactory.getProp
                    , r = t.a;
                this.a = {
                    r: r.r ? i(e, r.r, 0, degToRads, a) : s,
                    rx: r.rx ? i(e, r.rx, 0, degToRads, a) : s,
                    ry: r.ry ? i(e, r.ry, 0, degToRads, a) : s,
                    sk: r.sk ? i(e, r.sk, 0, degToRads, a) : s,
                    sa: r.sa ? i(e, r.sa, 0, degToRads, a) : s,
                    s: r.s ? i(e, r.s, 1, .01, a) : s,
                    a: r.a ? i(e, r.a, 1, 0, a) : s,
                    o: r.o ? i(e, r.o, 0, .01, a) : s,
                    p: r.p ? i(e, r.p, 1, 0, a) : s,
                    sw: r.sw ? i(e, r.sw, 0, 0, a) : s,
                    sc: r.sc ? i(e, r.sc, 1, 0, a) : s,
                    fc: r.fc ? i(e, r.fc, 1, 0, a) : s,
                    fh: r.fh ? i(e, r.fh, 0, 0, a) : s,
                    fs: r.fs ? i(e, r.fs, 0, .01, a) : s,
                    fb: r.fb ? i(e, r.fb, 0, .01, a) : s,
                    t: r.t ? i(e, r.t, 0, 0, a) : s
                },
                    this.s = TextSelectorProp.getTextSelectorProp(e, t.s, a),
                    this.s.t = t.s.t
            }
            function TextAnimatorProperty(e, t, a) {
                this._isFirstFrame = !0,
                    this._hasMaskedPath = !1,
                    this._frameId = -1,
                    this._textData = e,
                    this._renderType = t,
                    this._elem = a,
                    this._animatorsData = createSizedArray(this._textData.a.length),
                    this._pathData = {},
                    this._moreOptions = {
                        alignment: {}
                    },
                    this.renderedLetters = [],
                    this.lettersChangedFlag = !1,
                    this.initDynamicPropertyContainer(a)
            }
            function ITextElement() {}
            TextAnimatorProperty.prototype.searchProperties = function() {
                var e, t, a = this._textData.a.length, s = PropertyFactory.getProp;
                for (e = 0; e < a; e += 1)
                    t = this._textData.a[e],
                        this._animatorsData[e] = new TextAnimatorDataProperty(this._elem,t,this);
                this._textData.p && "m"in this._textData.p ? (this._pathData = {
                    a: s(this._elem, this._textData.p.a, 0, 0, this),
                    f: s(this._elem, this._textData.p.f, 0, 0, this),
                    l: s(this._elem, this._textData.p.l, 0, 0, this),
                    r: s(this._elem, this._textData.p.r, 0, 0, this),
                    p: s(this._elem, this._textData.p.p, 0, 0, this),
                    m: this._elem.maskManager.getMaskProperty(this._textData.p.m)
                },
                    this._hasMaskedPath = !0) : this._hasMaskedPath = !1,
                    this._moreOptions.alignment = s(this._elem, this._textData.m.a, 1, 0, this)
            }
                ,
                TextAnimatorProperty.prototype.getMeasures = function(e, t) {
                    if (this.lettersChangedFlag = t,
                    this._mdf || this._isFirstFrame || t || this._hasMaskedPath && this._pathData.m._mdf) {
                        this._isFirstFrame = !1;
                        var a, s, i, r, o, n, l, c, d, h, p, u, m, f, v, g, y, _, b, k = this._moreOptions.alignment.v, w = this._animatorsData, B = this._textData, C = this.mHelper, x = this._renderType, S = this.renderedLetters.length, E = e.l;
                        if (this._hasMaskedPath) {
                            if (b = this._pathData.m,
                            !this._pathData.n || this._pathData._mdf) {
                                var V, N = b.v;
                                for (this._pathData.r.v && (N = N.reverse()),
                                         o = {
                                             tLength: 0,
                                             segments: []
                                         },
                                         r = N._length - 1,
                                         g = 0,
                                         i = 0; i < r; i += 1)
                                    V = bez.buildBezierData(N.v[i], N.v[i + 1], [N.o[i][0] - N.v[i][0], N.o[i][1] - N.v[i][1]], [N.i[i + 1][0] - N.v[i + 1][0], N.i[i + 1][1] - N.v[i + 1][1]]),
                                        o.tLength += V.segmentLength,
                                        o.segments.push(V),
                                        g += V.segmentLength;
                                i = r,
                                b.v.c && (V = bez.buildBezierData(N.v[i], N.v[0], [N.o[i][0] - N.v[i][0], N.o[i][1] - N.v[i][1]], [N.i[0][0] - N.v[0][0], N.i[0][1] - N.v[0][1]]),
                                    o.tLength += V.segmentLength,
                                    o.segments.push(V),
                                    g += V.segmentLength),
                                    this._pathData.pi = o
                            }
                            if (o = this._pathData.pi,
                                n = this._pathData.f.v,
                                p = 0,
                                h = 1,
                                c = 0,
                                d = !0,
                                f = o.segments,
                            n < 0 && b.v.c)
                                for (o.tLength < Math.abs(n) && (n = -Math.abs(n) % o.tLength),
                                         h = (m = f[p = f.length - 1].points).length - 1; n < 0; )
                                    n += m[h].partialLength,
                                    (h -= 1) < 0 && (h = (m = f[p -= 1].points).length - 1);
                            u = (m = f[p].points)[h - 1],
                                v = (l = m[h]).partialLength
                        }
                        r = E.length,
                            a = 0,
                            s = 0;
                        var P, A, $, T, M, D = 1.2 * e.finalSize * .714, I = !0;
                        $ = w.length;
                        var F, L, R, O, z, G, j, H, U, W, q, J, Y = -1, K = n, X = p, Z = h, Q = -1, ee = "", te = this.defaultPropsArray;
                        if (2 === e.j || 1 === e.j) {
                            var ae = 0
                                , se = 0
                                , ie = 2 === e.j ? -.5 : -1
                                , re = 0
                                , oe = !0;
                            for (i = 0; i < r; i += 1)
                                if (E[i].n) {
                                    for (ae && (ae += se); re < i; )
                                        E[re].animatorJustifyOffset = ae,
                                            re += 1;
                                    ae = 0,
                                        oe = !0
                                } else {
                                    for (A = 0; A < $; A += 1)
                                        (P = w[A].a).t.propType && (oe && 2 === e.j && (se += P.t.v * ie),
                                            (M = w[A].s.getMult(E[i].anIndexes[A], B.a[A].s.totalChars)).length ? ae += P.t.v * M[0] * ie : ae += P.t.v * M * ie);
                                    oe = !1
                                }
                            for (ae && (ae += se); re < i; )
                                E[re].animatorJustifyOffset = ae,
                                    re += 1
                        }
                        for (i = 0; i < r; i += 1) {
                            if (C.reset(),
                                O = 1,
                                E[i].n)
                                a = 0,
                                    s += e.yOffset,
                                    s += I ? 1 : 0,
                                    n = K,
                                    I = !1,
                                this._hasMaskedPath && (h = Z,
                                    u = (m = f[p = X].points)[h - 1],
                                    v = (l = m[h]).partialLength,
                                    c = 0),
                                    ee = "",
                                    q = "",
                                    U = "",
                                    J = "",
                                    te = this.defaultPropsArray;
                            else {
                                if (this._hasMaskedPath) {
                                    if (Q !== E[i].line) {
                                        switch (e.j) {
                                            case 1:
                                                n += g - e.lineWidths[E[i].line];
                                                break;
                                            case 2:
                                                n += (g - e.lineWidths[E[i].line]) / 2
                                        }
                                        Q = E[i].line
                                    }
                                    Y !== E[i].ind && (E[Y] && (n += E[Y].extra),
                                        n += E[i].an / 2,
                                        Y = E[i].ind),
                                        n += k[0] * E[i].an * .005;
                                    var ne = 0;
                                    for (A = 0; A < $; A += 1)
                                        (P = w[A].a).p.propType && ((M = w[A].s.getMult(E[i].anIndexes[A], B.a[A].s.totalChars)).length ? ne += P.p.v[0] * M[0] : ne += P.p.v[0] * M),
                                        P.a.propType && ((M = w[A].s.getMult(E[i].anIndexes[A], B.a[A].s.totalChars)).length ? ne += P.a.v[0] * M[0] : ne += P.a.v[0] * M);
                                    for (d = !0,
                                         this._pathData.a.v && (n = .5 * E[0].an + (g - this._pathData.f.v - .5 * E[0].an - .5 * E[E.length - 1].an) * Y / (r - 1),
                                             n += this._pathData.f.v); d; )
                                        c + v >= n + ne || !m ? (y = (n + ne - c) / l.partialLength,
                                            L = u.point[0] + (l.point[0] - u.point[0]) * y,
                                            R = u.point[1] + (l.point[1] - u.point[1]) * y,
                                            C.translate(-k[0] * E[i].an * .005, -k[1] * D * .01),
                                            d = !1) : m && (c += l.partialLength,
                                        (h += 1) >= m.length && (h = 0,
                                            f[p += 1] ? m = f[p].points : b.v.c ? (h = 0,
                                                m = f[p = 0].points) : (c -= l.partialLength,
                                                m = null)),
                                        m && (u = l,
                                            v = (l = m[h]).partialLength));
                                    F = E[i].an / 2 - E[i].add,
                                        C.translate(-F, 0, 0)
                                } else
                                    F = E[i].an / 2 - E[i].add,
                                        C.translate(-F, 0, 0),
                                        C.translate(-k[0] * E[i].an * .005, -k[1] * D * .01, 0);
                                for (A = 0; A < $; A += 1)
                                    (P = w[A].a).t.propType && (M = w[A].s.getMult(E[i].anIndexes[A], B.a[A].s.totalChars),
                                    0 === a && 0 === e.j || (this._hasMaskedPath ? M.length ? n += P.t.v * M[0] : n += P.t.v * M : M.length ? a += P.t.v * M[0] : a += P.t.v * M));
                                for (e.strokeWidthAnim && (G = e.sw || 0),
                                     e.strokeColorAnim && (z = e.sc ? [e.sc[0], e.sc[1], e.sc[2]] : [0, 0, 0]),
                                     e.fillColorAnim && e.fc && (j = [e.fc[0], e.fc[1], e.fc[2]]),
                                         A = 0; A < $; A += 1)
                                    (P = w[A].a).a.propType && ((M = w[A].s.getMult(E[i].anIndexes[A], B.a[A].s.totalChars)).length ? C.translate(-P.a.v[0] * M[0], -P.a.v[1] * M[1], P.a.v[2] * M[2]) : C.translate(-P.a.v[0] * M, -P.a.v[1] * M, P.a.v[2] * M));
                                for (A = 0; A < $; A += 1)
                                    (P = w[A].a).s.propType && ((M = w[A].s.getMult(E[i].anIndexes[A], B.a[A].s.totalChars)).length ? C.scale(1 + (P.s.v[0] - 1) * M[0], 1 + (P.s.v[1] - 1) * M[1], 1) : C.scale(1 + (P.s.v[0] - 1) * M, 1 + (P.s.v[1] - 1) * M, 1));
                                for (A = 0; A < $; A += 1) {
                                    if (P = w[A].a,
                                        M = w[A].s.getMult(E[i].anIndexes[A], B.a[A].s.totalChars),
                                    P.sk.propType && (M.length ? C.skewFromAxis(-P.sk.v * M[0], P.sa.v * M[1]) : C.skewFromAxis(-P.sk.v * M, P.sa.v * M)),
                                    P.r.propType && (M.length ? C.rotateZ(-P.r.v * M[2]) : C.rotateZ(-P.r.v * M)),
                                    P.ry.propType && (M.length ? C.rotateY(P.ry.v * M[1]) : C.rotateY(P.ry.v * M)),
                                    P.rx.propType && (M.length ? C.rotateX(P.rx.v * M[0]) : C.rotateX(P.rx.v * M)),
                                    P.o.propType && (M.length ? O += (P.o.v * M[0] - O) * M[0] : O += (P.o.v * M - O) * M),
                                    e.strokeWidthAnim && P.sw.propType && (M.length ? G += P.sw.v * M[0] : G += P.sw.v * M),
                                    e.strokeColorAnim && P.sc.propType)
                                        for (H = 0; H < 3; H += 1)
                                            M.length ? z[H] += (P.sc.v[H] - z[H]) * M[0] : z[H] += (P.sc.v[H] - z[H]) * M;
                                    if (e.fillColorAnim && e.fc) {
                                        if (P.fc.propType)
                                            for (H = 0; H < 3; H += 1)
                                                M.length ? j[H] += (P.fc.v[H] - j[H]) * M[0] : j[H] += (P.fc.v[H] - j[H]) * M;
                                        P.fh.propType && (j = M.length ? addHueToRGB(j, P.fh.v * M[0]) : addHueToRGB(j, P.fh.v * M)),
                                        P.fs.propType && (j = M.length ? addSaturationToRGB(j, P.fs.v * M[0]) : addSaturationToRGB(j, P.fs.v * M)),
                                        P.fb.propType && (j = M.length ? addBrightnessToRGB(j, P.fb.v * M[0]) : addBrightnessToRGB(j, P.fb.v * M))
                                    }
                                }
                                for (A = 0; A < $; A += 1)
                                    (P = w[A].a).p.propType && (M = w[A].s.getMult(E[i].anIndexes[A], B.a[A].s.totalChars),
                                        this._hasMaskedPath ? M.length ? C.translate(0, P.p.v[1] * M[0], -P.p.v[2] * M[1]) : C.translate(0, P.p.v[1] * M, -P.p.v[2] * M) : M.length ? C.translate(P.p.v[0] * M[0], P.p.v[1] * M[1], -P.p.v[2] * M[2]) : C.translate(P.p.v[0] * M, P.p.v[1] * M, -P.p.v[2] * M));
                                if (e.strokeWidthAnim && (U = G < 0 ? 0 : G),
                                e.strokeColorAnim && (W = "rgb(" + Math.round(255 * z[0]) + "," + Math.round(255 * z[1]) + "," + Math.round(255 * z[2]) + ")"),
                                e.fillColorAnim && e.fc && (q = "rgb(" + Math.round(255 * j[0]) + "," + Math.round(255 * j[1]) + "," + Math.round(255 * j[2]) + ")"),
                                    this._hasMaskedPath) {
                                    if (C.translate(0, -e.ls),
                                        C.translate(0, k[1] * D * .01 + s, 0),
                                        this._pathData.p.v) {
                                        _ = (l.point[1] - u.point[1]) / (l.point[0] - u.point[0]);
                                        var le = 180 * Math.atan(_) / Math.PI;
                                        l.point[0] < u.point[0] && (le += 180),
                                            C.rotate(-le * Math.PI / 180)
                                    }
                                    C.translate(L, R, 0),
                                        n -= k[0] * E[i].an * .005,
                                    E[i + 1] && Y !== E[i + 1].ind && (n += E[i].an / 2,
                                        n += .001 * e.tr * e.finalSize)
                                } else {
                                    switch (C.translate(a, s, 0),
                                    e.ps && C.translate(e.ps[0], e.ps[1] + e.ascent, 0),
                                        e.j) {
                                        case 1:
                                            C.translate(E[i].animatorJustifyOffset + e.justifyOffset + (e.boxWidth - e.lineWidths[E[i].line]), 0, 0);
                                            break;
                                        case 2:
                                            C.translate(E[i].animatorJustifyOffset + e.justifyOffset + (e.boxWidth - e.lineWidths[E[i].line]) / 2, 0, 0)
                                    }
                                    C.translate(0, -e.ls),
                                        C.translate(F, 0, 0),
                                        C.translate(k[0] * E[i].an * .005, k[1] * D * .01, 0),
                                        a += E[i].l + .001 * e.tr * e.finalSize
                                }
                                "html" === x ? ee = C.toCSS() : "svg" === x ? ee = C.to2dCSS() : te = [C.props[0], C.props[1], C.props[2], C.props[3], C.props[4], C.props[5], C.props[6], C.props[7], C.props[8], C.props[9], C.props[10], C.props[11], C.props[12], C.props[13], C.props[14], C.props[15]],
                                    J = O
                            }
                            S <= i ? (T = new LetterProps(J,U,W,q,ee,te),
                                this.renderedLetters.push(T),
                                S += 1,
                                this.lettersChangedFlag = !0) : (T = this.renderedLetters[i],
                                this.lettersChangedFlag = T.update(J, U, W, q, ee, te) || this.lettersChangedFlag)
                        }
                    }
                }
                ,
                TextAnimatorProperty.prototype.getValue = function() {
                    this._elem.globalData.frameId !== this._frameId && (this._frameId = this._elem.globalData.frameId,
                        this.iterateDynamicProperties())
                }
                ,
                TextAnimatorProperty.prototype.mHelper = new Matrix,
                TextAnimatorProperty.prototype.defaultPropsArray = [],
                extendPrototype([DynamicPropertyContainer], TextAnimatorProperty),
                ITextElement.prototype.initElement = function(e, t, a) {
                    this.lettersChangedFlag = !0,
                        this.initFrame(),
                        this.initBaseData(e, t, a),
                        this.textProperty = new TextProperty(this,e.t,this.dynamicProperties),
                        this.textAnimator = new TextAnimatorProperty(e.t,this.renderType,this),
                        this.initTransform(e, t, a),
                        this.initHierarchy(),
                        this.initRenderable(),
                        this.initRendererElement(),
                        this.createContainerElements(),
                        this.createRenderableComponents(),
                        this.createContent(),
                        this.hide(),
                        this.textAnimator.searchProperties(this.dynamicProperties)
                }
                ,
                ITextElement.prototype.prepareFrame = function(e) {
                    this._mdf = !1,
                        this.prepareRenderableFrame(e),
                        this.prepareProperties(e, this.isInRange)
                }
                ,
                ITextElement.prototype.createPathShape = function(e, t) {
                    var a, s, i = t.length, r = "";
                    for (a = 0; a < i; a += 1)
                        "sh" === t[a].ty && (s = t[a].ks.k,
                            r += buildShapeString(s, s.i.length, !0, e));
                    return r
                }
                ,
                ITextElement.prototype.updateDocumentData = function(e, t) {
                    this.textProperty.updateDocumentData(e, t)
                }
                ,
                ITextElement.prototype.canResizeFont = function(e) {
                    this.textProperty.canResizeFont(e)
                }
                ,
                ITextElement.prototype.setMinimumFontSize = function(e) {
                    this.textProperty.setMinimumFontSize(e)
                }
                ,
                ITextElement.prototype.applyTextPropertiesToMatrix = function(e, t, a, s, i) {
                    switch (e.ps && t.translate(e.ps[0], e.ps[1] + e.ascent, 0),
                        t.translate(0, -e.ls, 0),
                        e.j) {
                        case 1:
                            t.translate(e.justifyOffset + (e.boxWidth - e.lineWidths[a]), 0, 0);
                            break;
                        case 2:
                            t.translate(e.justifyOffset + (e.boxWidth - e.lineWidths[a]) / 2, 0, 0)
                    }
                    t.translate(s, i, 0)
                }
                ,
                ITextElement.prototype.buildColor = function(e) {
                    return "rgb(" + Math.round(255 * e[0]) + "," + Math.round(255 * e[1]) + "," + Math.round(255 * e[2]) + ")"
                }
                ,
                ITextElement.prototype.emptyProp = new LetterProps,
                ITextElement.prototype.destroy = function() {}
                ,
                ITextElement.prototype.validateText = function() {
                    (this.textProperty._mdf || this.textProperty._isFirstFrame) && (this.buildNewText(),
                        this.textProperty._isFirstFrame = !1,
                        this.textProperty._mdf = !1)
                }
            ;
            var emptyShapeData = {
                shapes: []
            };
            function SVGTextLottieElement(e, t, a) {
                this.textSpans = [],
                    this.renderType = "svg",
                    this.initElement(e, t, a)
            }
            function ISolidElement(e, t, a) {
                this.initElement(e, t, a)
            }
            function NullElement(e, t, a) {
                this.initFrame(),
                    this.initBaseData(e, t, a),
                    this.initFrame(),
                    this.initTransform(e, t, a),
                    this.initHierarchy()
            }
            function SVGRendererBase() {}
            function ICompElement() {}
            function SVGCompElement(e, t, a) {
                this.layers = e.layers,
                    this.supports3d = !0,
                    this.completeLayers = !1,
                    this.pendingElements = [],
                    this.elements = this.layers ? createSizedArray(this.layers.length) : [],
                    this.initElement(e, t, a),
                    this.tm = e.tm ? PropertyFactory.getProp(this, e.tm, 0, t.frameRate, this) : {
                        _placeholder: !0
                    }
            }
            function SVGRenderer(e, t) {
                this.animationItem = e,
                    this.layers = null,
                    this.renderedFrame = -1,
                    this.svgElement = createNS("svg");
                var a = "";
                if (t && t.title) {
                    var s = createNS("title")
                        , i = createElementID();
                    s.setAttribute("id", i),
                        s.textContent = t.title,
                        this.svgElement.appendChild(s),
                        a += i
                }
                if (t && t.description) {
                    var r = createNS("desc")
                        , o = createElementID();
                    r.setAttribute("id", o),
                        r.textContent = t.description,
                        this.svgElement.appendChild(r),
                        a += " " + o
                }
                a && this.svgElement.setAttribute("aria-labelledby", a);
                var n = createNS("defs");
                this.svgElement.appendChild(n);
                var l = createNS("g");
                this.svgElement.appendChild(l),
                    this.layerElement = l,
                    this.renderConfig = {
                        preserveAspectRatio: t && t.preserveAspectRatio || "xMidYMid meet",
                        imagePreserveAspectRatio: t && t.imagePreserveAspectRatio || "xMidYMid slice",
                        contentVisibility: t && t.contentVisibility || "visible",
                        progressiveLoad: t && t.progressiveLoad || !1,
                        hideOnTransparent: !(t && !1 === t.hideOnTransparent),
                        viewBoxOnly: t && t.viewBoxOnly || !1,
                        viewBoxSize: t && t.viewBoxSize || !1,
                        className: t && t.className || "",
                        id: t && t.id || "",
                        focusable: t && t.focusable,
                        filterSize: {
                            width: t && t.filterSize && t.filterSize.width || "100%",
                            height: t && t.filterSize && t.filterSize.height || "100%",
                            x: t && t.filterSize && t.filterSize.x || "0%",
                            y: t && t.filterSize && t.filterSize.y || "0%"
                        },
                        width: t && t.width,
                        height: t && t.height,
                        runExpressions: !t || void 0 === t.runExpressions || t.runExpressions
                    },
                    this.globalData = {
                        _mdf: !1,
                        frameNum: -1,
                        defs: n,
                        renderConfig: this.renderConfig
                    },
                    this.elements = [],
                    this.pendingElements = [],
                    this.destroyed = !1,
                    this.rendererType = "svg"
            }
            function ShapeTransformManager() {
                this.sequences = {},
                    this.sequenceList = [],
                    this.transform_key_count = 0
            }
            extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], SVGTextLottieElement),
                SVGTextLottieElement.prototype.createContent = function() {
                    this.data.singleShape && !this.globalData.fontManager.chars && (this.textContainer = createNS("text"))
                }
                ,
                SVGTextLottieElement.prototype.buildTextContents = function(e) {
                    for (var t = 0, a = e.length, s = [], i = ""; t < a; )
                        e[t] === String.fromCharCode(13) || e[t] === String.fromCharCode(3) ? (s.push(i),
                            i = "") : i += e[t],
                            t += 1;
                    return s.push(i),
                        s
                }
                ,
                SVGTextLottieElement.prototype.buildShapeData = function(e, t) {
                    if (e.shapes && e.shapes.length) {
                        var a = e.shapes[0];
                        if (a.it) {
                            var s = a.it[a.it.length - 1];
                            s.s && (s.s.k[0] = t,
                                s.s.k[1] = t)
                        }
                    }
                    return e
                }
                ,
                SVGTextLottieElement.prototype.buildNewText = function() {
                    var e, t;
                    this.addDynamicProperty(this);
                    var a = this.textProperty.currentData;
                    this.renderedLetters = createSizedArray(a ? a.l.length : 0),
                        a.fc ? this.layerElement.setAttribute("fill", this.buildColor(a.fc)) : this.layerElement.setAttribute("fill", "rgba(0,0,0,0)"),
                    a.sc && (this.layerElement.setAttribute("stroke", this.buildColor(a.sc)),
                        this.layerElement.setAttribute("stroke-width", a.sw)),
                        this.layerElement.setAttribute("font-size", a.finalSize);
                    var s = this.globalData.fontManager.getFontByName(a.f);
                    if (s.fClass)
                        this.layerElement.setAttribute("class", s.fClass);
                    else {
                        this.layerElement.setAttribute("font-family", s.fFamily);
                        var i = a.fWeight
                            , r = a.fStyle;
                        this.layerElement.setAttribute("font-style", r),
                            this.layerElement.setAttribute("font-weight", i)
                    }
                    this.layerElement.setAttribute("aria-label", a.t);
                    var o, n = a.l || [], l = !!this.globalData.fontManager.chars;
                    t = n.length;
                    var c = this.mHelper
                        , d = this.data.singleShape
                        , h = 0
                        , p = 0
                        , u = !0
                        , m = .001 * a.tr * a.finalSize;
                    if (!d || l || a.sz) {
                        var f, v = this.textSpans.length;
                        for (e = 0; e < t; e += 1) {
                            if (this.textSpans[e] || (this.textSpans[e] = {
                                span: null,
                                childSpan: null,
                                glyph: null
                            }),
                            !l || !d || 0 === e) {
                                if (o = v > e ? this.textSpans[e].span : createNS(l ? "g" : "text"),
                                v <= e) {
                                    if (o.setAttribute("stroke-linecap", "butt"),
                                        o.setAttribute("stroke-linejoin", "round"),
                                        o.setAttribute("stroke-miterlimit", "4"),
                                        this.textSpans[e].span = o,
                                        l) {
                                        var g = createNS("g");
                                        o.appendChild(g),
                                            this.textSpans[e].childSpan = g
                                    }
                                    this.textSpans[e].span = o,
                                        this.layerElement.appendChild(o)
                                }
                                o.style.display = "inherit"
                            }
                            if (c.reset(),
                            d && (n[e].n && (h = -m,
                                p += a.yOffset,
                                p += u ? 1 : 0,
                                u = !1),
                                this.applyTextPropertiesToMatrix(a, c, n[e].line, h, p),
                                h += n[e].l || 0,
                                h += m),
                                l) {
                                var y;
                                if (1 === (f = this.globalData.fontManager.getCharData(a.finalText[e], s.fStyle, this.globalData.fontManager.getFontByName(a.f).fFamily)).t)
                                    y = new SVGCompElement(f.data,this.globalData,this);
                                else {
                                    var _ = emptyShapeData;
                                    f.data && f.data.shapes && (_ = this.buildShapeData(f.data, a.finalSize)),
                                        y = new SVGShapeElement(_,this.globalData,this)
                                }
                                if (this.textSpans[e].glyph) {
                                    var b = this.textSpans[e].glyph;
                                    this.textSpans[e].childSpan.removeChild(b.layerElement),
                                        b.destroy()
                                }
                                this.textSpans[e].glyph = y,
                                    y._debug = !0,
                                    y.prepareFrame(0),
                                    y.renderFrame(),
                                    this.textSpans[e].childSpan.appendChild(y.layerElement),
                                1 === f.t && this.textSpans[e].childSpan.setAttribute("transform", "scale(" + a.finalSize / 100 + "," + a.finalSize / 100 + ")")
                            } else
                                d && o.setAttribute("transform", "translate(" + c.props[12] + "," + c.props[13] + ")"),
                                    o.textContent = n[e].val,
                                    o.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve")
                        }
                        d && o && o.setAttribute("d", "")
                    } else {
                        var k = this.textContainer
                            , w = "start";
                        switch (a.j) {
                            case 1:
                                w = "end";
                                break;
                            case 2:
                                w = "middle";
                                break;
                            default:
                                w = "start"
                        }
                        k.setAttribute("text-anchor", w),
                            k.setAttribute("letter-spacing", m);
                        var B = this.buildTextContents(a.finalText);
                        for (t = B.length,
                                 p = a.ps ? a.ps[1] + a.ascent : 0,
                                 e = 0; e < t; e += 1)
                            (o = this.textSpans[e].span || createNS("tspan")).textContent = B[e],
                                o.setAttribute("x", 0),
                                o.setAttribute("y", p),
                                o.style.display = "inherit",
                                k.appendChild(o),
                            this.textSpans[e] || (this.textSpans[e] = {
                                span: null,
                                glyph: null
                            }),
                                this.textSpans[e].span = o,
                                p += a.finalLineHeight;
                        this.layerElement.appendChild(k)
                    }
                    for (; e < this.textSpans.length; )
                        this.textSpans[e].span.style.display = "none",
                            e += 1;
                    this._sizeChanged = !0
                }
                ,
                SVGTextLottieElement.prototype.sourceRectAtTime = function() {
                    if (this.prepareFrame(this.comp.renderedFrame - this.data.st),
                        this.renderInnerContent(),
                        this._sizeChanged) {
                        this._sizeChanged = !1;
                        var e = this.layerElement.getBBox();
                        this.bbox = {
                            top: e.y,
                            left: e.x,
                            width: e.width,
                            height: e.height
                        }
                    }
                    return this.bbox
                }
                ,
                SVGTextLottieElement.prototype.getValue = function() {
                    var e, t, a = this.textSpans.length;
                    for (this.renderedFrame = this.comp.renderedFrame,
                             e = 0; e < a; e += 1)
                        (t = this.textSpans[e].glyph) && (t.prepareFrame(this.comp.renderedFrame - this.data.st),
                        t._mdf && (this._mdf = !0))
                }
                ,
                SVGTextLottieElement.prototype.renderInnerContent = function() {
                    if (this.validateText(),
                    (!this.data.singleShape || this._mdf) && (this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag),
                    this.lettersChangedFlag || this.textAnimator.lettersChangedFlag)) {
                        var e, t;
                        this._sizeChanged = !0;
                        var a, s, i, r = this.textAnimator.renderedLetters, o = this.textProperty.currentData.l;
                        for (t = o.length,
                                 e = 0; e < t; e += 1)
                            o[e].n || (a = r[e],
                                s = this.textSpans[e].span,
                            (i = this.textSpans[e].glyph) && i.renderFrame(),
                            a._mdf.m && s.setAttribute("transform", a.m),
                            a._mdf.o && s.setAttribute("opacity", a.o),
                            a._mdf.sw && s.setAttribute("stroke-width", a.sw),
                            a._mdf.sc && s.setAttribute("stroke", a.sc),
                            a._mdf.fc && s.setAttribute("fill", a.fc))
                    }
                }
                ,
                extendPrototype([IImageElement], ISolidElement),
                ISolidElement.prototype.createContent = function() {
                    var e = createNS("rect");
                    e.setAttribute("width", this.data.sw),
                        e.setAttribute("height", this.data.sh),
                        e.setAttribute("fill", this.data.sc),
                        this.layerElement.appendChild(e)
                }
                ,
                NullElement.prototype.prepareFrame = function(e) {
                    this.prepareProperties(e, !0)
                }
                ,
                NullElement.prototype.renderFrame = function() {}
                ,
                NullElement.prototype.getBaseElement = function() {
                    return null
                }
                ,
                NullElement.prototype.destroy = function() {}
                ,
                NullElement.prototype.sourceRectAtTime = function() {}
                ,
                NullElement.prototype.hide = function() {}
                ,
                extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement),
                extendPrototype([BaseRenderer], SVGRendererBase),
                SVGRendererBase.prototype.createNull = function(e) {
                    return new NullElement(e,this.globalData,this)
                }
                ,
                SVGRendererBase.prototype.createShape = function(e) {
                    return new SVGShapeElement(e,this.globalData,this)
                }
                ,
                SVGRendererBase.prototype.createText = function(e) {
                    return new SVGTextLottieElement(e,this.globalData,this)
                }
                ,
                SVGRendererBase.prototype.createImage = function(e) {
                    return new IImageElement(e,this.globalData,this)
                }
                ,
                SVGRendererBase.prototype.createSolid = function(e) {
                    return new ISolidElement(e,this.globalData,this)
                }
                ,
                SVGRendererBase.prototype.configAnimation = function(e) {
                    this.svgElement.setAttribute("xmlns", "http://www.w3.org/2000/svg"),
                        this.svgElement.setAttribute("xmlns:xlink", "http://www.w3.org/1999/xlink"),
                        this.renderConfig.viewBoxSize ? this.svgElement.setAttribute("viewBox", this.renderConfig.viewBoxSize) : this.svgElement.setAttribute("viewBox", "0 0 " + e.w + " " + e.h),
                    this.renderConfig.viewBoxOnly || (this.svgElement.setAttribute("width", e.w),
                        this.svgElement.setAttribute("height", e.h),
                        this.svgElement.style.width = "100%",
                        this.svgElement.style.height = "100%",
                        this.svgElement.style.transform = "translate3d(0,0,0)",
                        this.svgElement.style.contentVisibility = this.renderConfig.contentVisibility),
                    this.renderConfig.width && this.svgElement.setAttribute("width", this.renderConfig.width),
                    this.renderConfig.height && this.svgElement.setAttribute("height", this.renderConfig.height),
                    this.renderConfig.className && this.svgElement.setAttribute("class", this.renderConfig.className),
                    this.renderConfig.id && this.svgElement.setAttribute("id", this.renderConfig.id),
                    void 0 !== this.renderConfig.focusable && this.svgElement.setAttribute("focusable", this.renderConfig.focusable),
                        this.svgElement.setAttribute("preserveAspectRatio", this.renderConfig.preserveAspectRatio),
                        this.animationItem.wrapper.appendChild(this.svgElement);
                    var t = this.globalData.defs;
                    this.setupGlobalData(e, t),
                        this.globalData.progressiveLoad = this.renderConfig.progressiveLoad,
                        this.data = e;
                    var a = createNS("clipPath")
                        , s = createNS("rect");
                    s.setAttribute("width", e.w),
                        s.setAttribute("height", e.h),
                        s.setAttribute("x", 0),
                        s.setAttribute("y", 0);
                    var i = createElementID();
                    a.setAttribute("id", i),
                        a.appendChild(s),
                        this.layerElement.setAttribute("clip-path", "url(" + getLocationHref() + "#" + i + ")"),
                        t.appendChild(a),
                        this.layers = e.layers,
                        this.elements = createSizedArray(e.layers.length)
                }
                ,
                SVGRendererBase.prototype.destroy = function() {
                    var e;
                    this.animationItem.wrapper && (this.animationItem.wrapper.innerText = ""),
                        this.layerElement = null,
                        this.globalData.defs = null;
                    var t = this.layers ? this.layers.length : 0;
                    for (e = 0; e < t; e += 1)
                        this.elements[e] && this.elements[e].destroy && this.elements[e].destroy();
                    this.elements.length = 0,
                        this.destroyed = !0,
                        this.animationItem = null
                }
                ,
                SVGRendererBase.prototype.updateContainerSize = function() {}
                ,
                SVGRendererBase.prototype.findIndexByInd = function(e) {
                    var t = 0
                        , a = this.layers.length;
                    for (t = 0; t < a; t += 1)
                        if (this.layers[t].ind === e)
                            return t;
                    return -1
                }
                ,
                SVGRendererBase.prototype.buildItem = function(e) {
                    var t = this.elements;
                    if (!t[e] && 99 !== this.layers[e].ty) {
                        t[e] = !0;
                        var a = this.createItem(this.layers[e]);
                        if (t[e] = a,
                        getExpressionsPlugin() && (0 === this.layers[e].ty && this.globalData.projectInterface.registerComposition(a),
                            a.initExpressions()),
                            this.appendElementInPos(a, e),
                            this.layers[e].tt) {
                            var s = "tp"in this.layers[e] ? this.findIndexByInd(this.layers[e].tp) : e - 1;
                            if (-1 === s)
                                return;
                            if (this.elements[s] && !0 !== this.elements[s]) {
                                var i = t[s].getMatte(this.layers[e].tt);
                                a.setMatte(i)
                            } else
                                this.buildItem(s),
                                    this.addPendingElement(a)
                        }
                    }
                }
                ,
                SVGRendererBase.prototype.checkPendingElements = function() {
                    for (; this.pendingElements.length; ) {
                        var e = this.pendingElements.pop();
                        if (e.checkParenting(),
                            e.data.tt)
                            for (var t = 0, a = this.elements.length; t < a; ) {
                                if (this.elements[t] === e) {
                                    var s = "tp"in e.data ? this.findIndexByInd(e.data.tp) : t - 1
                                        , i = this.elements[s].getMatte(this.layers[t].tt);
                                    e.setMatte(i);
                                    break
                                }
                                t += 1
                            }
                    }
                }
                ,
                SVGRendererBase.prototype.renderFrame = function(e) {
                    if (this.renderedFrame !== e && !this.destroyed) {
                        var t;
                        null === e ? e = this.renderedFrame : this.renderedFrame = e,
                            this.globalData.frameNum = e,
                            this.globalData.frameId += 1,
                            this.globalData.projectInterface.currentFrame = e,
                            this.globalData._mdf = !1;
                        var a = this.layers.length;
                        for (this.completeLayers || this.checkLayers(e),
                                 t = a - 1; t >= 0; t -= 1)
                            (this.completeLayers || this.elements[t]) && this.elements[t].prepareFrame(e - this.layers[t].st);
                        if (this.globalData._mdf)
                            for (t = 0; t < a; t += 1)
                                (this.completeLayers || this.elements[t]) && this.elements[t].renderFrame()
                    }
                }
                ,
                SVGRendererBase.prototype.appendElementInPos = function(e, t) {
                    var a = e.getBaseElement();
                    if (a) {
                        for (var s, i = 0; i < t; )
                            this.elements[i] && !0 !== this.elements[i] && this.elements[i].getBaseElement() && (s = this.elements[i].getBaseElement()),
                                i += 1;
                        s ? this.layerElement.insertBefore(a, s) : this.layerElement.appendChild(a)
                    }
                }
                ,
                SVGRendererBase.prototype.hide = function() {
                    this.layerElement.style.display = "none"
                }
                ,
                SVGRendererBase.prototype.show = function() {
                    this.layerElement.style.display = "block"
                }
                ,
                extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement),
                ICompElement.prototype.initElement = function(e, t, a) {
                    this.initFrame(),
                        this.initBaseData(e, t, a),
                        this.initTransform(e, t, a),
                        this.initRenderable(),
                        this.initHierarchy(),
                        this.initRendererElement(),
                        this.createContainerElements(),
                        this.createRenderableComponents(),
                    !this.data.xt && t.progressiveLoad || this.buildAllItems(),
                        this.hide()
                }
                ,
                ICompElement.prototype.prepareFrame = function(e) {
                    if (this._mdf = !1,
                        this.prepareRenderableFrame(e),
                        this.prepareProperties(e, this.isInRange),
                    this.isInRange || this.data.xt) {
                        if (this.tm._placeholder)
                            this.renderedFrame = e / this.data.sr;
                        else {
                            var t = this.tm.v;
                            t === this.data.op && (t = this.data.op - 1),
                                this.renderedFrame = t
                        }
                        var a, s = this.elements.length;
                        for (this.completeLayers || this.checkLayers(this.renderedFrame),
                                 a = s - 1; a >= 0; a -= 1)
                            (this.completeLayers || this.elements[a]) && (this.elements[a].prepareFrame(this.renderedFrame - this.layers[a].st),
                            this.elements[a]._mdf && (this._mdf = !0))
                    }
                }
                ,
                ICompElement.prototype.renderInnerContent = function() {
                    var e, t = this.layers.length;
                    for (e = 0; e < t; e += 1)
                        (this.completeLayers || this.elements[e]) && this.elements[e].renderFrame()
                }
                ,
                ICompElement.prototype.setElements = function(e) {
                    this.elements = e
                }
                ,
                ICompElement.prototype.getElements = function() {
                    return this.elements
                }
                ,
                ICompElement.prototype.destroyElements = function() {
                    var e, t = this.layers.length;
                    for (e = 0; e < t; e += 1)
                        this.elements[e] && this.elements[e].destroy()
                }
                ,
                ICompElement.prototype.destroy = function() {
                    this.destroyElements(),
                        this.destroyBaseElement()
                }
                ,
                extendPrototype([SVGRendererBase, ICompElement, SVGBaseElement], SVGCompElement),
                SVGCompElement.prototype.createComp = function(e) {
                    return new SVGCompElement(e,this.globalData,this)
                }
                ,
                extendPrototype([SVGRendererBase], SVGRenderer),
                SVGRenderer.prototype.createComp = function(e) {
                    return new SVGCompElement(e,this.globalData,this)
                }
                ,
                ShapeTransformManager.prototype = {
                    addTransformSequence: function(e) {
                        var t, a = e.length, s = "_";
                        for (t = 0; t < a; t += 1)
                            s += e[t].transform.key + "_";
                        var i = this.sequences[s];
                        return i || (i = {
                            transforms: [].concat(e),
                            finalTransform: new Matrix,
                            _mdf: !1
                        },
                            this.sequences[s] = i,
                            this.sequenceList.push(i)),
                            i
                    },
                    processSequence: function(e, t) {
                        for (var a = 0, s = e.transforms.length, i = t; a < s && !t; ) {
                            if (e.transforms[a].transform.mProps._mdf) {
                                i = !0;
                                break
                            }
                            a += 1
                        }
                        if (i)
                            for (e.finalTransform.reset(),
                                     a = s - 1; a >= 0; a -= 1)
                                e.finalTransform.multiply(e.transforms[a].transform.mProps.v);
                        e._mdf = i
                    },
                    processSequences: function(e) {
                        var t, a = this.sequenceList.length;
                        for (t = 0; t < a; t += 1)
                            this.processSequence(this.sequenceList[t], e)
                    },
                    getNewKey: function() {
                        return this.transform_key_count += 1,
                        "_" + this.transform_key_count
                    }
                };
            var lumaLoader = function() {
                var e = "__lottie_element_luma_buffer"
                    , t = null
                    , a = null
                    , s = null;
                function i() {
                    var i, r, o;
                    t || (i = createNS("svg"),
                        r = createNS("filter"),
                        o = createNS("feColorMatrix"),
                        r.setAttribute("id", e),
                        o.setAttribute("type", "matrix"),
                        o.setAttribute("color-interpolation-filters", "sRGB"),
                        o.setAttribute("values", "0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0"),
                        r.appendChild(o),
                        i.appendChild(r),
                        i.setAttribute("id", e + "_svg"),
                    featureSupport.svgLumaHidden && (i.style.display = "none"),
                        s = i,
                        document.body.appendChild(s),
                        t = createTag("canvas"),
                        (a = t.getContext("2d")).filter = "url(#" + e + ")",
                        a.fillStyle = "rgba(0,0,0,0)",
                        a.fillRect(0, 0, 1, 1))
                }
                return {
                    load: i,
                    get: function(s) {
                        return t || i(),
                            t.width = s.width,
                            t.height = s.height,
                            a.filter = "url(#" + e + ")",
                            t
                    }
                }
            };
            function createCanvas(e, t) {
                if (featureSupport.offscreenCanvas)
                    return new OffscreenCanvas(e,t);
                var a = createTag("canvas");
                return a.width = e,
                    a.height = t,
                    a
            }
            var assetLoader = {
                loadLumaCanvas: lumaLoader.load,
                getLumaCanvas: lumaLoader.get,
                createCanvas: createCanvas
            }
                , registeredEffects = {};
            function CVEffects(e) {
                var t, a, s = e.data.ef ? e.data.ef.length : 0;
                for (this.filters = [],
                         t = 0; t < s; t += 1) {
                    a = null;
                    var i = e.data.ef[t].ty;
                    registeredEffects[i] && (a = new (0,
                        registeredEffects[i].effect)(e.effectsManager.effectElements[t],e)),
                    a && this.filters.push(a)
                }
                this.filters.length && e.addRenderableComponent(this)
            }
            function registerEffect(e, t) {
                registeredEffects[e] = {
                    effect: t
                }
            }
            function CVMaskElement(e, t) {
                var a;
                this.data = e,
                    this.element = t,
                    this.masksProperties = this.data.masksProperties || [],
                    this.viewData = createSizedArray(this.masksProperties.length);
                var s = this.masksProperties.length
                    , i = !1;
                for (a = 0; a < s; a += 1)
                    "n" !== this.masksProperties[a].mode && (i = !0),
                        this.viewData[a] = ShapePropertyFactory.getShapeProp(this.element, this.masksProperties[a], 3);
                this.hasMasks = i,
                i && this.element.addRenderableComponent(this)
            }
            function CVBaseElement() {}
            CVEffects.prototype.renderFrame = function(e) {
                var t, a = this.filters.length;
                for (t = 0; t < a; t += 1)
                    this.filters[t].renderFrame(e)
            }
                ,
                CVEffects.prototype.getEffects = function(e) {
                    var t, a = this.filters.length, s = [];
                    for (t = 0; t < a; t += 1)
                        this.filters[t].type === e && s.push(this.filters[t]);
                    return s
                }
                ,
                CVMaskElement.prototype.renderFrame = function() {
                    if (this.hasMasks) {
                        var e, t, a, s, i = this.element.finalTransform.mat, r = this.element.canvasContext, o = this.masksProperties.length;
                        for (r.beginPath(),
                                 e = 0; e < o; e += 1)
                            if ("n" !== this.masksProperties[e].mode) {
                                var n;
                                this.masksProperties[e].inv && (r.moveTo(0, 0),
                                    r.lineTo(this.element.globalData.compSize.w, 0),
                                    r.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h),
                                    r.lineTo(0, this.element.globalData.compSize.h),
                                    r.lineTo(0, 0)),
                                    s = this.viewData[e].v,
                                    t = i.applyToPointArray(s.v[0][0], s.v[0][1], 0),
                                    r.moveTo(t[0], t[1]);
                                var l = s._length;
                                for (n = 1; n < l; n += 1)
                                    a = i.applyToTriplePoints(s.o[n - 1], s.i[n], s.v[n]),
                                        r.bezierCurveTo(a[0], a[1], a[2], a[3], a[4], a[5]);
                                a = i.applyToTriplePoints(s.o[n - 1], s.i[0], s.v[0]),
                                    r.bezierCurveTo(a[0], a[1], a[2], a[3], a[4], a[5])
                            }
                        this.element.globalData.renderer.save(!0),
                            r.clip()
                    }
                }
                ,
                CVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty,
                CVMaskElement.prototype.destroy = function() {
                    this.element = null
                }
            ;
            var operationsMap = {
                1: "source-in",
                2: "source-out",
                3: "source-in",
                4: "source-out"
            };
            function CVShapeData(e, t, a, s) {
                this.styledShapes = [],
                    this.tr = [0, 0, 0, 0, 0, 0];
                var i, r = 4;
                "rc" === t.ty ? r = 5 : "el" === t.ty ? r = 6 : "sr" === t.ty && (r = 7),
                    this.sh = ShapePropertyFactory.getShapeProp(e, t, r, e);
                var o, n = a.length;
                for (i = 0; i < n; i += 1)
                    a[i].closed || (o = {
                        transforms: s.addTransformSequence(a[i].transforms),
                        trNodes: []
                    },
                        this.styledShapes.push(o),
                        a[i].elements.push(o))
            }
            function CVShapeElement(e, t, a) {
                this.shapes = [],
                    this.shapesData = e.shapes,
                    this.stylesList = [],
                    this.itemsData = [],
                    this.prevViewData = [],
                    this.shapeModifiers = [],
                    this.processedElements = [],
                    this.transformsManager = new ShapeTransformManager,
                    this.initElement(e, t, a)
            }
            function CVTextElement(e, t, a) {
                this.textSpans = [],
                    this.yOffset = 0,
                    this.fillColorAnim = !1,
                    this.strokeColorAnim = !1,
                    this.strokeWidthAnim = !1,
                    this.stroke = !1,
                    this.fill = !1,
                    this.justifyOffset = 0,
                    this.currentRender = null,
                    this.renderType = "canvas",
                    this.values = {
                        fill: "rgba(0,0,0,0)",
                        stroke: "rgba(0,0,0,0)",
                        sWidth: 0,
                        fValue: ""
                    },
                    this.initElement(e, t, a)
            }
            function CVImageElement(e, t, a) {
                this.assetData = t.getAssetData(e.refId),
                    this.img = t.imageLoader.getAsset(this.assetData),
                    this.initElement(e, t, a)
            }
            function CVSolidElement(e, t, a) {
                this.initElement(e, t, a)
            }
            function CanvasRendererBase() {}
            function CanvasContext() {
                this.opacity = -1,
                    this.transform = createTypedArray("float32", 16),
                    this.fillStyle = "",
                    this.strokeStyle = "",
                    this.lineWidth = "",
                    this.lineCap = "",
                    this.lineJoin = "",
                    this.miterLimit = "",
                    this.id = Math.random()
            }
            function CVContextData() {
                var e;
                for (this.stack = [],
                         this.cArrPos = 0,
                         this.cTr = new Matrix,
                         e = 0; e < 15; e += 1) {
                    var t = new CanvasContext;
                    this.stack[e] = t
                }
                this._length = 15,
                    this.nativeContext = null,
                    this.transformMat = new Matrix,
                    this.currentOpacity = 1,
                    this.currentFillStyle = "",
                    this.appliedFillStyle = "",
                    this.currentStrokeStyle = "",
                    this.appliedStrokeStyle = "",
                    this.currentLineWidth = "",
                    this.appliedLineWidth = "",
                    this.currentLineCap = "",
                    this.appliedLineCap = "",
                    this.currentLineJoin = "",
                    this.appliedLineJoin = "",
                    this.appliedMiterLimit = "",
                    this.currentMiterLimit = ""
            }
            function CVCompElement(e, t, a) {
                this.completeLayers = !1,
                    this.layers = e.layers,
                    this.pendingElements = [],
                    this.elements = createSizedArray(this.layers.length),
                    this.initElement(e, t, a),
                    this.tm = e.tm ? PropertyFactory.getProp(this, e.tm, 0, t.frameRate, this) : {
                        _placeholder: !0
                    }
            }
            function CanvasRenderer(e, t) {
                this.animationItem = e,
                    this.renderConfig = {
                        clearCanvas: !t || void 0 === t.clearCanvas || t.clearCanvas,
                        context: t && t.context || null,
                        progressiveLoad: t && t.progressiveLoad || !1,
                        preserveAspectRatio: t && t.preserveAspectRatio || "xMidYMid meet",
                        imagePreserveAspectRatio: t && t.imagePreserveAspectRatio || "xMidYMid slice",
                        contentVisibility: t && t.contentVisibility || "visible",
                        className: t && t.className || "",
                        id: t && t.id || "",
                        runExpressions: !t || void 0 === t.runExpressions || t.runExpressions
                    },
                    this.renderConfig.dpr = t && t.dpr || 1,
                this.animationItem.wrapper && (this.renderConfig.dpr = t && t.dpr || window.devicePixelRatio || 1),
                    this.renderedFrame = -1,
                    this.globalData = {
                        frameNum: -1,
                        _mdf: !1,
                        renderConfig: this.renderConfig,
                        currentGlobalAlpha: -1
                    },
                    this.contextData = new CVContextData,
                    this.elements = [],
                    this.pendingElements = [],
                    this.transformMat = new Matrix,
                    this.completeLayers = !1,
                    this.rendererType = "canvas",
                this.renderConfig.clearCanvas && (this.ctxTransform = this.contextData.transform.bind(this.contextData),
                    this.ctxOpacity = this.contextData.opacity.bind(this.contextData),
                    this.ctxFillStyle = this.contextData.fillStyle.bind(this.contextData),
                    this.ctxStrokeStyle = this.contextData.strokeStyle.bind(this.contextData),
                    this.ctxLineWidth = this.contextData.lineWidth.bind(this.contextData),
                    this.ctxLineCap = this.contextData.lineCap.bind(this.contextData),
                    this.ctxLineJoin = this.contextData.lineJoin.bind(this.contextData),
                    this.ctxMiterLimit = this.contextData.miterLimit.bind(this.contextData),
                    this.ctxFill = this.contextData.fill.bind(this.contextData),
                    this.ctxFillRect = this.contextData.fillRect.bind(this.contextData),
                    this.ctxStroke = this.contextData.stroke.bind(this.contextData),
                    this.save = this.contextData.save.bind(this.contextData))
            }
            function HBaseElement() {}
            function HSolidElement(e, t, a) {
                this.initElement(e, t, a)
            }
            function HShapeElement(e, t, a) {
                this.shapes = [],
                    this.shapesData = e.shapes,
                    this.stylesList = [],
                    this.shapeModifiers = [],
                    this.itemsData = [],
                    this.processedElements = [],
                    this.animatedContents = [],
                    this.shapesContainer = createNS("g"),
                    this.initElement(e, t, a),
                    this.prevViewData = [],
                    this.currentBBox = {
                        x: 999999,
                        y: -999999,
                        h: 0,
                        w: 0
                    }
            }
            function HTextElement(e, t, a) {
                this.textSpans = [],
                    this.textPaths = [],
                    this.currentBBox = {
                        x: 999999,
                        y: -999999,
                        h: 0,
                        w: 0
                    },
                    this.renderType = "svg",
                    this.isMasked = !1,
                    this.initElement(e, t, a)
            }
            function HCameraElement(e, t, a) {
                this.initFrame(),
                    this.initBaseData(e, t, a),
                    this.initHierarchy();
                var s = PropertyFactory.getProp;
                if (this.pe = s(this, e.pe, 0, 0, this),
                    e.ks.p.s ? (this.px = s(this, e.ks.p.x, 1, 0, this),
                        this.py = s(this, e.ks.p.y, 1, 0, this),
                        this.pz = s(this, e.ks.p.z, 1, 0, this)) : this.p = s(this, e.ks.p, 1, 0, this),
                e.ks.a && (this.a = s(this, e.ks.a, 1, 0, this)),
                e.ks.or.k.length && e.ks.or.k[0].to) {
                    var i, r = e.ks.or.k.length;
                    for (i = 0; i < r; i += 1)
                        e.ks.or.k[i].to = null,
                            e.ks.or.k[i].ti = null
                }
                this.or = s(this, e.ks.or, 1, degToRads, this),
                    this.or.sh = !0,
                    this.rx = s(this, e.ks.rx, 0, degToRads, this),
                    this.ry = s(this, e.ks.ry, 0, degToRads, this),
                    this.rz = s(this, e.ks.rz, 0, degToRads, this),
                    this.mat = new Matrix,
                    this._prevMat = new Matrix,
                    this._isFirstFrame = !0,
                    this.finalTransform = {
                        mProp: this
                    }
            }
            function HImageElement(e, t, a) {
                this.assetData = t.getAssetData(e.refId),
                    this.initElement(e, t, a)
            }
            function HybridRendererBase(e, t) {
                this.animationItem = e,
                    this.layers = null,
                    this.renderedFrame = -1,
                    this.renderConfig = {
                        className: t && t.className || "",
                        imagePreserveAspectRatio: t && t.imagePreserveAspectRatio || "xMidYMid slice",
                        hideOnTransparent: !(t && !1 === t.hideOnTransparent),
                        filterSize: {
                            width: t && t.filterSize && t.filterSize.width || "400%",
                            height: t && t.filterSize && t.filterSize.height || "400%",
                            x: t && t.filterSize && t.filterSize.x || "-100%",
                            y: t && t.filterSize && t.filterSize.y || "-100%"
                        }
                    },
                    this.globalData = {
                        _mdf: !1,
                        frameNum: -1,
                        renderConfig: this.renderConfig
                    },
                    this.pendingElements = [],
                    this.elements = [],
                    this.threeDElements = [],
                    this.destroyed = !1,
                    this.camera = null,
                    this.supports3d = !0,
                    this.rendererType = "html"
            }
            function HCompElement(e, t, a) {
                this.layers = e.layers,
                    this.supports3d = !e.hasMask,
                    this.completeLayers = !1,
                    this.pendingElements = [],
                    this.elements = this.layers ? createSizedArray(this.layers.length) : [],
                    this.initElement(e, t, a),
                    this.tm = e.tm ? PropertyFactory.getProp(this, e.tm, 0, t.frameRate, this) : {
                        _placeholder: !0
                    }
            }
            function HybridRenderer(e, t) {
                this.animationItem = e,
                    this.layers = null,
                    this.renderedFrame = -1,
                    this.renderConfig = {
                        className: t && t.className || "",
                        imagePreserveAspectRatio: t && t.imagePreserveAspectRatio || "xMidYMid slice",
                        hideOnTransparent: !(t && !1 === t.hideOnTransparent),
                        filterSize: {
                            width: t && t.filterSize && t.filterSize.width || "400%",
                            height: t && t.filterSize && t.filterSize.height || "400%",
                            x: t && t.filterSize && t.filterSize.x || "-100%",
                            y: t && t.filterSize && t.filterSize.y || "-100%"
                        },
                        runExpressions: !t || void 0 === t.runExpressions || t.runExpressions
                    },
                    this.globalData = {
                        _mdf: !1,
                        frameNum: -1,
                        renderConfig: this.renderConfig
                    },
                    this.pendingElements = [],
                    this.elements = [],
                    this.threeDElements = [],
                    this.destroyed = !1,
                    this.camera = null,
                    this.supports3d = !0,
                    this.rendererType = "html"
            }
            CVBaseElement.prototype = {
                createElements: function() {},
                initRendererElement: function() {},
                createContainerElements: function() {
                    if (this.data.tt >= 1) {
                        this.buffers = [];
                        var e = this.globalData.canvasContext
                            , t = assetLoader.createCanvas(e.canvas.width, e.canvas.height);
                        this.buffers.push(t);
                        var a = assetLoader.createCanvas(e.canvas.width, e.canvas.height);
                        this.buffers.push(a),
                        this.data.tt >= 3 && !document._isProxy && assetLoader.loadLumaCanvas()
                    }
                    this.canvasContext = this.globalData.canvasContext,
                        this.transformCanvas = this.globalData.transformCanvas,
                        this.renderableEffectsManager = new CVEffects(this),
                        this.searchEffectTransforms()
                },
                createContent: function() {},
                setBlendMode: function() {
                    var e = this.globalData;
                    if (e.blendMode !== this.data.bm) {
                        e.blendMode = this.data.bm;
                        var t = getBlendMode(this.data.bm);
                        e.canvasContext.globalCompositeOperation = t
                    }
                },
                createRenderableComponents: function() {
                    this.maskManager = new CVMaskElement(this.data,this),
                        this.transformEffects = this.renderableEffectsManager.getEffects(effectTypes.TRANSFORM_EFFECT)
                },
                hideElement: function() {
                    this.hidden || this.isInRange && !this.isTransparent || (this.hidden = !0)
                },
                showElement: function() {
                    this.isInRange && !this.isTransparent && (this.hidden = !1,
                        this._isFirstFrame = !0,
                        this.maskManager._isFirstFrame = !0)
                },
                clearCanvas: function(e) {
                    e.clearRect(this.transformCanvas.tx, this.transformCanvas.ty, this.transformCanvas.w * this.transformCanvas.sx, this.transformCanvas.h * this.transformCanvas.sy)
                },
                prepareLayer: function() {
                    if (this.data.tt >= 1) {
                        var e = this.buffers[0].getContext("2d");
                        this.clearCanvas(e),
                            e.drawImage(this.canvasContext.canvas, 0, 0),
                            this.currentTransform = this.canvasContext.getTransform(),
                            this.canvasContext.setTransform(1, 0, 0, 1, 0, 0),
                            this.clearCanvas(this.canvasContext),
                            this.canvasContext.setTransform(this.currentTransform)
                    }
                },
                exitLayer: function() {
                    if (this.data.tt >= 1) {
                        var e = this.buffers[1]
                            , t = e.getContext("2d");
                        if (this.clearCanvas(t),
                            t.drawImage(this.canvasContext.canvas, 0, 0),
                            this.canvasContext.setTransform(1, 0, 0, 1, 0, 0),
                            this.clearCanvas(this.canvasContext),
                            this.canvasContext.setTransform(this.currentTransform),
                            this.comp.getElementById("tp"in this.data ? this.data.tp : this.data.ind - 1).renderFrame(!0),
                            this.canvasContext.setTransform(1, 0, 0, 1, 0, 0),
                        this.data.tt >= 3 && !document._isProxy) {
                            var a = assetLoader.getLumaCanvas(this.canvasContext.canvas);
                            a.getContext("2d").drawImage(this.canvasContext.canvas, 0, 0),
                                this.clearCanvas(this.canvasContext),
                                this.canvasContext.drawImage(a, 0, 0)
                        }
                        this.canvasContext.globalCompositeOperation = operationsMap[this.data.tt],
                            this.canvasContext.drawImage(e, 0, 0),
                            this.canvasContext.globalCompositeOperation = "destination-over",
                            this.canvasContext.drawImage(this.buffers[0], 0, 0),
                            this.canvasContext.setTransform(this.currentTransform),
                            this.canvasContext.globalCompositeOperation = "source-over"
                    }
                },
                renderFrame: function(e) {
                    if (!this.hidden && !this.data.hd && (1 !== this.data.td || e)) {
                        this.renderTransform(),
                            this.renderRenderable(),
                            this.renderLocalTransform(),
                            this.setBlendMode();
                        var t = 0 === this.data.ty;
                        this.prepareLayer(),
                            this.globalData.renderer.save(t),
                            this.globalData.renderer.ctxTransform(this.finalTransform.localMat.props),
                            this.globalData.renderer.ctxOpacity(this.finalTransform.localOpacity),
                            this.renderInnerContent(),
                            this.globalData.renderer.restore(t),
                            this.exitLayer(),
                        this.maskManager.hasMasks && this.globalData.renderer.restore(!0),
                        this._isFirstFrame && (this._isFirstFrame = !1)
                    }
                },
                destroy: function() {
                    this.canvasContext = null,
                        this.data = null,
                        this.globalData = null,
                        this.maskManager.destroy()
                },
                mHelper: new Matrix
            },
                CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement,
                CVBaseElement.prototype.show = CVBaseElement.prototype.showElement,
                CVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated,
                extendPrototype([BaseElement, TransformElement, CVBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableElement], CVShapeElement),
                CVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement,
                CVShapeElement.prototype.transformHelper = {
                    opacity: 1,
                    _opMdf: !1
                },
                CVShapeElement.prototype.dashResetter = [],
                CVShapeElement.prototype.createContent = function() {
                    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, !0, [])
                }
                ,
                CVShapeElement.prototype.createStyleElement = function(e, t) {
                    var a = {
                        data: e,
                        type: e.ty,
                        preTransforms: this.transformsManager.addTransformSequence(t),
                        transforms: [],
                        elements: [],
                        closed: !0 === e.hd
                    }
                        , s = {};
                    if ("fl" === e.ty || "st" === e.ty ? (s.c = PropertyFactory.getProp(this, e.c, 1, 255, this),
                    s.c.k || (a.co = "rgb(" + bmFloor(s.c.v[0]) + "," + bmFloor(s.c.v[1]) + "," + bmFloor(s.c.v[2]) + ")")) : "gf" !== e.ty && "gs" !== e.ty || (s.s = PropertyFactory.getProp(this, e.s, 1, null, this),
                        s.e = PropertyFactory.getProp(this, e.e, 1, null, this),
                        s.h = PropertyFactory.getProp(this, e.h || {
                            k: 0
                        }, 0, .01, this),
                        s.a = PropertyFactory.getProp(this, e.a || {
                            k: 0
                        }, 0, degToRads, this),
                        s.g = new GradientProperty(this,e.g,this)),
                        s.o = PropertyFactory.getProp(this, e.o, 0, .01, this),
                    "st" === e.ty || "gs" === e.ty) {
                        if (a.lc = lineCapEnum[e.lc || 2],
                            a.lj = lineJoinEnum[e.lj || 2],
                        1 == e.lj && (a.ml = e.ml),
                            s.w = PropertyFactory.getProp(this, e.w, 0, null, this),
                        s.w.k || (a.wi = s.w.v),
                            e.d) {
                            var i = new DashProperty(this,e.d,"canvas",this);
                            s.d = i,
                            s.d.k || (a.da = s.d.dashArray,
                                a.do = s.d.dashoffset[0])
                        }
                    } else
                        a.r = 2 === e.r ? "evenodd" : "nonzero";
                    return this.stylesList.push(a),
                        s.style = a,
                        s
                }
                ,
                CVShapeElement.prototype.createGroupElement = function() {
                    return {
                        it: [],
                        prevViewData: []
                    }
                }
                ,
                CVShapeElement.prototype.createTransformElement = function(e) {
                    return {
                        transform: {
                            opacity: 1,
                            _opMdf: !1,
                            key: this.transformsManager.getNewKey(),
                            op: PropertyFactory.getProp(this, e.o, 0, .01, this),
                            mProps: TransformPropertyFactory.getTransformProperty(this, e, this)
                        }
                    }
                }
                ,
                CVShapeElement.prototype.createShapeElement = function(e) {
                    var t = new CVShapeData(this,e,this.stylesList,this.transformsManager);
                    return this.shapes.push(t),
                        this.addShapeToModifiers(t),
                        t
                }
                ,
                CVShapeElement.prototype.reloadShapes = function() {
                    var e;
                    this._isFirstFrame = !0;
                    var t = this.itemsData.length;
                    for (e = 0; e < t; e += 1)
                        this.prevViewData[e] = this.itemsData[e];
                    for (this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, !0, []),
                             t = this.dynamicProperties.length,
                             e = 0; e < t; e += 1)
                        this.dynamicProperties[e].getValue();
                    this.renderModifiers(),
                        this.transformsManager.processSequences(this._isFirstFrame)
                }
                ,
                CVShapeElement.prototype.addTransformToStyleList = function(e) {
                    var t, a = this.stylesList.length;
                    for (t = 0; t < a; t += 1)
                        this.stylesList[t].closed || this.stylesList[t].transforms.push(e)
                }
                ,
                CVShapeElement.prototype.removeTransformFromStyleList = function() {
                    var e, t = this.stylesList.length;
                    for (e = 0; e < t; e += 1)
                        this.stylesList[e].closed || this.stylesList[e].transforms.pop()
                }
                ,
                CVShapeElement.prototype.closeStyles = function(e) {
                    var t, a = e.length;
                    for (t = 0; t < a; t += 1)
                        e[t].closed = !0
                }
                ,
                CVShapeElement.prototype.searchShapes = function(e, t, a, s, i) {
                    var r, o, n, l, c, d, h = e.length - 1, p = [], u = [], m = [].concat(i);
                    for (r = h; r >= 0; r -= 1) {
                        if ((l = this.searchProcessedElement(e[r])) ? t[r] = a[l - 1] : e[r]._shouldRender = s,
                        "fl" === e[r].ty || "st" === e[r].ty || "gf" === e[r].ty || "gs" === e[r].ty)
                            l ? t[r].style.closed = !1 : t[r] = this.createStyleElement(e[r], m),
                                p.push(t[r].style);
                        else if ("gr" === e[r].ty) {
                            if (l)
                                for (n = t[r].it.length,
                                         o = 0; o < n; o += 1)
                                    t[r].prevViewData[o] = t[r].it[o];
                            else
                                t[r] = this.createGroupElement(e[r]);
                            this.searchShapes(e[r].it, t[r].it, t[r].prevViewData, s, m)
                        } else
                            "tr" === e[r].ty ? (l || (d = this.createTransformElement(e[r]),
                                t[r] = d),
                                m.push(t[r]),
                                this.addTransformToStyleList(t[r])) : "sh" === e[r].ty || "rc" === e[r].ty || "el" === e[r].ty || "sr" === e[r].ty ? l || (t[r] = this.createShapeElement(e[r])) : "tm" === e[r].ty || "rd" === e[r].ty || "pb" === e[r].ty || "zz" === e[r].ty || "op" === e[r].ty ? (l ? (c = t[r]).closed = !1 : ((c = ShapeModifiers.getModifier(e[r].ty)).init(this, e[r]),
                                t[r] = c,
                                this.shapeModifiers.push(c)),
                                u.push(c)) : "rp" === e[r].ty && (l ? (c = t[r]).closed = !0 : (c = ShapeModifiers.getModifier(e[r].ty),
                                t[r] = c,
                                c.init(this, e, r, t),
                                this.shapeModifiers.push(c),
                                s = !1),
                                u.push(c));
                        this.addProcessedElement(e[r], r + 1)
                    }
                    for (this.removeTransformFromStyleList(),
                             this.closeStyles(p),
                             h = u.length,
                             r = 0; r < h; r += 1)
                        u[r].closed = !0
                }
                ,
                CVShapeElement.prototype.renderInnerContent = function() {
                    this.transformHelper.opacity = 1,
                        this.transformHelper._opMdf = !1,
                        this.renderModifiers(),
                        this.transformsManager.processSequences(this._isFirstFrame),
                        this.renderShape(this.transformHelper, this.shapesData, this.itemsData, !0)
                }
                ,
                CVShapeElement.prototype.renderShapeTransform = function(e, t) {
                    (e._opMdf || t.op._mdf || this._isFirstFrame) && (t.opacity = e.opacity,
                        t.opacity *= t.op.v,
                        t._opMdf = !0)
                }
                ,
                CVShapeElement.prototype.drawLayer = function() {
                    var e, t, a, s, i, r, o, n, l, c = this.stylesList.length, d = this.globalData.renderer, h = this.globalData.canvasContext;
                    for (e = 0; e < c; e += 1)
                        if (("st" !== (n = (l = this.stylesList[e]).type) && "gs" !== n || 0 !== l.wi) && l.data._shouldRender && 0 !== l.coOp && 0 !== this.globalData.currentGlobalAlpha) {
                            for (d.save(),
                                     r = l.elements,
                                     "st" === n || "gs" === n ? (d.ctxStrokeStyle("st" === n ? l.co : l.grd),
                                         d.ctxLineWidth(l.wi),
                                         d.ctxLineCap(l.lc),
                                         d.ctxLineJoin(l.lj),
                                         d.ctxMiterLimit(l.ml || 0)) : d.ctxFillStyle("fl" === n ? l.co : l.grd),
                                     d.ctxOpacity(l.coOp),
                                 "st" !== n && "gs" !== n && h.beginPath(),
                                     d.ctxTransform(l.preTransforms.finalTransform.props),
                                     a = r.length,
                                     t = 0; t < a; t += 1) {
                                for ("st" !== n && "gs" !== n || (h.beginPath(),
                                l.da && (h.setLineDash(l.da),
                                    h.lineDashOffset = l.do)),
                                         i = (o = r[t].trNodes).length,
                                         s = 0; s < i; s += 1)
                                    "m" === o[s].t ? h.moveTo(o[s].p[0], o[s].p[1]) : "c" === o[s].t ? h.bezierCurveTo(o[s].pts[0], o[s].pts[1], o[s].pts[2], o[s].pts[3], o[s].pts[4], o[s].pts[5]) : h.closePath();
                                "st" !== n && "gs" !== n || (d.ctxStroke(),
                                l.da && h.setLineDash(this.dashResetter))
                            }
                            "st" !== n && "gs" !== n && this.globalData.renderer.ctxFill(l.r),
                                d.restore()
                        }
                }
                ,
                CVShapeElement.prototype.renderShape = function(e, t, a, s) {
                    var i, r;
                    for (r = e,
                             i = t.length - 1; i >= 0; i -= 1)
                        "tr" === t[i].ty ? (r = a[i].transform,
                            this.renderShapeTransform(e, r)) : "sh" === t[i].ty || "el" === t[i].ty || "rc" === t[i].ty || "sr" === t[i].ty ? this.renderPath(t[i], a[i]) : "fl" === t[i].ty ? this.renderFill(t[i], a[i], r) : "st" === t[i].ty ? this.renderStroke(t[i], a[i], r) : "gf" === t[i].ty || "gs" === t[i].ty ? this.renderGradientFill(t[i], a[i], r) : "gr" === t[i].ty ? this.renderShape(r, t[i].it, a[i].it) : t[i].ty;
                    s && this.drawLayer()
                }
                ,
                CVShapeElement.prototype.renderStyledShape = function(e, t) {
                    if (this._isFirstFrame || t._mdf || e.transforms._mdf) {
                        var a, s, i, r = e.trNodes, o = t.paths, n = o._length;
                        r.length = 0;
                        var l = e.transforms.finalTransform;
                        for (i = 0; i < n; i += 1) {
                            var c = o.shapes[i];
                            if (c && c.v) {
                                for (s = c._length,
                                         a = 1; a < s; a += 1)
                                    1 === a && r.push({
                                        t: "m",
                                        p: l.applyToPointArray(c.v[0][0], c.v[0][1], 0)
                                    }),
                                        r.push({
                                            t: "c",
                                            pts: l.applyToTriplePoints(c.o[a - 1], c.i[a], c.v[a])
                                        });
                                1 === s && r.push({
                                    t: "m",
                                    p: l.applyToPointArray(c.v[0][0], c.v[0][1], 0)
                                }),
                                c.c && s && (r.push({
                                    t: "c",
                                    pts: l.applyToTriplePoints(c.o[a - 1], c.i[0], c.v[0])
                                }),
                                    r.push({
                                        t: "z"
                                    }))
                            }
                        }
                        e.trNodes = r
                    }
                }
                ,
                CVShapeElement.prototype.renderPath = function(e, t) {
                    if (!0 !== e.hd && e._shouldRender) {
                        var a, s = t.styledShapes.length;
                        for (a = 0; a < s; a += 1)
                            this.renderStyledShape(t.styledShapes[a], t.sh)
                    }
                }
                ,
                CVShapeElement.prototype.renderFill = function(e, t, a) {
                    var s = t.style;
                    (t.c._mdf || this._isFirstFrame) && (s.co = "rgb(" + bmFloor(t.c.v[0]) + "," + bmFloor(t.c.v[1]) + "," + bmFloor(t.c.v[2]) + ")"),
                    (t.o._mdf || a._opMdf || this._isFirstFrame) && (s.coOp = t.o.v * a.opacity)
                }
                ,
                CVShapeElement.prototype.renderGradientFill = function(e, t, a) {
                    var s, i = t.style;
                    if (!i.grd || t.g._mdf || t.s._mdf || t.e._mdf || 1 !== e.t && (t.h._mdf || t.a._mdf)) {
                        var r, o = this.globalData.canvasContext, n = t.s.v, l = t.e.v;
                        if (1 === e.t)
                            s = o.createLinearGradient(n[0], n[1], l[0], l[1]);
                        else {
                            var c = Math.sqrt(Math.pow(n[0] - l[0], 2) + Math.pow(n[1] - l[1], 2))
                                , d = Math.atan2(l[1] - n[1], l[0] - n[0])
                                , h = t.h.v;
                            h >= 1 ? h = .99 : h <= -1 && (h = -.99);
                            var p = c * h
                                , u = Math.cos(d + t.a.v) * p + n[0]
                                , m = Math.sin(d + t.a.v) * p + n[1];
                            s = o.createRadialGradient(u, m, 0, n[0], n[1], c)
                        }
                        var f = e.g.p
                            , v = t.g.c
                            , g = 1;
                        for (r = 0; r < f; r += 1)
                            t.g._hasOpacity && t.g._collapsable && (g = t.g.o[2 * r + 1]),
                                s.addColorStop(v[4 * r] / 100, "rgba(" + v[4 * r + 1] + "," + v[4 * r + 2] + "," + v[4 * r + 3] + "," + g + ")");
                        i.grd = s
                    }
                    i.coOp = t.o.v * a.opacity
                }
                ,
                CVShapeElement.prototype.renderStroke = function(e, t, a) {
                    var s = t.style
                        , i = t.d;
                    i && (i._mdf || this._isFirstFrame) && (s.da = i.dashArray,
                        s.do = i.dashoffset[0]),
                    (t.c._mdf || this._isFirstFrame) && (s.co = "rgb(" + bmFloor(t.c.v[0]) + "," + bmFloor(t.c.v[1]) + "," + bmFloor(t.c.v[2]) + ")"),
                    (t.o._mdf || a._opMdf || this._isFirstFrame) && (s.coOp = t.o.v * a.opacity),
                    (t.w._mdf || this._isFirstFrame) && (s.wi = t.w.v)
                }
                ,
                CVShapeElement.prototype.destroy = function() {
                    this.shapesData = null,
                        this.globalData = null,
                        this.canvasContext = null,
                        this.stylesList.length = 0,
                        this.itemsData.length = 0
                }
                ,
                extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement, ITextElement], CVTextElement),
                CVTextElement.prototype.tHelper = createTag("canvas").getContext("2d"),
                CVTextElement.prototype.buildNewText = function() {
                    var e = this.textProperty.currentData;
                    this.renderedLetters = createSizedArray(e.l ? e.l.length : 0);
                    var t = !1;
                    e.fc ? (t = !0,
                        this.values.fill = this.buildColor(e.fc)) : this.values.fill = "rgba(0,0,0,0)",
                        this.fill = t;
                    var a = !1;
                    e.sc && (a = !0,
                        this.values.stroke = this.buildColor(e.sc),
                        this.values.sWidth = e.sw);
                    var s, i, r, o, n, l, c, d, h, p, u, m, f = this.globalData.fontManager.getFontByName(e.f), v = e.l, g = this.mHelper;
                    this.stroke = a,
                        this.values.fValue = e.finalSize + "px " + this.globalData.fontManager.getFontByName(e.f).fFamily,
                        i = e.finalText.length;
                    var y = this.data.singleShape
                        , _ = .001 * e.tr * e.finalSize
                        , b = 0
                        , k = 0
                        , w = !0
                        , B = 0;
                    for (s = 0; s < i; s += 1) {
                        o = (r = this.globalData.fontManager.getCharData(e.finalText[s], f.fStyle, this.globalData.fontManager.getFontByName(e.f).fFamily)) && r.data || {},
                            g.reset(),
                        y && v[s].n && (b = -_,
                            k += e.yOffset,
                            k += w ? 1 : 0,
                            w = !1),
                            h = (c = o.shapes ? o.shapes[0].it : []).length,
                            g.scale(e.finalSize / 100, e.finalSize / 100),
                        y && this.applyTextPropertiesToMatrix(e, g, v[s].line, b, k),
                            u = createSizedArray(h - 1);
                        var C = 0;
                        for (d = 0; d < h; d += 1)
                            if ("sh" === c[d].ty) {
                                for (l = c[d].ks.k.i.length,
                                         p = c[d].ks.k,
                                         m = [],
                                         n = 1; n < l; n += 1)
                                    1 === n && m.push(g.applyToX(p.v[0][0], p.v[0][1], 0), g.applyToY(p.v[0][0], p.v[0][1], 0)),
                                        m.push(g.applyToX(p.o[n - 1][0], p.o[n - 1][1], 0), g.applyToY(p.o[n - 1][0], p.o[n - 1][1], 0), g.applyToX(p.i[n][0], p.i[n][1], 0), g.applyToY(p.i[n][0], p.i[n][1], 0), g.applyToX(p.v[n][0], p.v[n][1], 0), g.applyToY(p.v[n][0], p.v[n][1], 0));
                                m.push(g.applyToX(p.o[n - 1][0], p.o[n - 1][1], 0), g.applyToY(p.o[n - 1][0], p.o[n - 1][1], 0), g.applyToX(p.i[0][0], p.i[0][1], 0), g.applyToY(p.i[0][0], p.i[0][1], 0), g.applyToX(p.v[0][0], p.v[0][1], 0), g.applyToY(p.v[0][0], p.v[0][1], 0)),
                                    u[C] = m,
                                    C += 1
                            }
                        y && (b += v[s].l,
                            b += _),
                            this.textSpans[B] ? this.textSpans[B].elem = u : this.textSpans[B] = {
                                elem: u
                            },
                            B += 1
                    }
                }
                ,
                CVTextElement.prototype.renderInnerContent = function() {
                    var e, t, a, s, i, r;
                    this.validateText(),
                        this.canvasContext.font = this.values.fValue,
                        this.globalData.renderer.ctxLineCap("butt"),
                        this.globalData.renderer.ctxLineJoin("miter"),
                        this.globalData.renderer.ctxMiterLimit(4),
                    this.data.singleShape || this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);
                    var o, n = this.textAnimator.renderedLetters, l = this.textProperty.currentData.l;
                    t = l.length;
                    var c, d, h = null, p = null, u = null, m = this.globalData.renderer;
                    for (e = 0; e < t; e += 1)
                        if (!l[e].n) {
                            if ((o = n[e]) && (m.save(),
                                m.ctxTransform(o.p),
                                m.ctxOpacity(o.o)),
                                this.fill) {
                                for (o && o.fc ? h !== o.fc && (m.ctxFillStyle(o.fc),
                                    h = o.fc) : h !== this.values.fill && (h = this.values.fill,
                                    m.ctxFillStyle(this.values.fill)),
                                         s = (c = this.textSpans[e].elem).length,
                                         this.globalData.canvasContext.beginPath(),
                                         a = 0; a < s; a += 1)
                                    for (r = (d = c[a]).length,
                                             this.globalData.canvasContext.moveTo(d[0], d[1]),
                                             i = 2; i < r; i += 6)
                                        this.globalData.canvasContext.bezierCurveTo(d[i], d[i + 1], d[i + 2], d[i + 3], d[i + 4], d[i + 5]);
                                this.globalData.canvasContext.closePath(),
                                    m.ctxFill()
                            }
                            if (this.stroke) {
                                for (o && o.sw ? u !== o.sw && (u = o.sw,
                                    m.ctxLineWidth(o.sw)) : u !== this.values.sWidth && (u = this.values.sWidth,
                                    m.ctxLineWidth(this.values.sWidth)),
                                         o && o.sc ? p !== o.sc && (p = o.sc,
                                             m.ctxStrokeStyle(o.sc)) : p !== this.values.stroke && (p = this.values.stroke,
                                             m.ctxStrokeStyle(this.values.stroke)),
                                         s = (c = this.textSpans[e].elem).length,
                                         this.globalData.canvasContext.beginPath(),
                                         a = 0; a < s; a += 1)
                                    for (r = (d = c[a]).length,
                                             this.globalData.canvasContext.moveTo(d[0], d[1]),
                                             i = 2; i < r; i += 6)
                                        this.globalData.canvasContext.bezierCurveTo(d[i], d[i + 1], d[i + 2], d[i + 3], d[i + 4], d[i + 5]);
                                this.globalData.canvasContext.closePath(),
                                    m.ctxStroke()
                            }
                            o && this.globalData.renderer.restore()
                        }
                }
                ,
                extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement),
                CVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement,
                CVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame,
                CVImageElement.prototype.createContent = function() {
                    if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {
                        var e = createTag("canvas");
                        e.width = this.assetData.w,
                            e.height = this.assetData.h;
                        var t, a, s = e.getContext("2d"), i = this.img.width, r = this.img.height, o = i / r, n = this.assetData.w / this.assetData.h, l = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;
                        o > n && "xMidYMid slice" === l || o < n && "xMidYMid slice" !== l ? t = (a = r) * n : a = (t = i) / n,
                            s.drawImage(this.img, (i - t) / 2, (r - a) / 2, t, a, 0, 0, this.assetData.w, this.assetData.h),
                            this.img = e
                    }
                }
                ,
                CVImageElement.prototype.renderInnerContent = function() {
                    this.canvasContext.drawImage(this.img, 0, 0)
                }
                ,
                CVImageElement.prototype.destroy = function() {
                    this.img = null
                }
                ,
                extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement),
                CVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement,
                CVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame,
                CVSolidElement.prototype.renderInnerContent = function() {
                    this.globalData.renderer.ctxFillStyle(this.data.sc),
                        this.globalData.renderer.ctxFillRect(0, 0, this.data.sw, this.data.sh)
                }
                ,
                extendPrototype([BaseRenderer], CanvasRendererBase),
                CanvasRendererBase.prototype.createShape = function(e) {
                    return new CVShapeElement(e,this.globalData,this)
                }
                ,
                CanvasRendererBase.prototype.createText = function(e) {
                    return new CVTextElement(e,this.globalData,this)
                }
                ,
                CanvasRendererBase.prototype.createImage = function(e) {
                    return new CVImageElement(e,this.globalData,this)
                }
                ,
                CanvasRendererBase.prototype.createSolid = function(e) {
                    return new CVSolidElement(e,this.globalData,this)
                }
                ,
                CanvasRendererBase.prototype.createNull = SVGRenderer.prototype.createNull,
                CanvasRendererBase.prototype.ctxTransform = function(e) {
                    1 === e[0] && 0 === e[1] && 0 === e[4] && 1 === e[5] && 0 === e[12] && 0 === e[13] || this.canvasContext.transform(e[0], e[1], e[4], e[5], e[12], e[13])
                }
                ,
                CanvasRendererBase.prototype.ctxOpacity = function(e) {
                    this.canvasContext.globalAlpha *= e < 0 ? 0 : e
                }
                ,
                CanvasRendererBase.prototype.ctxFillStyle = function(e) {
                    this.canvasContext.fillStyle = e
                }
                ,
                CanvasRendererBase.prototype.ctxStrokeStyle = function(e) {
                    this.canvasContext.strokeStyle = e
                }
                ,
                CanvasRendererBase.prototype.ctxLineWidth = function(e) {
                    this.canvasContext.lineWidth = e
                }
                ,
                CanvasRendererBase.prototype.ctxLineCap = function(e) {
                    this.canvasContext.lineCap = e
                }
                ,
                CanvasRendererBase.prototype.ctxLineJoin = function(e) {
                    this.canvasContext.lineJoin = e
                }
                ,
                CanvasRendererBase.prototype.ctxMiterLimit = function(e) {
                    this.canvasContext.miterLimit = e
                }
                ,
                CanvasRendererBase.prototype.ctxFill = function(e) {
                    this.canvasContext.fill(e)
                }
                ,
                CanvasRendererBase.prototype.ctxFillRect = function(e, t, a, s) {
                    this.canvasContext.fillRect(e, t, a, s)
                }
                ,
                CanvasRendererBase.prototype.ctxStroke = function() {
                    this.canvasContext.stroke()
                }
                ,
                CanvasRendererBase.prototype.reset = function() {
                    this.renderConfig.clearCanvas ? this.contextData.reset() : this.canvasContext.restore()
                }
                ,
                CanvasRendererBase.prototype.save = function() {
                    this.canvasContext.save()
                }
                ,
                CanvasRendererBase.prototype.restore = function(e) {
                    this.renderConfig.clearCanvas ? (e && (this.globalData.blendMode = "source-over"),
                        this.contextData.restore(e)) : this.canvasContext.restore()
                }
                ,
                CanvasRendererBase.prototype.configAnimation = function(e) {
                    if (this.animationItem.wrapper) {
                        this.animationItem.container = createTag("canvas");
                        var t = this.animationItem.container.style;
                        t.width = "100%",
                            t.height = "100%";
                        var a = "0px 0px 0px";
                        t.transformOrigin = a,
                            t.mozTransformOrigin = a,
                            t.webkitTransformOrigin = a,
                            t["-webkit-transform"] = a,
                            t.contentVisibility = this.renderConfig.contentVisibility,
                            this.animationItem.wrapper.appendChild(this.animationItem.container),
                            this.canvasContext = this.animationItem.container.getContext("2d"),
                        this.renderConfig.className && this.animationItem.container.setAttribute("class", this.renderConfig.className),
                        this.renderConfig.id && this.animationItem.container.setAttribute("id", this.renderConfig.id)
                    } else
                        this.canvasContext = this.renderConfig.context;
                    this.contextData.setContext(this.canvasContext),
                        this.data = e,
                        this.layers = e.layers,
                        this.transformCanvas = {
                            w: e.w,
                            h: e.h,
                            sx: 0,
                            sy: 0,
                            tx: 0,
                            ty: 0
                        },
                        this.setupGlobalData(e, document.body),
                        this.globalData.canvasContext = this.canvasContext,
                        this.globalData.renderer = this,
                        this.globalData.isDashed = !1,
                        this.globalData.progressiveLoad = this.renderConfig.progressiveLoad,
                        this.globalData.transformCanvas = this.transformCanvas,
                        this.elements = createSizedArray(e.layers.length),
                        this.updateContainerSize()
                }
                ,
                CanvasRendererBase.prototype.updateContainerSize = function(e, t) {
                    var a, s, i, r;
                    if (this.reset(),
                        e ? (a = e,
                            s = t,
                            this.canvasContext.canvas.width = a,
                            this.canvasContext.canvas.height = s) : (this.animationItem.wrapper && this.animationItem.container ? (a = this.animationItem.wrapper.offsetWidth,
                            s = this.animationItem.wrapper.offsetHeight) : (a = this.canvasContext.canvas.width,
                            s = this.canvasContext.canvas.height),
                            this.canvasContext.canvas.width = a * this.renderConfig.dpr,
                            this.canvasContext.canvas.height = s * this.renderConfig.dpr),
                    -1 !== this.renderConfig.preserveAspectRatio.indexOf("meet") || -1 !== this.renderConfig.preserveAspectRatio.indexOf("slice")) {
                        var o = this.renderConfig.preserveAspectRatio.split(" ")
                            , n = o[1] || "meet"
                            , l = o[0] || "xMidYMid"
                            , c = l.substr(0, 4)
                            , d = l.substr(4);
                        i = a / s,
                            (r = this.transformCanvas.w / this.transformCanvas.h) > i && "meet" === n || r < i && "slice" === n ? (this.transformCanvas.sx = a / (this.transformCanvas.w / this.renderConfig.dpr),
                                this.transformCanvas.sy = a / (this.transformCanvas.w / this.renderConfig.dpr)) : (this.transformCanvas.sx = s / (this.transformCanvas.h / this.renderConfig.dpr),
                                this.transformCanvas.sy = s / (this.transformCanvas.h / this.renderConfig.dpr)),
                            this.transformCanvas.tx = "xMid" === c && (r < i && "meet" === n || r > i && "slice" === n) ? (a - this.transformCanvas.w * (s / this.transformCanvas.h)) / 2 * this.renderConfig.dpr : "xMax" === c && (r < i && "meet" === n || r > i && "slice" === n) ? (a - this.transformCanvas.w * (s / this.transformCanvas.h)) * this.renderConfig.dpr : 0,
                            this.transformCanvas.ty = "YMid" === d && (r > i && "meet" === n || r < i && "slice" === n) ? (s - this.transformCanvas.h * (a / this.transformCanvas.w)) / 2 * this.renderConfig.dpr : "YMax" === d && (r > i && "meet" === n || r < i && "slice" === n) ? (s - this.transformCanvas.h * (a / this.transformCanvas.w)) * this.renderConfig.dpr : 0
                    } else
                        "none" === this.renderConfig.preserveAspectRatio ? (this.transformCanvas.sx = a / (this.transformCanvas.w / this.renderConfig.dpr),
                            this.transformCanvas.sy = s / (this.transformCanvas.h / this.renderConfig.dpr),
                            this.transformCanvas.tx = 0,
                            this.transformCanvas.ty = 0) : (this.transformCanvas.sx = this.renderConfig.dpr,
                            this.transformCanvas.sy = this.renderConfig.dpr,
                            this.transformCanvas.tx = 0,
                            this.transformCanvas.ty = 0);
                    this.transformCanvas.props = [this.transformCanvas.sx, 0, 0, 0, 0, this.transformCanvas.sy, 0, 0, 0, 0, 1, 0, this.transformCanvas.tx, this.transformCanvas.ty, 0, 1],
                        this.ctxTransform(this.transformCanvas.props),
                        this.canvasContext.beginPath(),
                        this.canvasContext.rect(0, 0, this.transformCanvas.w, this.transformCanvas.h),
                        this.canvasContext.closePath(),
                        this.canvasContext.clip(),
                        this.renderFrame(this.renderedFrame, !0)
                }
                ,
                CanvasRendererBase.prototype.destroy = function() {
                    var e;
                    for (this.renderConfig.clearCanvas && this.animationItem.wrapper && (this.animationItem.wrapper.innerText = ""),
                             e = (this.layers ? this.layers.length : 0) - 1; e >= 0; e -= 1)
                        this.elements[e] && this.elements[e].destroy && this.elements[e].destroy();
                    this.elements.length = 0,
                        this.globalData.canvasContext = null,
                        this.animationItem.container = null,
                        this.destroyed = !0
                }
                ,
                CanvasRendererBase.prototype.renderFrame = function(e, t) {
                    if ((this.renderedFrame !== e || !0 !== this.renderConfig.clearCanvas || t) && !this.destroyed && -1 !== e) {
                        var a;
                        this.renderedFrame = e,
                            this.globalData.frameNum = e - this.animationItem._isFirstFrame,
                            this.globalData.frameId += 1,
                            this.globalData._mdf = !this.renderConfig.clearCanvas || t,
                            this.globalData.projectInterface.currentFrame = e;
                        var s = this.layers.length;
                        for (this.completeLayers || this.checkLayers(e),
                                 a = s - 1; a >= 0; a -= 1)
                            (this.completeLayers || this.elements[a]) && this.elements[a].prepareFrame(e - this.layers[a].st);
                        if (this.globalData._mdf) {
                            for (!0 === this.renderConfig.clearCanvas ? this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h) : this.save(),
                                     a = s - 1; a >= 0; a -= 1)
                                (this.completeLayers || this.elements[a]) && this.elements[a].renderFrame();
                            !0 !== this.renderConfig.clearCanvas && this.restore()
                        }
                    }
                }
                ,
                CanvasRendererBase.prototype.buildItem = function(e) {
                    var t = this.elements;
                    if (!t[e] && 99 !== this.layers[e].ty) {
                        var a = this.createItem(this.layers[e], this, this.globalData);
                        t[e] = a,
                            a.initExpressions()
                    }
                }
                ,
                CanvasRendererBase.prototype.checkPendingElements = function() {
                    for (; this.pendingElements.length; )
                        this.pendingElements.pop().checkParenting()
                }
                ,
                CanvasRendererBase.prototype.hide = function() {
                    this.animationItem.container.style.display = "none"
                }
                ,
                CanvasRendererBase.prototype.show = function() {
                    this.animationItem.container.style.display = "block"
                }
                ,
                CVContextData.prototype.duplicate = function() {
                    var e = 2 * this._length
                        , t = 0;
                    for (t = this._length; t < e; t += 1)
                        this.stack[t] = new CanvasContext;
                    this._length = e
                }
                ,
                CVContextData.prototype.reset = function() {
                    this.cArrPos = 0,
                        this.cTr.reset(),
                        this.stack[this.cArrPos].opacity = 1
                }
                ,
                CVContextData.prototype.restore = function(e) {
                    this.cArrPos -= 1;
                    var t, a = this.stack[this.cArrPos], s = a.transform, i = this.cTr.props;
                    for (t = 0; t < 16; t += 1)
                        i[t] = s[t];
                    if (e) {
                        this.nativeContext.restore();
                        var r = this.stack[this.cArrPos + 1];
                        this.appliedFillStyle = r.fillStyle,
                            this.appliedStrokeStyle = r.strokeStyle,
                            this.appliedLineWidth = r.lineWidth,
                            this.appliedLineCap = r.lineCap,
                            this.appliedLineJoin = r.lineJoin,
                            this.appliedMiterLimit = r.miterLimit
                    }
                    this.nativeContext.setTransform(s[0], s[1], s[4], s[5], s[12], s[13]),
                    (e || -1 !== a.opacity && this.currentOpacity !== a.opacity) && (this.nativeContext.globalAlpha = a.opacity,
                        this.currentOpacity = a.opacity),
                        this.currentFillStyle = a.fillStyle,
                        this.currentStrokeStyle = a.strokeStyle,
                        this.currentLineWidth = a.lineWidth,
                        this.currentLineCap = a.lineCap,
                        this.currentLineJoin = a.lineJoin,
                        this.currentMiterLimit = a.miterLimit
                }
                ,
                CVContextData.prototype.save = function(e) {
                    e && this.nativeContext.save();
                    var t = this.cTr.props;
                    this._length <= this.cArrPos && this.duplicate();
                    var a, s = this.stack[this.cArrPos];
                    for (a = 0; a < 16; a += 1)
                        s.transform[a] = t[a];
                    this.cArrPos += 1;
                    var i = this.stack[this.cArrPos];
                    i.opacity = s.opacity,
                        i.fillStyle = s.fillStyle,
                        i.strokeStyle = s.strokeStyle,
                        i.lineWidth = s.lineWidth,
                        i.lineCap = s.lineCap,
                        i.lineJoin = s.lineJoin,
                        i.miterLimit = s.miterLimit
                }
                ,
                CVContextData.prototype.setOpacity = function(e) {
                    this.stack[this.cArrPos].opacity = e
                }
                ,
                CVContextData.prototype.setContext = function(e) {
                    this.nativeContext = e
                }
                ,
                CVContextData.prototype.fillStyle = function(e) {
                    this.stack[this.cArrPos].fillStyle !== e && (this.currentFillStyle = e,
                        this.stack[this.cArrPos].fillStyle = e)
                }
                ,
                CVContextData.prototype.strokeStyle = function(e) {
                    this.stack[this.cArrPos].strokeStyle !== e && (this.currentStrokeStyle = e,
                        this.stack[this.cArrPos].strokeStyle = e)
                }
                ,
                CVContextData.prototype.lineWidth = function(e) {
                    this.stack[this.cArrPos].lineWidth !== e && (this.currentLineWidth = e,
                        this.stack[this.cArrPos].lineWidth = e)
                }
                ,
                CVContextData.prototype.lineCap = function(e) {
                    this.stack[this.cArrPos].lineCap !== e && (this.currentLineCap = e,
                        this.stack[this.cArrPos].lineCap = e)
                }
                ,
                CVContextData.prototype.lineJoin = function(e) {
                    this.stack[this.cArrPos].lineJoin !== e && (this.currentLineJoin = e,
                        this.stack[this.cArrPos].lineJoin = e)
                }
                ,
                CVContextData.prototype.miterLimit = function(e) {
                    this.stack[this.cArrPos].miterLimit !== e && (this.currentMiterLimit = e,
                        this.stack[this.cArrPos].miterLimit = e)
                }
                ,
                CVContextData.prototype.transform = function(e) {
                    this.transformMat.cloneFromProps(e);
                    var t = this.cTr;
                    this.transformMat.multiply(t),
                        t.cloneFromProps(this.transformMat.props);
                    var a = t.props;
                    this.nativeContext.setTransform(a[0], a[1], a[4], a[5], a[12], a[13])
                }
                ,
                CVContextData.prototype.opacity = function(e) {
                    var t = this.stack[this.cArrPos].opacity;
                    t *= e < 0 ? 0 : e,
                    this.stack[this.cArrPos].opacity !== t && (this.currentOpacity !== e && (this.nativeContext.globalAlpha = e,
                        this.currentOpacity = e),
                        this.stack[this.cArrPos].opacity = t)
                }
                ,
                CVContextData.prototype.fill = function(e) {
                    this.appliedFillStyle !== this.currentFillStyle && (this.appliedFillStyle = this.currentFillStyle,
                        this.nativeContext.fillStyle = this.appliedFillStyle),
                        this.nativeContext.fill(e)
                }
                ,
                CVContextData.prototype.fillRect = function(e, t, a, s) {
                    this.appliedFillStyle !== this.currentFillStyle && (this.appliedFillStyle = this.currentFillStyle,
                        this.nativeContext.fillStyle = this.appliedFillStyle),
                        this.nativeContext.fillRect(e, t, a, s)
                }
                ,
                CVContextData.prototype.stroke = function() {
                    this.appliedStrokeStyle !== this.currentStrokeStyle && (this.appliedStrokeStyle = this.currentStrokeStyle,
                        this.nativeContext.strokeStyle = this.appliedStrokeStyle),
                    this.appliedLineWidth !== this.currentLineWidth && (this.appliedLineWidth = this.currentLineWidth,
                        this.nativeContext.lineWidth = this.appliedLineWidth),
                    this.appliedLineCap !== this.currentLineCap && (this.appliedLineCap = this.currentLineCap,
                        this.nativeContext.lineCap = this.appliedLineCap),
                    this.appliedLineJoin !== this.currentLineJoin && (this.appliedLineJoin = this.currentLineJoin,
                        this.nativeContext.lineJoin = this.appliedLineJoin),
                    this.appliedMiterLimit !== this.currentMiterLimit && (this.appliedMiterLimit = this.currentMiterLimit,
                        this.nativeContext.miterLimit = this.appliedMiterLimit),
                        this.nativeContext.stroke()
                }
                ,
                extendPrototype([CanvasRendererBase, ICompElement, CVBaseElement], CVCompElement),
                CVCompElement.prototype.renderInnerContent = function() {
                    var e, t = this.canvasContext;
                    for (t.beginPath(),
                             t.moveTo(0, 0),
                             t.lineTo(this.data.w, 0),
                             t.lineTo(this.data.w, this.data.h),
                             t.lineTo(0, this.data.h),
                             t.lineTo(0, 0),
                             t.clip(),
                             e = this.layers.length - 1; e >= 0; e -= 1)
                        (this.completeLayers || this.elements[e]) && this.elements[e].renderFrame()
                }
                ,
                CVCompElement.prototype.destroy = function() {
                    var e;
                    for (e = this.layers.length - 1; e >= 0; e -= 1)
                        this.elements[e] && this.elements[e].destroy();
                    this.layers = null,
                        this.elements = null
                }
                ,
                CVCompElement.prototype.createComp = function(e) {
                    return new CVCompElement(e,this.globalData,this)
                }
                ,
                extendPrototype([CanvasRendererBase], CanvasRenderer),
                CanvasRenderer.prototype.createComp = function(e) {
                    return new CVCompElement(e,this.globalData,this)
                }
                ,
                HBaseElement.prototype = {
                    checkBlendMode: function() {},
                    initRendererElement: function() {
                        this.baseElement = createTag(this.data.tg || "div"),
                            this.data.hasMask ? (this.svgElement = createNS("svg"),
                                this.layerElement = createNS("g"),
                                this.maskedElement = this.layerElement,
                                this.svgElement.appendChild(this.layerElement),
                                this.baseElement.appendChild(this.svgElement)) : this.layerElement = this.baseElement,
                            styleDiv(this.baseElement)
                    },
                    createContainerElements: function() {
                        this.renderableEffectsManager = new CVEffects(this),
                            this.transformedElement = this.baseElement,
                            this.maskedElement = this.layerElement,
                        this.data.ln && this.layerElement.setAttribute("id", this.data.ln),
                        this.data.cl && this.layerElement.setAttribute("class", this.data.cl),
                        0 !== this.data.bm && this.setBlendMode()
                    },
                    renderElement: function() {
                        var e = this.transformedElement ? this.transformedElement.style : {};
                        if (this.finalTransform._matMdf) {
                            var t = this.finalTransform.mat.toCSS();
                            e.transform = t,
                                e.webkitTransform = t
                        }
                        this.finalTransform._opMdf && (e.opacity = this.finalTransform.mProp.o.v)
                    },
                    renderFrame: function() {
                        this.data.hd || this.hidden || (this.renderTransform(),
                            this.renderRenderable(),
                            this.renderElement(),
                            this.renderInnerContent(),
                        this._isFirstFrame && (this._isFirstFrame = !1))
                    },
                    destroy: function() {
                        this.layerElement = null,
                            this.transformedElement = null,
                        this.matteElement && (this.matteElement = null),
                        this.maskManager && (this.maskManager.destroy(),
                            this.maskManager = null)
                    },
                    createRenderableComponents: function() {
                        this.maskManager = new MaskElement(this.data,this,this.globalData)
                    },
                    addEffects: function() {},
                    setMatte: function() {}
                },
                HBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement,
                HBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy,
                HBaseElement.prototype.buildElementParenting = BaseRenderer.prototype.buildElementParenting,
                extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], HSolidElement),
                HSolidElement.prototype.createContent = function() {
                    var e;
                    this.data.hasMask ? ((e = createNS("rect")).setAttribute("width", this.data.sw),
                        e.setAttribute("height", this.data.sh),
                        e.setAttribute("fill", this.data.sc),
                        this.svgElement.setAttribute("width", this.data.sw),
                        this.svgElement.setAttribute("height", this.data.sh)) : ((e = createTag("div")).style.width = this.data.sw + "px",
                        e.style.height = this.data.sh + "px",
                        e.style.backgroundColor = this.data.sc),
                        this.layerElement.appendChild(e)
                }
                ,
                extendPrototype([BaseElement, TransformElement, HSolidElement, SVGShapeElement, HBaseElement, HierarchyElement, FrameElement, RenderableElement], HShapeElement),
                HShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent,
            HShapeElement.prototype.createContent = function() {
                var e;
                if (this.baseElement.style.fontSize = 0,
                    this.data.hasMask)
                    this.layerElement.appendChild(this.shapesContainer),
                        e = this.svgElement;
                else {
                    e = createNS("svg");
                    var t = this.comp.data ? this.comp.data : this.globalData.compSize;
                    e.setAttribute("width", t.w),
                        e.setAttribute("height", t.h),
                        e.appendChild(this.shapesContainer),
                        this.layerElement.appendChild(e)
                }
                this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.shapesContainer, 0, [], !0),
                    this.filterUniqueShapes(),
                    this.shapeCont = e
            }
            ,
            HShapeElement.prototype.getTransformedPoint = function(e, t) {
                var a, s = e.length;
                for (a = 0; a < s; a += 1)
                    t = e[a].mProps.v.applyToPointArray(t[0], t[1], 0);
                return t
            }
            ,
            HShapeElement.prototype.calculateShapeBoundingBox = function(e, t) {
                var a, s, i, r, o, n = e.sh.v, l = e.transformers, c = n._length;
                if (!(c <= 1)) {
                    for (a = 0; a < c - 1; a += 1)
                        s = this.getTransformedPoint(l, n.v[a]),
                            i = this.getTransformedPoint(l, n.o[a]),
                            r = this.getTransformedPoint(l, n.i[a + 1]),
                            o = this.getTransformedPoint(l, n.v[a + 1]),
                            this.checkBounds(s, i, r, o, t);
                    n.c && (s = this.getTransformedPoint(l, n.v[a]),
                        i = this.getTransformedPoint(l, n.o[a]),
                        r = this.getTransformedPoint(l, n.i[0]),
                        o = this.getTransformedPoint(l, n.v[0]),
                        this.checkBounds(s, i, r, o, t))
                }
            }
            ,
            HShapeElement.prototype.checkBounds = function(e, t, a, s, i) {
                this.getBoundsOfCurve(e, t, a, s);
                var r = this.shapeBoundingBox;
                i.x = bmMin(r.left, i.x),
                    i.xMax = bmMax(r.right, i.xMax),
                    i.y = bmMin(r.top, i.y),
                    i.yMax = bmMax(r.bottom, i.yMax)
            }
            ,
            HShapeElement.prototype.shapeBoundingBox = {
                left: 0,
                right: 0,
                top: 0,
                bottom: 0
            },
            HShapeElement.prototype.tempBoundingBox = {
                x: 0,
                xMax: 0,
                y: 0,
                yMax: 0,
                width: 0,
                height: 0
            },
            HShapeElement.prototype.getBoundsOfCurve = function(e, t, a, s) {
                for (var i, r, o, n, l, c, d, h = [[e[0], s[0]], [e[1], s[1]]], p = 0; p < 2; ++p)
                    r = 6 * e[p] - 12 * t[p] + 6 * a[p],
                        i = -3 * e[p] + 9 * t[p] - 9 * a[p] + 3 * s[p],
                        o = 3 * t[p] - 3 * e[p],
                        r |= 0,
                        o |= 0,
                    0 == (i |= 0) && 0 === r || (0 === i ? (n = -o / r) > 0 && n < 1 && h[p].push(this.calculateF(n, e, t, a, s, p)) : (l = r * r - 4 * o * i) >= 0 && ((c = (-r + bmSqrt(l)) / (2 * i)) > 0 && c < 1 && h[p].push(this.calculateF(c, e, t, a, s, p)),
                    (d = (-r - bmSqrt(l)) / (2 * i)) > 0 && d < 1 && h[p].push(this.calculateF(d, e, t, a, s, p))));
                this.shapeBoundingBox.left = bmMin.apply(null, h[0]),
                    this.shapeBoundingBox.top = bmMin.apply(null, h[1]),
                    this.shapeBoundingBox.right = bmMax.apply(null, h[0]),
                    this.shapeBoundingBox.bottom = bmMax.apply(null, h[1])
            }
            ,
            HShapeElement.prototype.calculateF = function(e, t, a, s, i, r) {
                return bmPow(1 - e, 3) * t[r] + 3 * bmPow(1 - e, 2) * e * a[r] + 3 * (1 - e) * bmPow(e, 2) * s[r] + bmPow(e, 3) * i[r]
            }
            ,
            HShapeElement.prototype.calculateBoundingBox = function(e, t) {
                var a, s = e.length;
                for (a = 0; a < s; a += 1)
                    e[a] && e[a].sh ? this.calculateShapeBoundingBox(e[a], t) : e[a] && e[a].it ? this.calculateBoundingBox(e[a].it, t) : e[a] && e[a].style && e[a].w && this.expandStrokeBoundingBox(e[a].w, t)
            }
            ,
            HShapeElement.prototype.expandStrokeBoundingBox = function(e, t) {
                var a = 0;
                if (e.keyframes) {
                    for (var s = 0; s < e.keyframes.length; s += 1) {
                        var i = e.keyframes[s].s;
                        i > a && (a = i)
                    }
                    a *= e.mult
                } else
                    a = e.v * e.mult;
                t.x -= a,
                    t.xMax += a,
                    t.y -= a,
                    t.yMax += a
            }
            ,
            HShapeElement.prototype.currentBoxContains = function(e) {
                return this.currentBBox.x <= e.x && this.currentBBox.y <= e.y && this.currentBBox.width + this.currentBBox.x >= e.x + e.width && this.currentBBox.height + this.currentBBox.y >= e.y + e.height
            }
            ,
            HShapeElement.prototype.renderInnerContent = function() {
                if (this._renderShapeFrame(),
                !this.hidden && (this._isFirstFrame || this._mdf)) {
                    var e = this.tempBoundingBox
                        , t = 999999;
                    if (e.x = t,
                        e.xMax = -t,
                        e.y = t,
                        e.yMax = -t,
                        this.calculateBoundingBox(this.itemsData, e),
                        e.width = e.xMax < e.x ? 0 : e.xMax - e.x,
                        e.height = e.yMax < e.y ? 0 : e.yMax - e.y,
                        this.currentBoxContains(e))
                        return;
                    var a = !1;
                    if (this.currentBBox.w !== e.width && (this.currentBBox.w = e.width,
                        this.shapeCont.setAttribute("width", e.width),
                        a = !0),
                    this.currentBBox.h !== e.height && (this.currentBBox.h = e.height,
                        this.shapeCont.setAttribute("height", e.height),
                        a = !0),
                    a || this.currentBBox.x !== e.x || this.currentBBox.y !== e.y) {
                        this.currentBBox.w = e.width,
                            this.currentBBox.h = e.height,
                            this.currentBBox.x = e.x,
                            this.currentBBox.y = e.y,
                            this.shapeCont.setAttribute("viewBox", this.currentBBox.x + " " + this.currentBBox.y + " " + this.currentBBox.w + " " + this.currentBBox.h);
                        var s = this.shapeCont.style
                            , i = "translate(" + this.currentBBox.x + "px," + this.currentBBox.y + "px)";
                        s.transform = i,
                            s.webkitTransform = i
                    }
                }
            }
            ,
            extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], HTextElement),
            HTextElement.prototype.createContent = function() {
                if (this.isMasked = this.checkMasks(),
                    this.isMasked) {
                    this.renderType = "svg",
                        this.compW = this.comp.data.w,
                        this.compH = this.comp.data.h,
                        this.svgElement.setAttribute("width", this.compW),
                        this.svgElement.setAttribute("height", this.compH);
                    var e = createNS("g");
                    this.maskedElement.appendChild(e),
                        this.innerElem = e
                } else
                    this.renderType = "html",
                        this.innerElem = this.layerElement;
                this.checkParenting()
            }
            ,
            HTextElement.prototype.buildNewText = function() {
                var e = this.textProperty.currentData;
                this.renderedLetters = createSizedArray(e.l ? e.l.length : 0);
                var t = this.innerElem.style
                    , a = e.fc ? this.buildColor(e.fc) : "rgba(0,0,0,0)";
                t.fill = a,
                    t.color = a,
                e.sc && (t.stroke = this.buildColor(e.sc),
                    t.strokeWidth = e.sw + "px");
                var s, i, r = this.globalData.fontManager.getFontByName(e.f);
                if (!this.globalData.fontManager.chars)
                    if (t.fontSize = e.finalSize + "px",
                        t.lineHeight = e.finalSize + "px",
                        r.fClass)
                        this.innerElem.className = r.fClass;
                    else {
                        t.fontFamily = r.fFamily;
                        var o = e.fWeight
                            , n = e.fStyle;
                        t.fontStyle = n,
                            t.fontWeight = o
                    }
                var l, c, d, h = e.l;
                i = h.length;
                var p, u = this.mHelper, m = "", f = 0;
                for (s = 0; s < i; s += 1) {
                    if (this.globalData.fontManager.chars ? (this.textPaths[f] ? l = this.textPaths[f] : ((l = createNS("path")).setAttribute("stroke-linecap", lineCapEnum[1]),
                        l.setAttribute("stroke-linejoin", lineJoinEnum[2]),
                        l.setAttribute("stroke-miterlimit", "4")),
                    this.isMasked || (this.textSpans[f] ? d = (c = this.textSpans[f]).children[0] : ((c = createTag("div")).style.lineHeight = 0,
                        (d = createNS("svg")).appendChild(l),
                        styleDiv(c)))) : this.isMasked ? l = this.textPaths[f] ? this.textPaths[f] : createNS("text") : this.textSpans[f] ? (c = this.textSpans[f],
                        l = this.textPaths[f]) : (styleDiv(c = createTag("span")),
                        styleDiv(l = createTag("span")),
                        c.appendChild(l)),
                        this.globalData.fontManager.chars) {
                        var v, g = this.globalData.fontManager.getCharData(e.finalText[s], r.fStyle, this.globalData.fontManager.getFontByName(e.f).fFamily);
                        if (v = g ? g.data : null,
                            u.reset(),
                        v && v.shapes && v.shapes.length && (p = v.shapes[0].it,
                            u.scale(e.finalSize / 100, e.finalSize / 100),
                            m = this.createPathShape(u, p),
                            l.setAttribute("d", m)),
                            this.isMasked)
                            this.innerElem.appendChild(l);
                        else {
                            if (this.innerElem.appendChild(c),
                            v && v.shapes) {
                                document.body.appendChild(d);
                                var y = d.getBBox();
                                d.setAttribute("width", y.width + 2),
                                    d.setAttribute("height", y.height + 2),
                                    d.setAttribute("viewBox", y.x - 1 + " " + (y.y - 1) + " " + (y.width + 2) + " " + (y.height + 2));
                                var _ = d.style
                                    , b = "translate(" + (y.x - 1) + "px," + (y.y - 1) + "px)";
                                _.transform = b,
                                    _.webkitTransform = b,
                                    h[s].yOffset = y.y - 1
                            } else
                                d.setAttribute("width", 1),
                                    d.setAttribute("height", 1);
                            c.appendChild(d)
                        }
                    } else if (l.textContent = h[s].val,
                        l.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve"),
                        this.isMasked)
                        this.innerElem.appendChild(l);
                    else {
                        this.innerElem.appendChild(c);
                        var k = l.style
                            , w = "translate3d(0," + -e.finalSize / 1.2 + "px,0)";
                        k.transform = w,
                            k.webkitTransform = w
                    }
                    this.isMasked ? this.textSpans[f] = l : this.textSpans[f] = c,
                        this.textSpans[f].style.display = "block",
                        this.textPaths[f] = l,
                        f += 1
                }
                for (; f < this.textSpans.length; )
                    this.textSpans[f].style.display = "none",
                        f += 1
            }
            ,
            HTextElement.prototype.renderInnerContent = function() {
                var e;
                if (this.validateText(),
                    this.data.singleShape) {
                    if (!this._isFirstFrame && !this.lettersChangedFlag)
                        return;
                    if (this.isMasked && this.finalTransform._matMdf) {
                        this.svgElement.setAttribute("viewBox", -this.finalTransform.mProp.p.v[0] + " " + -this.finalTransform.mProp.p.v[1] + " " + this.compW + " " + this.compH),
                            e = this.svgElement.style;
                        var t = "translate(" + -this.finalTransform.mProp.p.v[0] + "px," + -this.finalTransform.mProp.p.v[1] + "px)";
                        e.transform = t,
                            e.webkitTransform = t
                    }
                }
                if (this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag),
                this.lettersChangedFlag || this.textAnimator.lettersChangedFlag) {
                    var a, s, i, r, o, n = 0, l = this.textAnimator.renderedLetters, c = this.textProperty.currentData.l;
                    for (s = c.length,
                             a = 0; a < s; a += 1)
                        c[a].n ? n += 1 : (r = this.textSpans[a],
                            o = this.textPaths[a],
                            i = l[n],
                            n += 1,
                        i._mdf.m && (this.isMasked ? r.setAttribute("transform", i.m) : (r.style.webkitTransform = i.m,
                            r.style.transform = i.m)),
                            r.style.opacity = i.o,
                        i.sw && i._mdf.sw && o.setAttribute("stroke-width", i.sw),
                        i.sc && i._mdf.sc && o.setAttribute("stroke", i.sc),
                        i.fc && i._mdf.fc && (o.setAttribute("fill", i.fc),
                            o.style.color = i.fc));
                    if (this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)) {
                        var d = this.innerElem.getBBox();
                        if (this.currentBBox.w !== d.width && (this.currentBBox.w = d.width,
                            this.svgElement.setAttribute("width", d.width)),
                        this.currentBBox.h !== d.height && (this.currentBBox.h = d.height,
                            this.svgElement.setAttribute("height", d.height)),
                        this.currentBBox.w !== d.width + 2 || this.currentBBox.h !== d.height + 2 || this.currentBBox.x !== d.x - 1 || this.currentBBox.y !== d.y - 1) {
                            this.currentBBox.w = d.width + 2,
                                this.currentBBox.h = d.height + 2,
                                this.currentBBox.x = d.x - 1,
                                this.currentBBox.y = d.y - 1,
                                this.svgElement.setAttribute("viewBox", this.currentBBox.x + " " + this.currentBBox.y + " " + this.currentBBox.w + " " + this.currentBBox.h),
                                e = this.svgElement.style;
                            var h = "translate(" + this.currentBBox.x + "px," + this.currentBBox.y + "px)";
                            e.transform = h,
                                e.webkitTransform = h
                        }
                    }
                }
            }
            ,
            extendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement),
            HCameraElement.prototype.setup = function() {
                var e, t, a, s, i = this.comp.threeDElements.length;
                for (e = 0; e < i; e += 1)
                    if ("3d" === (t = this.comp.threeDElements[e]).type) {
                        a = t.perspectiveElem.style,
                            s = t.container.style;
                        var r = this.pe.v + "px"
                            , o = "0px 0px 0px"
                            , n = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)";
                        a.perspective = r,
                            a.webkitPerspective = r,
                            s.transformOrigin = o,
                            s.mozTransformOrigin = o,
                            s.webkitTransformOrigin = o,
                            a.transform = n,
                            a.webkitTransform = n
                    }
            }
            ,
            HCameraElement.prototype.createElements = function() {}
            ,
            HCameraElement.prototype.hide = function() {}
            ,
            HCameraElement.prototype.renderFrame = function() {
                var e, t, a = this._isFirstFrame;
                if (this.hierarchy)
                    for (t = this.hierarchy.length,
                             e = 0; e < t; e += 1)
                        a = this.hierarchy[e].finalTransform.mProp._mdf || a;
                if (a || this.pe._mdf || this.p && this.p._mdf || this.px && (this.px._mdf || this.py._mdf || this.pz._mdf) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || this.a && this.a._mdf) {
                    if (this.mat.reset(),
                        this.hierarchy)
                        for (e = t = this.hierarchy.length - 1; e >= 0; e -= 1) {
                            var s = this.hierarchy[e].finalTransform.mProp;
                            this.mat.translate(-s.p.v[0], -s.p.v[1], s.p.v[2]),
                                this.mat.rotateX(-s.or.v[0]).rotateY(-s.or.v[1]).rotateZ(s.or.v[2]),
                                this.mat.rotateX(-s.rx.v).rotateY(-s.ry.v).rotateZ(s.rz.v),
                                this.mat.scale(1 / s.s.v[0], 1 / s.s.v[1], 1 / s.s.v[2]),
                                this.mat.translate(s.a.v[0], s.a.v[1], s.a.v[2])
                        }
                    if (this.p ? this.mat.translate(-this.p.v[0], -this.p.v[1], this.p.v[2]) : this.mat.translate(-this.px.v, -this.py.v, this.pz.v),
                        this.a) {
                        var i;
                        i = this.p ? [this.p.v[0] - this.a.v[0], this.p.v[1] - this.a.v[1], this.p.v[2] - this.a.v[2]] : [this.px.v - this.a.v[0], this.py.v - this.a.v[1], this.pz.v - this.a.v[2]];
                        var r = Math.sqrt(Math.pow(i[0], 2) + Math.pow(i[1], 2) + Math.pow(i[2], 2))
                            , o = [i[0] / r, i[1] / r, i[2] / r]
                            , n = Math.sqrt(o[2] * o[2] + o[0] * o[0])
                            , l = Math.atan2(o[1], n)
                            , c = Math.atan2(o[0], -o[2]);
                        this.mat.rotateY(c).rotateX(-l)
                    }
                    this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v),
                        this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]),
                        this.mat.translate(this.globalData.compSize.w / 2, this.globalData.compSize.h / 2, 0),
                        this.mat.translate(0, 0, this.pe.v);
                    var d = !this._prevMat.equals(this.mat);
                    if ((d || this.pe._mdf) && this.comp.threeDElements) {
                        var h, p, u;
                        for (t = this.comp.threeDElements.length,
                                 e = 0; e < t; e += 1)
                            if ("3d" === (h = this.comp.threeDElements[e]).type) {
                                if (d) {
                                    var m = this.mat.toCSS();
                                    (u = h.container.style).transform = m,
                                        u.webkitTransform = m
                                }
                                this.pe._mdf && ((p = h.perspectiveElem.style).perspective = this.pe.v + "px",
                                    p.webkitPerspective = this.pe.v + "px")
                            }
                        this.mat.clone(this._prevMat)
                    }
                }
                this._isFirstFrame = !1
            }
            ,
            HCameraElement.prototype.prepareFrame = function(e) {
                this.prepareProperties(e, !0)
            }
            ,
            HCameraElement.prototype.destroy = function() {}
            ,
            HCameraElement.prototype.getBaseElement = function() {
                return null
            }
            ,
            extendPrototype([BaseElement, TransformElement, HBaseElement, HSolidElement, HierarchyElement, FrameElement, RenderableElement], HImageElement),
            HImageElement.prototype.createContent = function() {
                var e = this.globalData.getAssetsPath(this.assetData)
                    , t = new Image;
                this.data.hasMask ? (this.imageElem = createNS("image"),
                    this.imageElem.setAttribute("width", this.assetData.w + "px"),
                    this.imageElem.setAttribute("height", this.assetData.h + "px"),
                    this.imageElem.setAttributeNS("http://www.w3.org/1999/xlink", "href", e),
                    this.layerElement.appendChild(this.imageElem),
                    this.baseElement.setAttribute("width", this.assetData.w),
                    this.baseElement.setAttribute("height", this.assetData.h)) : this.layerElement.appendChild(t),
                    t.crossOrigin = "anonymous",
                    t.src = e,
                this.data.ln && this.baseElement.setAttribute("id", this.data.ln)
            }
            ,
            extendPrototype([BaseRenderer], HybridRendererBase),
            HybridRendererBase.prototype.buildItem = SVGRenderer.prototype.buildItem,
            HybridRendererBase.prototype.checkPendingElements = function() {
                for (; this.pendingElements.length; )
                    this.pendingElements.pop().checkParenting()
            }
            ,
            HybridRendererBase.prototype.appendElementInPos = function(e, t) {
                var a = e.getBaseElement();
                if (a) {
                    var s = this.layers[t];
                    if (s.ddd && this.supports3d)
                        this.addTo3dContainer(a, t);
                    else if (this.threeDElements)
                        this.addTo3dContainer(a, t);
                    else {
                        for (var i, r, o = 0; o < t; )
                            this.elements[o] && !0 !== this.elements[o] && this.elements[o].getBaseElement && (r = this.elements[o],
                                i = (this.layers[o].ddd ? this.getThreeDContainerByPos(o) : r.getBaseElement()) || i),
                                o += 1;
                        i ? s.ddd && this.supports3d || this.layerElement.insertBefore(a, i) : s.ddd && this.supports3d || this.layerElement.appendChild(a)
                    }
                }
            }
            ,
            HybridRendererBase.prototype.createShape = function(e) {
                return this.supports3d ? new HShapeElement(e,this.globalData,this) : new SVGShapeElement(e,this.globalData,this)
            }
            ,
            HybridRendererBase.prototype.createText = function(e) {
                return this.supports3d ? new HTextElement(e,this.globalData,this) : new SVGTextLottieElement(e,this.globalData,this)
            }
            ,
            HybridRendererBase.prototype.createCamera = function(e) {
                return this.camera = new HCameraElement(e,this.globalData,this),
                    this.camera
            }
            ,
            HybridRendererBase.prototype.createImage = function(e) {
                return this.supports3d ? new HImageElement(e,this.globalData,this) : new IImageElement(e,this.globalData,this)
            }
            ,
            HybridRendererBase.prototype.createSolid = function(e) {
                return this.supports3d ? new HSolidElement(e,this.globalData,this) : new ISolidElement(e,this.globalData,this)
            }
            ,
            HybridRendererBase.prototype.createNull = SVGRenderer.prototype.createNull,
            HybridRendererBase.prototype.getThreeDContainerByPos = function(e) {
                for (var t = 0, a = this.threeDElements.length; t < a; ) {
                    if (this.threeDElements[t].startPos <= e && this.threeDElements[t].endPos >= e)
                        return this.threeDElements[t].perspectiveElem;
                    t += 1
                }
                return null
            }
            ,
            HybridRendererBase.prototype.createThreeDContainer = function(e, t) {
                var a, s, i = createTag("div");
                styleDiv(i);
                var r = createTag("div");
                if (styleDiv(r),
                "3d" === t) {
                    (a = i.style).width = this.globalData.compSize.w + "px",
                        a.height = this.globalData.compSize.h + "px";
                    var o = "50% 50%";
                    a.webkitTransformOrigin = o,
                        a.mozTransformOrigin = o,
                        a.transformOrigin = o;
                    var n = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)";
                    (s = r.style).transform = n,
                        s.webkitTransform = n
                }
                i.appendChild(r);
                var l = {
                    container: r,
                    perspectiveElem: i,
                    startPos: e,
                    endPos: e,
                    type: t
                };
                return this.threeDElements.push(l),
                    l
            }
            ,
            HybridRendererBase.prototype.build3dContainers = function() {
                var e, t, a = this.layers.length, s = "";
                for (e = 0; e < a; e += 1)
                    this.layers[e].ddd && 3 !== this.layers[e].ty ? ("3d" !== s && (s = "3d",
                        t = this.createThreeDContainer(e, "3d")),
                        t.endPos = Math.max(t.endPos, e)) : ("2d" !== s && (s = "2d",
                        t = this.createThreeDContainer(e, "2d")),
                        t.endPos = Math.max(t.endPos, e));
                for (e = (a = this.threeDElements.length) - 1; e >= 0; e -= 1)
                    this.resizerElem.appendChild(this.threeDElements[e].perspectiveElem)
            }
            ,
            HybridRendererBase.prototype.addTo3dContainer = function(e, t) {
                for (var a = 0, s = this.threeDElements.length; a < s; ) {
                    if (t <= this.threeDElements[a].endPos) {
                        for (var i, r = this.threeDElements[a].startPos; r < t; )
                            this.elements[r] && this.elements[r].getBaseElement && (i = this.elements[r].getBaseElement()),
                                r += 1;
                        i ? this.threeDElements[a].container.insertBefore(e, i) : this.threeDElements[a].container.appendChild(e);
                        break
                    }
                    a += 1
                }
            }
            ,
            HybridRendererBase.prototype.configAnimation = function(e) {
                var t = createTag("div")
                    , a = this.animationItem.wrapper
                    , s = t.style;
                s.width = e.w + "px",
                    s.height = e.h + "px",
                    this.resizerElem = t,
                    styleDiv(t),
                    s.transformStyle = "flat",
                    s.mozTransformStyle = "flat",
                    s.webkitTransformStyle = "flat",
                this.renderConfig.className && t.setAttribute("class", this.renderConfig.className),
                    a.appendChild(t),
                    s.overflow = "hidden";
                var i = createNS("svg");
                i.setAttribute("width", "1"),
                    i.setAttribute("height", "1"),
                    styleDiv(i),
                    this.resizerElem.appendChild(i);
                var r = createNS("defs");
                i.appendChild(r),
                    this.data = e,
                    this.setupGlobalData(e, i),
                    this.globalData.defs = r,
                    this.layers = e.layers,
                    this.layerElement = this.resizerElem,
                    this.build3dContainers(),
                    this.updateContainerSize()
            }
            ,
            HybridRendererBase.prototype.destroy = function() {
                var e;
                this.animationItem.wrapper && (this.animationItem.wrapper.innerText = ""),
                    this.animationItem.container = null,
                    this.globalData.defs = null;
                var t = this.layers ? this.layers.length : 0;
                for (e = 0; e < t; e += 1)
                    this.elements[e] && this.elements[e].destroy && this.elements[e].destroy();
                this.elements.length = 0,
                    this.destroyed = !0,
                    this.animationItem = null
            }
            ,
            HybridRendererBase.prototype.updateContainerSize = function() {
                var e, t, a, s, i = this.animationItem.wrapper.offsetWidth, r = this.animationItem.wrapper.offsetHeight, o = i / r;
                this.globalData.compSize.w / this.globalData.compSize.h > o ? (e = i / this.globalData.compSize.w,
                    t = i / this.globalData.compSize.w,
                    a = 0,
                    s = (r - this.globalData.compSize.h * (i / this.globalData.compSize.w)) / 2) : (e = r / this.globalData.compSize.h,
                    t = r / this.globalData.compSize.h,
                    a = (i - this.globalData.compSize.w * (r / this.globalData.compSize.h)) / 2,
                    s = 0);
                var n = this.resizerElem.style;
                n.webkitTransform = "matrix3d(" + e + ",0,0,0,0," + t + ",0,0,0,0,1,0," + a + "," + s + ",0,1)",
                    n.transform = n.webkitTransform
            }
            ,
            HybridRendererBase.prototype.renderFrame = SVGRenderer.prototype.renderFrame,
            HybridRendererBase.prototype.hide = function() {
                this.resizerElem.style.display = "none"
            }
            ,
            HybridRendererBase.prototype.show = function() {
                this.resizerElem.style.display = "block"
            }
            ,
            HybridRendererBase.prototype.initItems = function() {
                if (this.buildAllItems(),
                    this.camera)
                    this.camera.setup();
                else {
                    var e, t = this.globalData.compSize.w, a = this.globalData.compSize.h, s = this.threeDElements.length;
                    for (e = 0; e < s; e += 1) {
                        var i = this.threeDElements[e].perspectiveElem.style;
                        i.webkitPerspective = Math.sqrt(Math.pow(t, 2) + Math.pow(a, 2)) + "px",
                            i.perspective = i.webkitPerspective
                    }
                }
            }
            ,
            HybridRendererBase.prototype.searchExtraCompositions = function(e) {
                var t, a = e.length, s = createTag("div");
                for (t = 0; t < a; t += 1)
                    if (e[t].xt) {
                        var i = this.createComp(e[t], s, this.globalData.comp, null);
                        i.initExpressions(),
                            this.globalData.projectInterface.registerComposition(i)
                    }
            }
            ,
            extendPrototype([HybridRendererBase, ICompElement, HBaseElement], HCompElement),
            HCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements,
            HCompElement.prototype.createContainerElements = function() {
                this._createBaseContainerElements(),
                    this.data.hasMask ? (this.svgElement.setAttribute("width", this.data.w),
                        this.svgElement.setAttribute("height", this.data.h),
                        this.transformedElement = this.baseElement) : this.transformedElement = this.layerElement
            }
            ,
            HCompElement.prototype.addTo3dContainer = function(e, t) {
                for (var a, s = 0; s < t; )
                    this.elements[s] && this.elements[s].getBaseElement && (a = this.elements[s].getBaseElement()),
                        s += 1;
                a ? this.layerElement.insertBefore(e, a) : this.layerElement.appendChild(e)
            }
            ,
            HCompElement.prototype.createComp = function(e) {
                return this.supports3d ? new HCompElement(e,this.globalData,this) : new SVGCompElement(e,this.globalData,this)
            }
            ,
            extendPrototype([HybridRendererBase], HybridRenderer),
            HybridRenderer.prototype.createComp = function(e) {
                return this.supports3d ? new HCompElement(e,this.globalData,this) : new SVGCompElement(e,this.globalData,this)
            }
            ;
            var CompExpressionInterface = function(e) {
                function t(t) {
                    for (var a = 0, s = e.layers.length; a < s; ) {
                        if (e.layers[a].nm === t || e.layers[a].ind === t)
                            return e.elements[a].layerInterface;
                        a += 1
                    }
                    return null
                }
                return Object.defineProperty(t, "_name", {
                    value: e.data.nm
                }),
                    t.layer = t,
                    t.pixelAspect = 1,
                    t.height = e.data.h || e.globalData.compSize.h,
                    t.width = e.data.w || e.globalData.compSize.w,
                    t.pixelAspect = 1,
                    t.frameDuration = 1 / e.globalData.frameRate,
                    t.displayStartTime = 0,
                    t.numLayers = e.layers.length,
                    t
            };
            function _typeof$2(e) {
                return (_typeof$2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                            return typeof e
                        }
                        : function(e) {
                            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                        }
                )(e)
            }
            function seedRandom(e, t) {
                var a = this
                    , s = 256
                    , i = "random"
                    , r = t.pow(s, 6)
                    , o = t.pow(2, 52)
                    , n = 2 * o
                    , l = 255;
                function c(e) {
                    var t, a = e.length, i = this, r = 0, o = i.i = i.j = 0, n = i.S = [];
                    for (a || (e = [a++]); r < s; )
                        n[r] = r++;
                    for (r = 0; r < s; r++)
                        n[r] = n[o = l & o + e[r % a] + (t = n[r])],
                            n[o] = t;
                    i.g = function(e) {
                        for (var t, a = 0, r = i.i, o = i.j, n = i.S; e--; )
                            t = n[r = l & r + 1],
                                a = a * s + n[l & (n[r] = n[o = l & o + t]) + (n[o] = t)];
                        return i.i = r,
                            i.j = o,
                            a
                    }
                }
                function d(e, t) {
                    return t.i = e.i,
                        t.j = e.j,
                        t.S = e.S.slice(),
                        t
                }
                function h(e, t) {
                    var a, s = [], i = _typeof$2(e);
                    if (t && "object" == i)
                        for (a in e)
                            try {
                                s.push(h(e[a], t - 1))
                            } catch (r) {}
                    return s.length ? s : "string" == i ? e : e + "\0"
                }
                function p(e, t) {
                    for (var a, s = e + "", i = 0; i < s.length; )
                        t[l & i] = l & (a ^= 19 * t[l & i]) + s.charCodeAt(i++);
                    return u(t)
                }
                function u(e) {
                    return String.fromCharCode.apply(0, e)
                }
                t["seed" + i] = function(l, m, f) {
                    var v = []
                        , g = p(h((m = !0 === m ? {
                        entropy: !0
                    } : m || {}).entropy ? [l, u(e)] : null === l ? function() {
                        try {
                            var t = new Uint8Array(s);
                            return (a.crypto || a.msCrypto).getRandomValues(t),
                                u(t)
                        } catch (o) {
                            var i = a.navigator
                                , r = i && i.plugins;
                            return [+new Date, a, r, a.screen, u(e)]
                        }
                    }() : l, 3), v)
                        , y = new c(v)
                        , _ = function() {
                        for (var e = y.g(6), t = r, a = 0; e < o; )
                            e = (e + a) * s,
                                t *= s,
                                a = y.g(1);
                        for (; e >= n; )
                            e /= 2,
                                t /= 2,
                                a >>>= 1;
                        return (e + a) / t
                    };
                    return _.int32 = function() {
                        return 0 | y.g(4)
                    }
                        ,
                        _.quick = function() {
                            return y.g(4) / 4294967296
                        }
                        ,
                        _.double = _,
                        p(u(y.S), e),
                        (m.pass || f || function(e, a, s, r) {
                                return r && (r.S && d(r, y),
                                        e.state = function() {
                                            return d(y, {})
                                        }
                                ),
                                    s ? (t[i] = e,
                                        a) : e
                            }
                        )(_, g, "global"in m ? m.global : this == t, m.state)
                }
                    ,
                    p(t.random(), e)
            }
            function initialize$2(e) {
                seedRandom([], e)
            }
            var propTypes = {
                SHAPE: "shape"
            };
            function _typeof$1(e) {
                return (_typeof$1 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                            return typeof e
                        }
                        : function(e) {
                            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                        }
                )(e)
            }
            var ExpressionManager = function() {
                var ob = {}
                    , Math = BMMath
                    , window = null
                    , document = null
                    , XMLHttpRequest = null
                    , fetch = null
                    , frames = null
                    , _lottieGlobal = {};
                function resetFrame() {
                    _lottieGlobal = {}
                }
                function $bm_isInstanceOfArray(e) {
                    return e.constructor === Array || e.constructor === Float32Array
                }
                function isNumerable(e, t) {
                    return "number" === e || t instanceof Number || "boolean" === e || "string" === e
                }
                function $bm_neg(e) {
                    var t = _typeof$1(e);
                    if ("number" === t || e instanceof Number || "boolean" === t)
                        return -e;
                    if ($bm_isInstanceOfArray(e)) {
                        var a, s = e.length, i = [];
                        for (a = 0; a < s; a += 1)
                            i[a] = -e[a];
                        return i
                    }
                    return e.propType ? e.v : -e
                }
                initialize$2(BMMath);
                var easeInBez = BezierFactory.getBezierEasing(.333, 0, .833, .833, "easeIn").get
                    , easeOutBez = BezierFactory.getBezierEasing(.167, .167, .667, 1, "easeOut").get
                    , easeInOutBez = BezierFactory.getBezierEasing(.33, 0, .667, 1, "easeInOut").get;
                function sum(e, t) {
                    var a = _typeof$1(e)
                        , s = _typeof$1(t);
                    if (isNumerable(a, e) && isNumerable(s, t) || "string" === a || "string" === s)
                        return e + t;
                    if ($bm_isInstanceOfArray(e) && isNumerable(s, t))
                        return (e = e.slice(0))[0] += t,
                            e;
                    if (isNumerable(a, e) && $bm_isInstanceOfArray(t))
                        return (t = t.slice(0))[0] = e + t[0],
                            t;
                    if ($bm_isInstanceOfArray(e) && $bm_isInstanceOfArray(t)) {
                        for (var i = 0, r = e.length, o = t.length, n = []; i < r || i < o; )
                            ("number" == typeof e[i] || e[i]instanceof Number) && ("number" == typeof t[i] || t[i]instanceof Number) ? n[i] = e[i] + t[i] : n[i] = void 0 === t[i] ? e[i] : e[i] || t[i],
                                i += 1;
                        return n
                    }
                    return 0
                }
                var add = sum;
                function sub(e, t) {
                    var a = _typeof$1(e)
                        , s = _typeof$1(t);
                    if (isNumerable(a, e) && isNumerable(s, t))
                        return "string" === a && (e = parseInt(e, 10)),
                        "string" === s && (t = parseInt(t, 10)),
                        e - t;
                    if ($bm_isInstanceOfArray(e) && isNumerable(s, t))
                        return (e = e.slice(0))[0] -= t,
                            e;
                    if (isNumerable(a, e) && $bm_isInstanceOfArray(t))
                        return (t = t.slice(0))[0] = e - t[0],
                            t;
                    if ($bm_isInstanceOfArray(e) && $bm_isInstanceOfArray(t)) {
                        for (var i = 0, r = e.length, o = t.length, n = []; i < r || i < o; )
                            ("number" == typeof e[i] || e[i]instanceof Number) && ("number" == typeof t[i] || t[i]instanceof Number) ? n[i] = e[i] - t[i] : n[i] = void 0 === t[i] ? e[i] : e[i] || t[i],
                                i += 1;
                        return n
                    }
                    return 0
                }
                function mul(e, t) {
                    var a, s, i, r = _typeof$1(e), o = _typeof$1(t);
                    if (isNumerable(r, e) && isNumerable(o, t))
                        return e * t;
                    if ($bm_isInstanceOfArray(e) && isNumerable(o, t)) {
                        for (i = e.length,
                                 a = createTypedArray("float32", i),
                                 s = 0; s < i; s += 1)
                            a[s] = e[s] * t;
                        return a
                    }
                    if (isNumerable(r, e) && $bm_isInstanceOfArray(t)) {
                        for (i = t.length,
                                 a = createTypedArray("float32", i),
                                 s = 0; s < i; s += 1)
                            a[s] = e * t[s];
                        return a
                    }
                    return 0
                }
                function div(e, t) {
                    var a, s, i, r = _typeof$1(e), o = _typeof$1(t);
                    if (isNumerable(r, e) && isNumerable(o, t))
                        return e / t;
                    if ($bm_isInstanceOfArray(e) && isNumerable(o, t)) {
                        for (i = e.length,
                                 a = createTypedArray("float32", i),
                                 s = 0; s < i; s += 1)
                            a[s] = e[s] / t;
                        return a
                    }
                    if (isNumerable(r, e) && $bm_isInstanceOfArray(t)) {
                        for (i = t.length,
                                 a = createTypedArray("float32", i),
                                 s = 0; s < i; s += 1)
                            a[s] = e / t[s];
                        return a
                    }
                    return 0
                }
                function mod(e, t) {
                    return "string" == typeof e && (e = parseInt(e, 10)),
                    "string" == typeof t && (t = parseInt(t, 10)),
                    e % t
                }
                var $bm_sum = sum
                    , $bm_sub = sub
                    , $bm_mul = mul
                    , $bm_div = div
                    , $bm_mod = mod;
                function clamp(e, t, a) {
                    if (t > a) {
                        var s = a;
                        a = t,
                            t = s
                    }
                    return Math.min(Math.max(e, t), a)
                }
                function radiansToDegrees(e) {
                    return e / degToRads
                }
                var radians_to_degrees = radiansToDegrees;
                function degreesToRadians(e) {
                    return e * degToRads
                }
                var degrees_to_radians = radiansToDegrees
                    , helperLengthArray = [0, 0, 0, 0, 0, 0];
                function length(e, t) {
                    if ("number" == typeof e || e instanceof Number)
                        return t = t || 0,
                            Math.abs(e - t);
                    var a;
                    t || (t = helperLengthArray);
                    var s = Math.min(e.length, t.length)
                        , i = 0;
                    for (a = 0; a < s; a += 1)
                        i += Math.pow(t[a] - e[a], 2);
                    return Math.sqrt(i)
                }
                function normalize(e) {
                    return div(e, length(e))
                }
                function rgbToHsl(e) {
                    var t, a, s = e[0], i = e[1], r = e[2], o = Math.max(s, i, r), n = Math.min(s, i, r), l = (o + n) / 2;
                    if (o === n)
                        t = 0,
                            a = 0;
                    else {
                        var c = o - n;
                        switch (a = l > .5 ? c / (2 - o - n) : c / (o + n),
                            o) {
                            case s:
                                t = (i - r) / c + (i < r ? 6 : 0);
                                break;
                            case i:
                                t = (r - s) / c + 2;
                                break;
                            case r:
                                t = (s - i) / c + 4
                        }
                        t /= 6
                    }
                    return [t, a, l, e[3]]
                }
                function hue2rgb(e, t, a) {
                    return a < 0 && (a += 1),
                    a > 1 && (a -= 1),
                        a < 1 / 6 ? e + 6 * (t - e) * a : a < .5 ? t : a < 2 / 3 ? e + (t - e) * (2 / 3 - a) * 6 : e
                }
                function hslToRgb(e) {
                    var t, a, s, i = e[0], r = e[1], o = e[2];
                    if (0 === r)
                        t = o,
                            s = o,
                            a = o;
                    else {
                        var n = o < .5 ? o * (1 + r) : o + r - o * r
                            , l = 2 * o - n;
                        t = hue2rgb(l, n, i + 1 / 3),
                            a = hue2rgb(l, n, i),
                            s = hue2rgb(l, n, i - 1 / 3)
                    }
                    return [t, a, s, e[3]]
                }
                function linear(e, t, a, s, i) {
                    if (void 0 !== s && void 0 !== i || (s = t,
                        i = a,
                        t = 0,
                        a = 1),
                    a < t) {
                        var r = a;
                        a = t,
                            t = r
                    }
                    if (e <= t)
                        return s;
                    if (e >= a)
                        return i;
                    var o, n = a === t ? 0 : (e - t) / (a - t);
                    if (!s.length)
                        return s + (i - s) * n;
                    var l = s.length
                        , c = createTypedArray("float32", l);
                    for (o = 0; o < l; o += 1)
                        c[o] = s[o] + (i[o] - s[o]) * n;
                    return c
                }
                function random(e, t) {
                    if (void 0 === t && (void 0 === e ? (e = 0,
                        t = 1) : (t = e,
                        e = void 0)),
                        t.length) {
                        var a, s = t.length;
                        e || (e = createTypedArray("float32", s));
                        var i = createTypedArray("float32", s)
                            , r = BMMath.random();
                        for (a = 0; a < s; a += 1)
                            i[a] = e[a] + r * (t[a] - e[a]);
                        return i
                    }
                    return void 0 === e && (e = 0),
                    e + BMMath.random() * (t - e)
                }
                function createPath(e, t, a, s) {
                    var i, r = e.length, o = shapePool.newElement();
                    o.setPathData(!!s, r);
                    var n, l, c = [0, 0];
                    for (i = 0; i < r; i += 1)
                        n = t && t[i] ? t[i] : c,
                            l = a && a[i] ? a[i] : c,
                            o.setTripleAt(e[i][0], e[i][1], l[0] + e[i][0], l[1] + e[i][1], n[0] + e[i][0], n[1] + e[i][1], i, !0);
                    return o
                }
                function initiateExpression(elem, data, property) {
                    function noOp(e) {
                        return e
                    }
                    if (!elem.globalData.renderConfig.runExpressions)
                        return noOp;
                    var val = data.x, needsVelocity = /velocity(?![\w\d])/.test(val), _needsRandom = -1 !== val.indexOf("random"), elemType = elem.data.ty, transform, $bm_transform, content, effect, thisProperty = property;
                    thisProperty.valueAtTime = thisProperty.getValueAtTime,
                        Object.defineProperty(thisProperty, "value", {
                            get: function() {
                                return thisProperty.v
                            }
                        }),
                        elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate,
                        elem.comp.displayStartTime = 0;
                    var inPoint = elem.data.ip / elem.comp.globalData.frameRate, outPoint = elem.data.op / elem.comp.globalData.frameRate, width = elem.data.sw ? elem.data.sw : 0, height = elem.data.sh ? elem.data.sh : 0, name = elem.data.nm, loopIn, loop_in, loopOut, loop_out, smooth, toWorld, fromWorld, fromComp, toComp, fromCompToSurface, position, rotation, anchorPoint, scale, thisLayer, thisComp, mask, valueAtTime, velocityAtTime, scoped_bm_rt, expression_function = eval("[function _expression_function(){" + val + ";scoped_bm_rt=$bm_rt}]")[0], numKeys = property.kf ? data.k.length : 0, active = !this.data || !0 !== this.data.hd, wiggle = function(e, t) {
                        var a, s, i = this.pv.length ? this.pv.length : 1, r = createTypedArray("float32", i), o = Math.floor(5 * time);
                        for (a = 0,
                                 s = 0; a < o; ) {
                            for (s = 0; s < i; s += 1)
                                r[s] += -t + 2 * t * BMMath.random();
                            a += 1
                        }
                        var n = 5 * time
                            , l = n - Math.floor(n)
                            , c = createTypedArray("float32", i);
                        if (i > 1) {
                            for (s = 0; s < i; s += 1)
                                c[s] = this.pv[s] + r[s] + (-t + 2 * t * BMMath.random()) * l;
                            return c
                        }
                        return this.pv + r[0] + (-t + 2 * t * BMMath.random()) * l
                    }
                        .bind(this);
                    function loopInDuration(e, t) {
                        return loopIn(e, t, !0)
                    }
                    function loopOutDuration(e, t) {
                        return loopOut(e, t, !0)
                    }
                    thisProperty.loopIn && (loopIn = thisProperty.loopIn.bind(thisProperty),
                        loop_in = loopIn),
                    thisProperty.loopOut && (loopOut = thisProperty.loopOut.bind(thisProperty),
                        loop_out = loopOut),
                    thisProperty.smooth && (smooth = thisProperty.smooth.bind(thisProperty)),
                    this.getValueAtTime && (valueAtTime = this.getValueAtTime.bind(this)),
                    this.getVelocityAtTime && (velocityAtTime = this.getVelocityAtTime.bind(this));
                    var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface), time, velocity, value, text, textIndex, textTotal, selectorValue;
                    function lookAt(e, t) {
                        var a = [t[0] - e[0], t[1] - e[1], t[2] - e[2]]
                            , s = Math.atan2(a[0], Math.sqrt(a[1] * a[1] + a[2] * a[2])) / degToRads;
                        return [-Math.atan2(a[1], a[2]) / degToRads, s, 0]
                    }
                    function easeOut(e, t, a, s, i) {
                        return applyEase(easeOutBez, e, t, a, s, i)
                    }
                    function easeIn(e, t, a, s, i) {
                        return applyEase(easeInBez, e, t, a, s, i)
                    }
                    function ease(e, t, a, s, i) {
                        return applyEase(easeInOutBez, e, t, a, s, i)
                    }
                    function applyEase(e, t, a, s, i, r) {
                        void 0 === i ? (i = a,
                            r = s) : t = (t - a) / (s - a),
                            t > 1 ? t = 1 : t < 0 && (t = 0);
                        var o = e(t);
                        if ($bm_isInstanceOfArray(i)) {
                            var n, l = i.length, c = createTypedArray("float32", l);
                            for (n = 0; n < l; n += 1)
                                c[n] = (r[n] - i[n]) * o + i[n];
                            return c
                        }
                        return (r - i) * o + i
                    }
                    function nearestKey(e) {
                        var t, a, s, i = data.k.length;
                        if (data.k.length && "number" != typeof data.k[0])
                            if (a = -1,
                            (e *= elem.comp.globalData.frameRate) < data.k[0].t)
                                a = 1,
                                    s = data.k[0].t;
                            else {
                                for (t = 0; t < i - 1; t += 1) {
                                    if (e === data.k[t].t) {
                                        a = t + 1,
                                            s = data.k[t].t;
                                        break
                                    }
                                    if (e > data.k[t].t && e < data.k[t + 1].t) {
                                        e - data.k[t].t > data.k[t + 1].t - e ? (a = t + 2,
                                            s = data.k[t + 1].t) : (a = t + 1,
                                            s = data.k[t].t);
                                        break
                                    }
                                }
                                -1 === a && (a = t + 1,
                                    s = data.k[t].t)
                            }
                        else
                            a = 0,
                                s = 0;
                        var r = {};
                        return r.index = a,
                            r.time = s / elem.comp.globalData.frameRate,
                            r
                    }
                    function key(e) {
                        var t, a, s;
                        if (!data.k.length || "number" == typeof data.k[0])
                            throw new Error("The property has no keyframe at index " + e);
                        e -= 1,
                            t = {
                                time: data.k[e].t / elem.comp.globalData.frameRate,
                                value: []
                            };
                        var i = Object.prototype.hasOwnProperty.call(data.k[e], "s") ? data.k[e].s : data.k[e - 1].e;
                        for (s = i.length,
                                 a = 0; a < s; a += 1)
                            t[a] = i[a],
                                t.value[a] = i[a];
                        return t
                    }
                    function framesToTime(e, t) {
                        return t || (t = elem.comp.globalData.frameRate),
                        e / t
                    }
                    function timeToFrames(e, t) {
                        return e || 0 === e || (e = time),
                        t || (t = elem.comp.globalData.frameRate),
                        e * t
                    }
                    function seedRandom(e) {
                        BMMath.seedrandom(randSeed + e)
                    }
                    function sourceRectAtTime() {
                        return elem.sourceRectAtTime()
                    }
                    function substring(e, t) {
                        return "string" == typeof value ? void 0 === t ? value.substring(e) : value.substring(e, t) : ""
                    }
                    function substr(e, t) {
                        return "string" == typeof value ? void 0 === t ? value.substr(e) : value.substr(e, t) : ""
                    }
                    function posterizeTime(e) {
                        time = 0 === e ? 0 : Math.floor(time * e) / e,
                            value = valueAtTime(time)
                    }
                    var index = elem.data.ind, hasParent = !(!elem.hierarchy || !elem.hierarchy.length), parent, randSeed = Math.floor(1e6 * Math.random()), globalData = elem.globalData;
                    function executeExpression(e) {
                        return value = e,
                            this.frameExpressionId === elem.globalData.frameId && "textSelector" !== this.propType ? value : ("textSelector" === this.propType && (textIndex = this.textIndex,
                                textTotal = this.textTotal,
                                selectorValue = this.selectorValue),
                            thisLayer || (text = elem.layerInterface.text,
                                thisLayer = elem.layerInterface,
                                thisComp = elem.comp.compInterface,
                                toWorld = thisLayer.toWorld.bind(thisLayer),
                                fromWorld = thisLayer.fromWorld.bind(thisLayer),
                                fromComp = thisLayer.fromComp.bind(thisLayer),
                                toComp = thisLayer.toComp.bind(thisLayer),
                                mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null,
                                fromCompToSurface = fromComp),
                            transform || (transform = elem.layerInterface("ADBE Transform Group"),
                                $bm_transform = transform,
                            transform && (anchorPoint = transform.anchorPoint)),
                            4 !== elemType || content || (content = thisLayer("ADBE Root Vectors Group")),
                            effect || (effect = thisLayer(4)),
                            (hasParent = !(!elem.hierarchy || !elem.hierarchy.length)) && !parent && (parent = elem.hierarchy[0].layerInterface),
                                time = this.comp.renderedFrame / this.comp.globalData.frameRate,
                            _needsRandom && seedRandom(randSeed + time),
                            needsVelocity && (velocity = velocityAtTime(time)),
                                expression_function(),
                                this.frameExpressionId = elem.globalData.frameId,
                                scoped_bm_rt = scoped_bm_rt.propType === propTypes.SHAPE ? scoped_bm_rt.v : scoped_bm_rt)
                    }
                    return executeExpression.__preventDeadCodeRemoval = [$bm_transform, anchorPoint, time, velocity, inPoint, outPoint, width, height, name, loop_in, loop_out, smooth, toComp, fromCompToSurface, toWorld, fromWorld, mask, position, rotation, scale, thisComp, numKeys, active, wiggle, loopInDuration, loopOutDuration, comp, lookAt, easeOut, easeIn, ease, nearestKey, key, text, textIndex, textTotal, selectorValue, framesToTime, timeToFrames, sourceRectAtTime, substring, substr, posterizeTime, index, globalData],
                        executeExpression
                }
                return ob.initiateExpression = initiateExpression,
                    ob.__preventDeadCodeRemoval = [window, document, XMLHttpRequest, fetch, frames, $bm_neg, add, $bm_sum, $bm_sub, $bm_mul, $bm_div, $bm_mod, clamp, radians_to_degrees, degreesToRadians, degrees_to_radians, normalize, rgbToHsl, hslToRgb, linear, random, createPath, _lottieGlobal],
                    ob.resetFrame = resetFrame,
                    ob
            }()
                , Expressions = function() {
                var e = {
                    initExpressions: function(e) {
                        var t = 0
                            , a = [];
                        e.renderer.compInterface = CompExpressionInterface(e.renderer),
                            e.renderer.globalData.projectInterface.registerComposition(e.renderer),
                            e.renderer.globalData.pushExpression = function() {
                                t += 1
                            }
                            ,
                            e.renderer.globalData.popExpression = function() {
                                0 == (t -= 1) && function() {
                                    var e, t = a.length;
                                    for (e = 0; e < t; e += 1)
                                        a[e].release();
                                    a.length = 0
                                }()
                            }
                            ,
                            e.renderer.globalData.registerExpressionProperty = function(e) {
                                -1 === a.indexOf(e) && a.push(e)
                            }
                    }
                };
                return e.resetFrame = ExpressionManager.resetFrame,
                    e
            }()
                , MaskManagerInterface = function() {
                function e(e, t) {
                    this._mask = e,
                        this._data = t
                }
                return Object.defineProperty(e.prototype, "maskPath", {
                    get: function() {
                        return this._mask.prop.k && this._mask.prop.getValue(),
                            this._mask.prop
                    }
                }),
                    Object.defineProperty(e.prototype, "maskOpacity", {
                        get: function() {
                            return this._mask.op.k && this._mask.op.getValue(),
                            100 * this._mask.op.v
                        }
                    }),
                    function(t) {
                        var a, s = createSizedArray(t.viewData.length), i = t.viewData.length;
                        for (a = 0; a < i; a += 1)
                            s[a] = new e(t.viewData[a],t.masksProperties[a]);
                        return function(e) {
                            for (a = 0; a < i; ) {
                                if (t.masksProperties[a].nm === e)
                                    return s[a];
                                a += 1
                            }
                            return null
                        }
                    }
            }()
                , ExpressionPropertyInterface = function() {
                var e = {
                    pv: 0,
                    v: 0,
                    mult: 1
                }
                    , t = {
                    pv: [0, 0, 0],
                    v: [0, 0, 0],
                    mult: 1
                };
                function a(e, t, a) {
                    Object.defineProperty(e, "velocity", {
                        get: function() {
                            return t.getVelocityAtTime(t.comp.currentFrame)
                        }
                    }),
                        e.numKeys = t.keyframes ? t.keyframes.length : 0,
                        e.key = function(s) {
                            if (!e.numKeys)
                                return 0;
                            var i = "";
                            i = "s"in t.keyframes[s - 1] ? t.keyframes[s - 1].s : "e"in t.keyframes[s - 2] ? t.keyframes[s - 2].e : t.keyframes[s - 2].s;
                            var r = "unidimensional" === a ? new Number(i) : Object.assign({}, i);
                            return r.time = t.keyframes[s - 1].t / t.elem.comp.globalData.frameRate,
                                r.value = "unidimensional" === a ? i[0] : i,
                                r
                        }
                        ,
                        e.valueAtTime = t.getValueAtTime,
                        e.speedAtTime = t.getSpeedAtTime,
                        e.velocityAtTime = t.getVelocityAtTime,
                        e.propertyGroup = t.propertyGroup
                }
                function s() {
                    return e
                }
                return function(i) {
                    return i ? "unidimensional" === i.propType ? function(t) {
                        t && "pv"in t || (t = e);
                        var s = 1 / t.mult
                            , i = t.pv * s
                            , r = new Number(i);
                        return r.value = i,
                            a(r, t, "unidimensional"),
                            function() {
                                return t.k && t.getValue(),
                                    i = t.v * s,
                                r.value !== i && ((r = new Number(i)).value = i,
                                    a(r, t, "unidimensional")),
                                    r
                            }
                    }(i) : function(e) {
                        e && "pv"in e || (e = t);
                        var s = 1 / e.mult
                            , i = e.data && e.data.l || e.pv.length
                            , r = createTypedArray("float32", i)
                            , o = createTypedArray("float32", i);
                        return r.value = o,
                            a(r, e, "multidimensional"),
                            function() {
                                e.k && e.getValue();
                                for (var t = 0; t < i; t += 1)
                                    o[t] = e.v[t] * s,
                                        r[t] = o[t];
                                return r
                            }
                    }(i) : s
                }
            }()
                , TransformExpressionInterface = function(e) {
                function t(e) {
                    switch (e) {
                        case "scale":
                        case "Scale":
                        case "ADBE Scale":
                        case 6:
                            return t.scale;
                        case "rotation":
                        case "Rotation":
                        case "ADBE Rotation":
                        case "ADBE Rotate Z":
                        case 10:
                            return t.rotation;
                        case "ADBE Rotate X":
                            return t.xRotation;
                        case "ADBE Rotate Y":
                            return t.yRotation;
                        case "position":
                        case "Position":
                        case "ADBE Position":
                        case 2:
                            return t.position;
                        case "ADBE Position_0":
                            return t.xPosition;
                        case "ADBE Position_1":
                            return t.yPosition;
                        case "ADBE Position_2":
                            return t.zPosition;
                        case "anchorPoint":
                        case "AnchorPoint":
                        case "Anchor Point":
                        case "ADBE AnchorPoint":
                        case 1:
                            return t.anchorPoint;
                        case "opacity":
                        case "Opacity":
                        case 11:
                            return t.opacity;
                        default:
                            return null
                    }
                }
                var a, s, i, r;
                return Object.defineProperty(t, "rotation", {
                    get: ExpressionPropertyInterface(e.r || e.rz)
                }),
                    Object.defineProperty(t, "zRotation", {
                        get: ExpressionPropertyInterface(e.rz || e.r)
                    }),
                    Object.defineProperty(t, "xRotation", {
                        get: ExpressionPropertyInterface(e.rx)
                    }),
                    Object.defineProperty(t, "yRotation", {
                        get: ExpressionPropertyInterface(e.ry)
                    }),
                    Object.defineProperty(t, "scale", {
                        get: ExpressionPropertyInterface(e.s)
                    }),
                    e.p ? r = ExpressionPropertyInterface(e.p) : (a = ExpressionPropertyInterface(e.px),
                        s = ExpressionPropertyInterface(e.py),
                    e.pz && (i = ExpressionPropertyInterface(e.pz))),
                    Object.defineProperty(t, "position", {
                        get: function() {
                            return e.p ? r() : [a(), s(), i ? i() : 0]
                        }
                    }),
                    Object.defineProperty(t, "xPosition", {
                        get: ExpressionPropertyInterface(e.px)
                    }),
                    Object.defineProperty(t, "yPosition", {
                        get: ExpressionPropertyInterface(e.py)
                    }),
                    Object.defineProperty(t, "zPosition", {
                        get: ExpressionPropertyInterface(e.pz)
                    }),
                    Object.defineProperty(t, "anchorPoint", {
                        get: ExpressionPropertyInterface(e.a)
                    }),
                    Object.defineProperty(t, "opacity", {
                        get: ExpressionPropertyInterface(e.o)
                    }),
                    Object.defineProperty(t, "skew", {
                        get: ExpressionPropertyInterface(e.sk)
                    }),
                    Object.defineProperty(t, "skewAxis", {
                        get: ExpressionPropertyInterface(e.sa)
                    }),
                    Object.defineProperty(t, "orientation", {
                        get: ExpressionPropertyInterface(e.or)
                    }),
                    t
            }
                , LayerExpressionInterface = function() {
                function e(e) {
                    var t = new Matrix;
                    return void 0 !== e ? this._elem.finalTransform.mProp.getValueAtTime(e).clone(t) : this._elem.finalTransform.mProp.applyToMatrix(t),
                        t
                }
                function t(e, t) {
                    var a = this.getMatrix(t);
                    return a.props[12] = 0,
                        a.props[13] = 0,
                        a.props[14] = 0,
                        this.applyPoint(a, e)
                }
                function a(e, t) {
                    var a = this.getMatrix(t);
                    return this.applyPoint(a, e)
                }
                function s(e, t) {
                    var a = this.getMatrix(t);
                    return a.props[12] = 0,
                        a.props[13] = 0,
                        a.props[14] = 0,
                        this.invertPoint(a, e)
                }
                function i(e, t) {
                    var a = this.getMatrix(t);
                    return this.invertPoint(a, e)
                }
                function r(e, t) {
                    if (this._elem.hierarchy && this._elem.hierarchy.length) {
                        var a, s = this._elem.hierarchy.length;
                        for (a = 0; a < s; a += 1)
                            this._elem.hierarchy[a].finalTransform.mProp.applyToMatrix(e)
                    }
                    return e.applyToPointArray(t[0], t[1], t[2] || 0)
                }
                function o(e, t) {
                    if (this._elem.hierarchy && this._elem.hierarchy.length) {
                        var a, s = this._elem.hierarchy.length;
                        for (a = 0; a < s; a += 1)
                            this._elem.hierarchy[a].finalTransform.mProp.applyToMatrix(e)
                    }
                    return e.inversePoint(t)
                }
                function n(e) {
                    var t = new Matrix;
                    if (t.reset(),
                        this._elem.finalTransform.mProp.applyToMatrix(t),
                    this._elem.hierarchy && this._elem.hierarchy.length) {
                        var a, s = this._elem.hierarchy.length;
                        for (a = 0; a < s; a += 1)
                            this._elem.hierarchy[a].finalTransform.mProp.applyToMatrix(t);
                        return t.inversePoint(e)
                    }
                    return t.inversePoint(e)
                }
                function l() {
                    return [1, 1, 1, 1]
                }
                return function(c) {
                    var d;
                    function h(e) {
                        switch (e) {
                            case "ADBE Root Vectors Group":
                            case "Contents":
                            case 2:
                                return h.shapeInterface;
                            case 1:
                            case 6:
                            case "Transform":
                            case "transform":
                            case "ADBE Transform Group":
                                return d;
                            case 4:
                            case "ADBE Effect Parade":
                            case "effects":
                            case "Effects":
                                return h.effect;
                            case "ADBE Text Properties":
                                return h.textInterface;
                            default:
                                return null
                        }
                    }
                    h.getMatrix = e,
                        h.invertPoint = o,
                        h.applyPoint = r,
                        h.toWorld = a,
                        h.toWorldVec = t,
                        h.fromWorld = i,
                        h.fromWorldVec = s,
                        h.toComp = a,
                        h.fromComp = n,
                        h.sampleImage = l,
                        h.sourceRectAtTime = c.sourceRectAtTime.bind(c),
                        h._elem = c;
                    var p = getDescriptor(d = TransformExpressionInterface(c.finalTransform.mProp), "anchorPoint");
                    return Object.defineProperties(h, {
                        hasParent: {
                            get: function() {
                                return c.hierarchy.length
                            }
                        },
                        parent: {
                            get: function() {
                                return c.hierarchy[0].layerInterface
                            }
                        },
                        rotation: getDescriptor(d, "rotation"),
                        scale: getDescriptor(d, "scale"),
                        position: getDescriptor(d, "position"),
                        opacity: getDescriptor(d, "opacity"),
                        anchorPoint: p,
                        anchor_point: p,
                        transform: {
                            get: function() {
                                return d
                            }
                        },
                        active: {
                            get: function() {
                                return c.isInRange
                            }
                        }
                    }),
                        h.startTime = c.data.st,
                        h.index = c.data.ind,
                        h.source = c.data.refId,
                        h.height = 0 === c.data.ty ? c.data.h : 100,
                        h.width = 0 === c.data.ty ? c.data.w : 100,
                        h.inPoint = c.data.ip / c.comp.globalData.frameRate,
                        h.outPoint = c.data.op / c.comp.globalData.frameRate,
                        h._name = c.data.nm,
                        h.registerMaskInterface = function(e) {
                            h.mask = new MaskManagerInterface(e,c)
                        }
                        ,
                        h.registerEffectsInterface = function(e) {
                            h.effect = e
                        }
                        ,
                        h
                }
            }()
                , propertyGroupFactory = function(e, t) {
                return function(a) {
                    return (a = void 0 === a ? 1 : a) <= 0 ? e : t(a - 1)
                }
            }
                , PropertyInterface = function(e, t) {
                var a = {
                    _name: e
                };
                return function(e) {
                    return (e = void 0 === e ? 1 : e) <= 0 ? a : t(e - 1)
                }
            }
                , EffectsExpressionInterface = function() {
                function e(a, s, i, r) {
                    function o(e) {
                        for (var t = a.ef, s = 0, i = t.length; s < i; ) {
                            if (e === t[s].nm || e === t[s].mn || e === t[s].ix)
                                return 5 === t[s].ty ? c[s] : c[s]();
                            s += 1
                        }
                        throw new Error
                    }
                    var n, l = propertyGroupFactory(o, i), c = [], d = a.ef.length;
                    for (n = 0; n < d; n += 1)
                        5 === a.ef[n].ty ? c.push(e(a.ef[n], s.effectElements[n], s.effectElements[n].propertyGroup, r)) : c.push(t(s.effectElements[n], a.ef[n].ty, r, l));
                    return "ADBE Color Control" === a.mn && Object.defineProperty(o, "color", {
                        get: function() {
                            return c[0]()
                        }
                    }),
                        Object.defineProperties(o, {
                            numProperties: {
                                get: function() {
                                    return a.np
                                }
                            },
                            _name: {
                                value: a.nm
                            },
                            propertyGroup: {
                                value: l
                            }
                        }),
                        o.enabled = 0 !== a.en,
                        o.active = o.enabled,
                        o
                }
                function t(e, t, a, s) {
                    var i = ExpressionPropertyInterface(e.p);
                    return e.p.setGroupProperty && e.p.setGroupProperty(PropertyInterface("", s)),
                        function() {
                            return 10 === t ? a.comp.compInterface(e.p.v) : i()
                        }
                }
                return {
                    createEffectsInterface: function(t, a) {
                        if (t.effectsManager) {
                            var s, i = [], r = t.data.ef, o = t.effectsManager.effectElements.length;
                            for (s = 0; s < o; s += 1)
                                i.push(e(r[s], t.effectsManager.effectElements[s], a, t));
                            var n = t.data.ef || []
                                , l = function(e) {
                                for (s = 0,
                                         o = n.length; s < o; ) {
                                    if (e === n[s].nm || e === n[s].mn || e === n[s].ix)
                                        return i[s];
                                    s += 1
                                }
                                return null
                            };
                            return Object.defineProperty(l, "numProperties", {
                                get: function() {
                                    return n.length
                                }
                            }),
                                l
                        }
                        return null
                    }
                }
            }()
                , ShapePathInterface = function(e, t, a) {
                var s = t.sh;
                function i(e) {
                    return "Shape" === e || "shape" === e || "Path" === e || "path" === e || "ADBE Vector Shape" === e || 2 === e ? i.path : null
                }
                var r = propertyGroupFactory(i, a);
                return s.setGroupProperty(PropertyInterface("Path", r)),
                    Object.defineProperties(i, {
                        path: {
                            get: function() {
                                return s.k && s.getValue(),
                                    s
                            }
                        },
                        shape: {
                            get: function() {
                                return s.k && s.getValue(),
                                    s
                            }
                        },
                        _name: {
                            value: e.nm
                        },
                        ix: {
                            value: e.ix
                        },
                        propertyIndex: {
                            value: e.ix
                        },
                        mn: {
                            value: e.mn
                        },
                        propertyGroup: {
                            value: a
                        }
                    }),
                    i
            }
                , ShapeExpressionInterface = function() {
                function e(e, o, p) {
                    var u, m = [], f = e ? e.length : 0;
                    for (u = 0; u < f; u += 1)
                        "gr" === e[u].ty ? m.push(t(e[u], o[u], p)) : "fl" === e[u].ty ? m.push(a(e[u], o[u], p)) : "st" === e[u].ty ? m.push(i(e[u], o[u], p)) : "tm" === e[u].ty ? m.push(r(e[u], o[u], p)) : "tr" === e[u].ty || ("el" === e[u].ty ? m.push(n(e[u], o[u], p)) : "sr" === e[u].ty ? m.push(l(e[u], o[u], p)) : "sh" === e[u].ty ? m.push(ShapePathInterface(e[u], o[u], p)) : "rc" === e[u].ty ? m.push(c(e[u], o[u], p)) : "rd" === e[u].ty ? m.push(d(e[u], o[u], p)) : "rp" === e[u].ty ? m.push(h(e[u], o[u], p)) : "gf" === e[u].ty ? m.push(s(e[u], o[u], p)) : m.push((e[u],
                                o[u],
                                function() {
                                    return null
                                }
                        )));
                    return m
                }
                function t(t, a, s) {
                    var i = function(e) {
                        switch (e) {
                            case "ADBE Vectors Group":
                            case "Contents":
                            case 2:
                                return i.content;
                            default:
                                return i.transform
                        }
                    };
                    i.propertyGroup = propertyGroupFactory(i, s);
                    var r = function(t, a, s) {
                        var i, r = function(e) {
                            for (var t = 0, a = i.length; t < a; ) {
                                if (i[t]._name === e || i[t].mn === e || i[t].propertyIndex === e || i[t].ix === e || i[t].ind === e)
                                    return i[t];
                                t += 1
                            }
                            return "number" == typeof e ? i[e - 1] : null
                        };
                        r.propertyGroup = propertyGroupFactory(r, s),
                            i = e(t.it, a.it, r.propertyGroup),
                            r.numProperties = i.length;
                        var n = o(t.it[t.it.length - 1], a.it[a.it.length - 1], r.propertyGroup);
                        return r.transform = n,
                            r.propertyIndex = t.cix,
                            r._name = t.nm,
                            r
                    }(t, a, i.propertyGroup)
                        , n = o(t.it[t.it.length - 1], a.it[a.it.length - 1], i.propertyGroup);
                    return i.content = r,
                        i.transform = n,
                        Object.defineProperty(i, "_name", {
                            get: function() {
                                return t.nm
                            }
                        }),
                        i.numProperties = t.np,
                        i.propertyIndex = t.ix,
                        i.nm = t.nm,
                        i.mn = t.mn,
                        i
                }
                function a(e, t, a) {
                    function s(e) {
                        return "Color" === e || "color" === e ? s.color : "Opacity" === e || "opacity" === e ? s.opacity : null
                    }
                    return Object.defineProperties(s, {
                        color: {
                            get: ExpressionPropertyInterface(t.c)
                        },
                        opacity: {
                            get: ExpressionPropertyInterface(t.o)
                        },
                        _name: {
                            value: e.nm
                        },
                        mn: {
                            value: e.mn
                        }
                    }),
                        t.c.setGroupProperty(PropertyInterface("Color", a)),
                        t.o.setGroupProperty(PropertyInterface("Opacity", a)),
                        s
                }
                function s(e, t, a) {
                    function s(e) {
                        return "Start Point" === e || "start point" === e ? s.startPoint : "End Point" === e || "end point" === e ? s.endPoint : "Opacity" === e || "opacity" === e ? s.opacity : null
                    }
                    return Object.defineProperties(s, {
                        startPoint: {
                            get: ExpressionPropertyInterface(t.s)
                        },
                        endPoint: {
                            get: ExpressionPropertyInterface(t.e)
                        },
                        opacity: {
                            get: ExpressionPropertyInterface(t.o)
                        },
                        type: {
                            get: function() {
                                return "a"
                            }
                        },
                        _name: {
                            value: e.nm
                        },
                        mn: {
                            value: e.mn
                        }
                    }),
                        t.s.setGroupProperty(PropertyInterface("Start Point", a)),
                        t.e.setGroupProperty(PropertyInterface("End Point", a)),
                        t.o.setGroupProperty(PropertyInterface("Opacity", a)),
                        s
                }
                function i(e, t, a) {
                    var s, i, r = propertyGroupFactory(c, a), o = propertyGroupFactory(l, r), n = e.d ? e.d.length : 0, l = {};
                    for (s = 0; s < n; s += 1)
                        i = s,
                            Object.defineProperty(l, e.d[i].nm, {
                                get: ExpressionPropertyInterface(t.d.dataProps[i].p)
                            }),
                            t.d.dataProps[s].p.setGroupProperty(o);
                    function c(e) {
                        return "Color" === e || "color" === e ? c.color : "Opacity" === e || "opacity" === e ? c.opacity : "Stroke Width" === e || "stroke width" === e ? c.strokeWidth : null
                    }
                    return Object.defineProperties(c, {
                        color: {
                            get: ExpressionPropertyInterface(t.c)
                        },
                        opacity: {
                            get: ExpressionPropertyInterface(t.o)
                        },
                        strokeWidth: {
                            get: ExpressionPropertyInterface(t.w)
                        },
                        dash: {
                            get: function() {
                                return l
                            }
                        },
                        _name: {
                            value: e.nm
                        },
                        mn: {
                            value: e.mn
                        }
                    }),
                        t.c.setGroupProperty(PropertyInterface("Color", r)),
                        t.o.setGroupProperty(PropertyInterface("Opacity", r)),
                        t.w.setGroupProperty(PropertyInterface("Stroke Width", r)),
                        c
                }
                function r(e, t, a) {
                    function s(t) {
                        return t === e.e.ix || "End" === t || "end" === t ? s.end : t === e.s.ix ? s.start : t === e.o.ix ? s.offset : null
                    }
                    var i = propertyGroupFactory(s, a);
                    return s.propertyIndex = e.ix,
                        t.s.setGroupProperty(PropertyInterface("Start", i)),
                        t.e.setGroupProperty(PropertyInterface("End", i)),
                        t.o.setGroupProperty(PropertyInterface("Offset", i)),
                        s.propertyIndex = e.ix,
                        s.propertyGroup = a,
                        Object.defineProperties(s, {
                            start: {
                                get: ExpressionPropertyInterface(t.s)
                            },
                            end: {
                                get: ExpressionPropertyInterface(t.e)
                            },
                            offset: {
                                get: ExpressionPropertyInterface(t.o)
                            },
                            _name: {
                                value: e.nm
                            }
                        }),
                        s.mn = e.mn,
                        s
                }
                function o(e, t, a) {
                    function s(t) {
                        return e.a.ix === t || "Anchor Point" === t ? s.anchorPoint : e.o.ix === t || "Opacity" === t ? s.opacity : e.p.ix === t || "Position" === t ? s.position : e.r.ix === t || "Rotation" === t || "ADBE Vector Rotation" === t ? s.rotation : e.s.ix === t || "Scale" === t ? s.scale : e.sk && e.sk.ix === t || "Skew" === t ? s.skew : e.sa && e.sa.ix === t || "Skew Axis" === t ? s.skewAxis : null
                    }
                    var i = propertyGroupFactory(s, a);
                    return t.transform.mProps.o.setGroupProperty(PropertyInterface("Opacity", i)),
                        t.transform.mProps.p.setGroupProperty(PropertyInterface("Position", i)),
                        t.transform.mProps.a.setGroupProperty(PropertyInterface("Anchor Point", i)),
                        t.transform.mProps.s.setGroupProperty(PropertyInterface("Scale", i)),
                        t.transform.mProps.r.setGroupProperty(PropertyInterface("Rotation", i)),
                    t.transform.mProps.sk && (t.transform.mProps.sk.setGroupProperty(PropertyInterface("Skew", i)),
                        t.transform.mProps.sa.setGroupProperty(PropertyInterface("Skew Angle", i))),
                        t.transform.op.setGroupProperty(PropertyInterface("Opacity", i)),
                        Object.defineProperties(s, {
                            opacity: {
                                get: ExpressionPropertyInterface(t.transform.mProps.o)
                            },
                            position: {
                                get: ExpressionPropertyInterface(t.transform.mProps.p)
                            },
                            anchorPoint: {
                                get: ExpressionPropertyInterface(t.transform.mProps.a)
                            },
                            scale: {
                                get: ExpressionPropertyInterface(t.transform.mProps.s)
                            },
                            rotation: {
                                get: ExpressionPropertyInterface(t.transform.mProps.r)
                            },
                            skew: {
                                get: ExpressionPropertyInterface(t.transform.mProps.sk)
                            },
                            skewAxis: {
                                get: ExpressionPropertyInterface(t.transform.mProps.sa)
                            },
                            _name: {
                                value: e.nm
                            }
                        }),
                        s.ty = "tr",
                        s.mn = e.mn,
                        s.propertyGroup = a,
                        s
                }
                function n(e, t, a) {
                    function s(t) {
                        return e.p.ix === t ? s.position : e.s.ix === t ? s.size : null
                    }
                    var i = propertyGroupFactory(s, a);
                    s.propertyIndex = e.ix;
                    var r = "tm" === t.sh.ty ? t.sh.prop : t.sh;
                    return r.s.setGroupProperty(PropertyInterface("Size", i)),
                        r.p.setGroupProperty(PropertyInterface("Position", i)),
                        Object.defineProperties(s, {
                            size: {
                                get: ExpressionPropertyInterface(r.s)
                            },
                            position: {
                                get: ExpressionPropertyInterface(r.p)
                            },
                            _name: {
                                value: e.nm
                            }
                        }),
                        s.mn = e.mn,
                        s
                }
                function l(e, t, a) {
                    function s(t) {
                        return e.p.ix === t ? s.position : e.r.ix === t ? s.rotation : e.pt.ix === t ? s.points : e.or.ix === t || "ADBE Vector Star Outer Radius" === t ? s.outerRadius : e.os.ix === t ? s.outerRoundness : !e.ir || e.ir.ix !== t && "ADBE Vector Star Inner Radius" !== t ? e.is && e.is.ix === t ? s.innerRoundness : null : s.innerRadius
                    }
                    var i = propertyGroupFactory(s, a)
                        , r = "tm" === t.sh.ty ? t.sh.prop : t.sh;
                    return s.propertyIndex = e.ix,
                        r.or.setGroupProperty(PropertyInterface("Outer Radius", i)),
                        r.os.setGroupProperty(PropertyInterface("Outer Roundness", i)),
                        r.pt.setGroupProperty(PropertyInterface("Points", i)),
                        r.p.setGroupProperty(PropertyInterface("Position", i)),
                        r.r.setGroupProperty(PropertyInterface("Rotation", i)),
                    e.ir && (r.ir.setGroupProperty(PropertyInterface("Inner Radius", i)),
                        r.is.setGroupProperty(PropertyInterface("Inner Roundness", i))),
                        Object.defineProperties(s, {
                            position: {
                                get: ExpressionPropertyInterface(r.p)
                            },
                            rotation: {
                                get: ExpressionPropertyInterface(r.r)
                            },
                            points: {
                                get: ExpressionPropertyInterface(r.pt)
                            },
                            outerRadius: {
                                get: ExpressionPropertyInterface(r.or)
                            },
                            outerRoundness: {
                                get: ExpressionPropertyInterface(r.os)
                            },
                            innerRadius: {
                                get: ExpressionPropertyInterface(r.ir)
                            },
                            innerRoundness: {
                                get: ExpressionPropertyInterface(r.is)
                            },
                            _name: {
                                value: e.nm
                            }
                        }),
                        s.mn = e.mn,
                        s
                }
                function c(e, t, a) {
                    function s(t) {
                        return e.p.ix === t ? s.position : e.r.ix === t ? s.roundness : e.s.ix === t || "Size" === t || "ADBE Vector Rect Size" === t ? s.size : null
                    }
                    var i = propertyGroupFactory(s, a)
                        , r = "tm" === t.sh.ty ? t.sh.prop : t.sh;
                    return s.propertyIndex = e.ix,
                        r.p.setGroupProperty(PropertyInterface("Position", i)),
                        r.s.setGroupProperty(PropertyInterface("Size", i)),
                        r.r.setGroupProperty(PropertyInterface("Rotation", i)),
                        Object.defineProperties(s, {
                            position: {
                                get: ExpressionPropertyInterface(r.p)
                            },
                            roundness: {
                                get: ExpressionPropertyInterface(r.r)
                            },
                            size: {
                                get: ExpressionPropertyInterface(r.s)
                            },
                            _name: {
                                value: e.nm
                            }
                        }),
                        s.mn = e.mn,
                        s
                }
                function d(e, t, a) {
                    function s(t) {
                        return e.r.ix === t || "Round Corners 1" === t ? s.radius : null
                    }
                    var i = propertyGroupFactory(s, a)
                        , r = t;
                    return s.propertyIndex = e.ix,
                        r.rd.setGroupProperty(PropertyInterface("Radius", i)),
                        Object.defineProperties(s, {
                            radius: {
                                get: ExpressionPropertyInterface(r.rd)
                            },
                            _name: {
                                value: e.nm
                            }
                        }),
                        s.mn = e.mn,
                        s
                }
                function h(e, t, a) {
                    function s(t) {
                        return e.c.ix === t || "Copies" === t ? s.copies : e.o.ix === t || "Offset" === t ? s.offset : null
                    }
                    var i = propertyGroupFactory(s, a)
                        , r = t;
                    return s.propertyIndex = e.ix,
                        r.c.setGroupProperty(PropertyInterface("Copies", i)),
                        r.o.setGroupProperty(PropertyInterface("Offset", i)),
                        Object.defineProperties(s, {
                            copies: {
                                get: ExpressionPropertyInterface(r.c)
                            },
                            offset: {
                                get: ExpressionPropertyInterface(r.o)
                            },
                            _name: {
                                value: e.nm
                            }
                        }),
                        s.mn = e.mn,
                        s
                }
                return function(t, a, s) {
                    var i;
                    function r(e) {
                        if ("number" == typeof e)
                            return 0 === (e = void 0 === e ? 1 : e) ? s : i[e - 1];
                        for (var t = 0, a = i.length; t < a; ) {
                            if (i[t]._name === e)
                                return i[t];
                            t += 1
                        }
                        return null
                    }
                    return r.propertyGroup = propertyGroupFactory(r, (function() {
                            return s
                        }
                    )),
                        i = e(t, a, r.propertyGroup),
                        r.numProperties = i.length,
                        r._name = "Contents",
                        r
                }
            }()
                , TextExpressionInterface = function(e) {
                var t;
                function a(e) {
                    return "ADBE Text Document" === e ? a.sourceText : null
                }
                return Object.defineProperty(a, "sourceText", {
                    get: function() {
                        e.textProperty.getValue();
                        var a = e.textProperty.currentData.t;
                        return t && a === t.value || ((t = new String(a)).value = a || new String(a),
                            Object.defineProperty(t, "style", {
                                get: function() {
                                    return {
                                        fillColor: e.textProperty.currentData.fc
                                    }
                                }
                            })),
                            t
                    }
                }),
                    a
            };
            function _typeof(e) {
                return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                            return typeof e
                        }
                        : function(e) {
                            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                        }
                )(e)
            }
            var FootageInterface = (dataInterfaceFactory = function(e) {
                    function t(e) {
                        return "Outline" === e ? t.outlineInterface() : null
                    }
                    return t._name = "Outline",
                        t.outlineInterface = function(e) {
                            var t = ""
                                , a = e.getFootageData();
                            function s(e) {
                                if (a[e])
                                    return t = e,
                                        "object" === _typeof(a = a[e]) ? s : a;
                                var i = e.indexOf(t);
                                if (-1 !== i) {
                                    var r = parseInt(e.substr(i + t.length), 10);
                                    return "object" === _typeof(a = a[r]) ? s : a
                                }
                                return ""
                            }
                            return function() {
                                return t = "",
                                    a = e.getFootageData(),
                                    s
                            }
                        }(e),
                        t
                }
                    ,
                    function(e) {
                        function t(e) {
                            return "Data" === e ? t.dataInterface : null
                        }
                        return t._name = "Data",
                            t.dataInterface = dataInterfaceFactory(e),
                            t
                    }
            ), dataInterfaceFactory, interfaces = {
                layer: LayerExpressionInterface,
                effects: EffectsExpressionInterface,
                comp: CompExpressionInterface,
                shape: ShapeExpressionInterface,
                text: TextExpressionInterface,
                footage: FootageInterface
            };
            function getInterface(e) {
                return interfaces[e] || null
            }
            var expressionHelpers = {
                searchExpressions: function(e, t, a) {
                    t.x && (a.k = !0,
                        a.x = !0,
                        a.initiateExpression = ExpressionManager.initiateExpression,
                        a.effectsSequence.push(a.initiateExpression(e, t, a).bind(a)))
                },
                getSpeedAtTime: function(e) {
                    var t = this.getValueAtTime(e)
                        , a = this.getValueAtTime(e + -.01)
                        , s = 0;
                    if (t.length) {
                        var i;
                        for (i = 0; i < t.length; i += 1)
                            s += Math.pow(a[i] - t[i], 2);
                        s = 100 * Math.sqrt(s)
                    } else
                        s = 0;
                    return s
                },
                getVelocityAtTime: function(e) {
                    if (void 0 !== this.vel)
                        return this.vel;
                    var t, a, s = -.001, i = this.getValueAtTime(e), r = this.getValueAtTime(e + s);
                    if (i.length)
                        for (t = createTypedArray("float32", i.length),
                                 a = 0; a < i.length; a += 1)
                            t[a] = (r[a] - i[a]) / s;
                    else
                        t = (r - i) / s;
                    return t
                },
                getValueAtTime: function(e) {
                    return e *= this.elem.globalData.frameRate,
                    (e -= this.offsetTime) !== this._cachingAtTime.lastFrame && (this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < e ? this._cachingAtTime.lastIndex : 0,
                        this._cachingAtTime.value = this.interpolateValue(e, this._cachingAtTime),
                        this._cachingAtTime.lastFrame = e),
                        this._cachingAtTime.value
                },
                getStaticValueAtTime: function() {
                    return this.pv
                },
                setGroupProperty: function(e) {
                    this.propertyGroup = e
                }
            };
            function addPropertyDecorator() {
                function e(e, t, a) {
                    if (!this.k || !this.keyframes)
                        return this.pv;
                    e = e ? e.toLowerCase() : "";
                    var s, i, r, o, n, l = this.comp.renderedFrame, c = this.keyframes, d = c[c.length - 1].t;
                    if (l <= d)
                        return this.pv;
                    if (a ? i = d - (s = t ? Math.abs(d - this.elem.comp.globalData.frameRate * t) : Math.max(0, d - this.elem.data.ip)) : ((!t || t > c.length - 1) && (t = c.length - 1),
                        s = d - (i = c[c.length - 1 - t].t)),
                    "pingpong" === e) {
                        if (Math.floor((l - i) / s) % 2 != 0)
                            return this.getValueAtTime((s - (l - i) % s + i) / this.comp.globalData.frameRate, 0)
                    } else {
                        if ("offset" === e) {
                            var h = this.getValueAtTime(i / this.comp.globalData.frameRate, 0)
                                , p = this.getValueAtTime(d / this.comp.globalData.frameRate, 0)
                                , u = this.getValueAtTime(((l - i) % s + i) / this.comp.globalData.frameRate, 0)
                                , m = Math.floor((l - i) / s);
                            if (this.pv.length) {
                                for (o = (n = new Array(h.length)).length,
                                         r = 0; r < o; r += 1)
                                    n[r] = (p[r] - h[r]) * m + u[r];
                                return n
                            }
                            return (p - h) * m + u
                        }
                        if ("continue" === e) {
                            var f = this.getValueAtTime(d / this.comp.globalData.frameRate, 0)
                                , v = this.getValueAtTime((d - .001) / this.comp.globalData.frameRate, 0);
                            if (this.pv.length) {
                                for (o = (n = new Array(f.length)).length,
                                         r = 0; r < o; r += 1)
                                    n[r] = f[r] + (f[r] - v[r]) * ((l - d) / this.comp.globalData.frameRate) / 5e-4;
                                return n
                            }
                            return f + (l - d) / .001 * (f - v)
                        }
                    }
                    return this.getValueAtTime(((l - i) % s + i) / this.comp.globalData.frameRate, 0)
                }
                function t(e, t, a) {
                    if (!this.k)
                        return this.pv;
                    e = e ? e.toLowerCase() : "";
                    var s, i, r, o, n, l = this.comp.renderedFrame, c = this.keyframes, d = c[0].t;
                    if (l >= d)
                        return this.pv;
                    if (a ? i = d + (s = t ? Math.abs(this.elem.comp.globalData.frameRate * t) : Math.max(0, this.elem.data.op - d)) : ((!t || t > c.length - 1) && (t = c.length - 1),
                        s = (i = c[t].t) - d),
                    "pingpong" === e) {
                        if (Math.floor((d - l) / s) % 2 == 0)
                            return this.getValueAtTime(((d - l) % s + d) / this.comp.globalData.frameRate, 0)
                    } else {
                        if ("offset" === e) {
                            var h = this.getValueAtTime(d / this.comp.globalData.frameRate, 0)
                                , p = this.getValueAtTime(i / this.comp.globalData.frameRate, 0)
                                , u = this.getValueAtTime((s - (d - l) % s + d) / this.comp.globalData.frameRate, 0)
                                , m = Math.floor((d - l) / s) + 1;
                            if (this.pv.length) {
                                for (o = (n = new Array(h.length)).length,
                                         r = 0; r < o; r += 1)
                                    n[r] = u[r] - (p[r] - h[r]) * m;
                                return n
                            }
                            return u - (p - h) * m
                        }
                        if ("continue" === e) {
                            var f = this.getValueAtTime(d / this.comp.globalData.frameRate, 0)
                                , v = this.getValueAtTime((d + .001) / this.comp.globalData.frameRate, 0);
                            if (this.pv.length) {
                                for (o = (n = new Array(f.length)).length,
                                         r = 0; r < o; r += 1)
                                    n[r] = f[r] + (f[r] - v[r]) * (d - l) / .001;
                                return n
                            }
                            return f + (f - v) * (d - l) / .001
                        }
                    }
                    return this.getValueAtTime((s - ((d - l) % s + d)) / this.comp.globalData.frameRate, 0)
                }
                function a(e, t) {
                    if (!this.k)
                        return this.pv;
                    if (e = .5 * (e || .4),
                    (t = Math.floor(t || 5)) <= 1)
                        return this.pv;
                    var a, s, i = this.comp.renderedFrame / this.comp.globalData.frameRate, r = i - e, o = t > 1 ? (i + e - r) / (t - 1) : 1, n = 0, l = 0;
                    for (a = this.pv.length ? createTypedArray("float32", this.pv.length) : 0; n < t; ) {
                        if (s = this.getValueAtTime(r + n * o),
                            this.pv.length)
                            for (l = 0; l < this.pv.length; l += 1)
                                a[l] += s[l];
                        else
                            a += s;
                        n += 1
                    }
                    if (this.pv.length)
                        for (l = 0; l < this.pv.length; l += 1)
                            a[l] /= t;
                    else
                        a /= t;
                    return a
                }
                function s(e) {
                    this._transformCachingAtTime || (this._transformCachingAtTime = {
                        v: new Matrix
                    });
                    var t = this._transformCachingAtTime.v;
                    if (t.cloneFromProps(this.pre.props),
                    this.appliedTransformations < 1) {
                        var a = this.a.getValueAtTime(e);
                        t.translate(-a[0] * this.a.mult, -a[1] * this.a.mult, a[2] * this.a.mult)
                    }
                    if (this.appliedTransformations < 2) {
                        var s = this.s.getValueAtTime(e);
                        t.scale(s[0] * this.s.mult, s[1] * this.s.mult, s[2] * this.s.mult)
                    }
                    if (this.sk && this.appliedTransformations < 3) {
                        var i = this.sk.getValueAtTime(e)
                            , r = this.sa.getValueAtTime(e);
                        t.skewFromAxis(-i * this.sk.mult, r * this.sa.mult)
                    }
                    if (this.r && this.appliedTransformations < 4) {
                        var o = this.r.getValueAtTime(e);
                        t.rotate(-o * this.r.mult)
                    } else if (!this.r && this.appliedTransformations < 4) {
                        var n = this.rz.getValueAtTime(e)
                            , l = this.ry.getValueAtTime(e)
                            , c = this.rx.getValueAtTime(e)
                            , d = this.or.getValueAtTime(e);
                        t.rotateZ(-n * this.rz.mult).rotateY(l * this.ry.mult).rotateX(c * this.rx.mult).rotateZ(-d[2] * this.or.mult).rotateY(d[1] * this.or.mult).rotateX(d[0] * this.or.mult)
                    }
                    if (this.data.p && this.data.p.s) {
                        var h = this.px.getValueAtTime(e)
                            , p = this.py.getValueAtTime(e);
                        if (this.data.p.z) {
                            var u = this.pz.getValueAtTime(e);
                            t.translate(h * this.px.mult, p * this.py.mult, -u * this.pz.mult)
                        } else
                            t.translate(h * this.px.mult, p * this.py.mult, 0)
                    } else {
                        var m = this.p.getValueAtTime(e);
                        t.translate(m[0] * this.p.mult, m[1] * this.p.mult, -m[2] * this.p.mult)
                    }
                    return t
                }
                function i() {
                    return this.v.clone(new Matrix)
                }
                var r = TransformPropertyFactory.getTransformProperty;
                TransformPropertyFactory.getTransformProperty = function(e, t, a) {
                    var o = r(e, t, a);
                    return o.dynamicProperties.length ? o.getValueAtTime = s.bind(o) : o.getValueAtTime = i.bind(o),
                        o.setGroupProperty = expressionHelpers.setGroupProperty,
                        o
                }
                ;
                var o = PropertyFactory.getProp;
                PropertyFactory.getProp = function(s, i, r, n, l) {
                    var c = o(s, i, r, n, l);
                    c.kf ? c.getValueAtTime = expressionHelpers.getValueAtTime.bind(c) : c.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(c),
                        c.setGroupProperty = expressionHelpers.setGroupProperty,
                        c.loopOut = e,
                        c.loopIn = t,
                        c.smooth = a,
                        c.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(c),
                        c.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(c),
                        c.numKeys = 1 === i.a ? i.k.length : 0,
                        c.propertyIndex = i.ix;
                    var d = 0;
                    return 0 !== r && (d = createTypedArray("float32", 1 === i.a ? i.k[0].s.length : i.k.length)),
                        c._cachingAtTime = {
                            lastFrame: initialDefaultFrame,
                            lastIndex: 0,
                            value: d
                        },
                        expressionHelpers.searchExpressions(s, i, c),
                    c.k && l.addDynamicProperty(c),
                        c
                }
                ;
                var n = ShapePropertyFactory.getConstructorFunction()
                    , l = ShapePropertyFactory.getKeyframedConstructorFunction();
                function c() {}
                c.prototype = {
                    vertices: function(e, t) {
                        this.k && this.getValue();
                        var a, s = this.v;
                        void 0 !== t && (s = this.getValueAtTime(t, 0));
                        var i = s._length
                            , r = s[e]
                            , o = s.v
                            , n = createSizedArray(i);
                        for (a = 0; a < i; a += 1)
                            n[a] = "i" === e || "o" === e ? [r[a][0] - o[a][0], r[a][1] - o[a][1]] : [r[a][0], r[a][1]];
                        return n
                    },
                    points: function(e) {
                        return this.vertices("v", e)
                    },
                    inTangents: function(e) {
                        return this.vertices("i", e)
                    },
                    outTangents: function(e) {
                        return this.vertices("o", e)
                    },
                    isClosed: function() {
                        return this.v.c
                    },
                    pointOnPath: function(e, t) {
                        var a = this.v;
                        void 0 !== t && (a = this.getValueAtTime(t, 0)),
                        this._segmentsLength || (this._segmentsLength = bez.getSegmentsLength(a));
                        for (var s, i = this._segmentsLength, r = i.lengths, o = i.totalLength * e, n = 0, l = r.length, c = 0; n < l; ) {
                            if (c + r[n].addedLength > o) {
                                var d = n
                                    , h = a.c && n === l - 1 ? 0 : n + 1
                                    , p = (o - c) / r[n].addedLength;
                                s = bez.getPointInSegment(a.v[d], a.v[h], a.o[d], a.i[h], p, r[n]);
                                break
                            }
                            c += r[n].addedLength,
                                n += 1
                        }
                        return s || (s = a.c ? [a.v[0][0], a.v[0][1]] : [a.v[a._length - 1][0], a.v[a._length - 1][1]]),
                            s
                    },
                    vectorOnPath: function(e, t, a) {
                        1 == e ? e = this.v.c : 0 == e && (e = .999);
                        var s = this.pointOnPath(e, t)
                            , i = this.pointOnPath(e + .001, t)
                            , r = i[0] - s[0]
                            , o = i[1] - s[1]
                            , n = Math.sqrt(Math.pow(r, 2) + Math.pow(o, 2));
                        return 0 === n ? [0, 0] : "tangent" === a ? [r / n, o / n] : [-o / n, r / n]
                    },
                    tangentOnPath: function(e, t) {
                        return this.vectorOnPath(e, t, "tangent")
                    },
                    normalOnPath: function(e, t) {
                        return this.vectorOnPath(e, t, "normal")
                    },
                    setGroupProperty: expressionHelpers.setGroupProperty,
                    getValueAtTime: expressionHelpers.getStaticValueAtTime
                },
                    extendPrototype([c], n),
                    extendPrototype([c], l),
                    l.prototype.getValueAtTime = function(e) {
                        return this._cachingAtTime || (this._cachingAtTime = {
                            shapeValue: shapePool.clone(this.pv),
                            lastIndex: 0,
                            lastTime: initialDefaultFrame
                        }),
                            e *= this.elem.globalData.frameRate,
                        (e -= this.offsetTime) !== this._cachingAtTime.lastTime && (this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < e ? this._caching.lastIndex : 0,
                            this._cachingAtTime.lastTime = e,
                            this.interpolateShape(e, this._cachingAtTime.shapeValue, this._cachingAtTime)),
                            this._cachingAtTime.shapeValue
                    }
                    ,
                    l.prototype.initiateExpression = ExpressionManager.initiateExpression;
                var d = ShapePropertyFactory.getShapeProp;
                ShapePropertyFactory.getShapeProp = function(e, t, a, s, i) {
                    var r = d(e, t, a, s, i);
                    return r.propertyIndex = t.ix,
                        r.lock = !1,
                        3 === a ? expressionHelpers.searchExpressions(e, t.pt, r) : 4 === a && expressionHelpers.searchExpressions(e, t.ks, r),
                    r.k && e.addDynamicProperty(r),
                        r
                }
            }
            function initialize$1() {
                addPropertyDecorator()
            }
            function addDecorator() {
                TextProperty.prototype.getExpressionValue = function(e, t) {
                    var a = this.calculateExpression(t);
                    if (e.t !== a) {
                        var s = {};
                        return this.copyData(s, e),
                            s.t = a.toString(),
                            s.__complete = !1,
                            s
                    }
                    return e
                }
                    ,
                    TextProperty.prototype.searchProperty = function() {
                        var e = this.searchKeyframes()
                            , t = this.searchExpressions();
                        return this.kf = e || t,
                            this.kf
                    }
                    ,
                    TextProperty.prototype.searchExpressions = function() {
                        return this.data.d.x ? (this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem, this.data.d, this),
                            this.addEffect(this.getExpressionValue.bind(this)),
                            !0) : null
                    }
            }
            function initialize() {
                addDecorator()
            }
            function SVGComposableEffect() {}
            SVGComposableEffect.prototype = {
                createMergeNode: function(e, t) {
                    var a, s, i = createNS("feMerge");
                    for (i.setAttribute("result", e),
                             s = 0; s < t.length; s += 1)
                        (a = createNS("feMergeNode")).setAttribute("in", t[s]),
                            i.appendChild(a),
                            i.appendChild(a);
                    return i
                }
            };
            var linearFilterValue = "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0";
            function SVGTintFilter(e, t, a, s, i) {
                this.filterManager = t;
                var r = createNS("feColorMatrix");
                r.setAttribute("type", "matrix"),
                    r.setAttribute("color-interpolation-filters", "linearRGB"),
                    r.setAttribute("values", linearFilterValue + " 1 0"),
                    this.linearFilter = r,
                    r.setAttribute("result", s + "_tint_1"),
                    e.appendChild(r),
                    (r = createNS("feColorMatrix")).setAttribute("type", "matrix"),
                    r.setAttribute("color-interpolation-filters", "sRGB"),
                    r.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"),
                    r.setAttribute("result", s + "_tint_2"),
                    e.appendChild(r),
                    this.matrixFilter = r;
                var o = this.createMergeNode(s, [i, s + "_tint_1", s + "_tint_2"]);
                e.appendChild(o)
            }
            function SVGFillFilter(e, t, a, s) {
                this.filterManager = t;
                var i = createNS("feColorMatrix");
                i.setAttribute("type", "matrix"),
                    i.setAttribute("color-interpolation-filters", "sRGB"),
                    i.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"),
                    i.setAttribute("result", s),
                    e.appendChild(i),
                    this.matrixFilter = i
            }
            function SVGStrokeEffect(e, t, a) {
                this.initialized = !1,
                    this.filterManager = t,
                    this.elem = a,
                    this.paths = []
            }
            function SVGTritoneFilter(e, t, a, s) {
                this.filterManager = t;
                var i = createNS("feColorMatrix");
                i.setAttribute("type", "matrix"),
                    i.setAttribute("color-interpolation-filters", "linearRGB"),
                    i.setAttribute("values", "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0"),
                    e.appendChild(i);
                var r = createNS("feComponentTransfer");
                r.setAttribute("color-interpolation-filters", "sRGB"),
                    r.setAttribute("result", s),
                    this.matrixFilter = r;
                var o = createNS("feFuncR");
                o.setAttribute("type", "table"),
                    r.appendChild(o),
                    this.feFuncR = o;
                var n = createNS("feFuncG");
                n.setAttribute("type", "table"),
                    r.appendChild(n),
                    this.feFuncG = n;
                var l = createNS("feFuncB");
                l.setAttribute("type", "table"),
                    r.appendChild(l),
                    this.feFuncB = l,
                    e.appendChild(r)
            }
            function SVGProLevelsFilter(e, t, a, s) {
                this.filterManager = t;
                var i = this.filterManager.effectElements
                    , r = createNS("feComponentTransfer");
                (i[10].p.k || 0 !== i[10].p.v || i[11].p.k || 1 !== i[11].p.v || i[12].p.k || 1 !== i[12].p.v || i[13].p.k || 0 !== i[13].p.v || i[14].p.k || 1 !== i[14].p.v) && (this.feFuncR = this.createFeFunc("feFuncR", r)),
                (i[17].p.k || 0 !== i[17].p.v || i[18].p.k || 1 !== i[18].p.v || i[19].p.k || 1 !== i[19].p.v || i[20].p.k || 0 !== i[20].p.v || i[21].p.k || 1 !== i[21].p.v) && (this.feFuncG = this.createFeFunc("feFuncG", r)),
                (i[24].p.k || 0 !== i[24].p.v || i[25].p.k || 1 !== i[25].p.v || i[26].p.k || 1 !== i[26].p.v || i[27].p.k || 0 !== i[27].p.v || i[28].p.k || 1 !== i[28].p.v) && (this.feFuncB = this.createFeFunc("feFuncB", r)),
                (i[31].p.k || 0 !== i[31].p.v || i[32].p.k || 1 !== i[32].p.v || i[33].p.k || 1 !== i[33].p.v || i[34].p.k || 0 !== i[34].p.v || i[35].p.k || 1 !== i[35].p.v) && (this.feFuncA = this.createFeFunc("feFuncA", r)),
                (this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA) && (r.setAttribute("color-interpolation-filters", "sRGB"),
                    e.appendChild(r)),
                (i[3].p.k || 0 !== i[3].p.v || i[4].p.k || 1 !== i[4].p.v || i[5].p.k || 1 !== i[5].p.v || i[6].p.k || 0 !== i[6].p.v || i[7].p.k || 1 !== i[7].p.v) && ((r = createNS("feComponentTransfer")).setAttribute("color-interpolation-filters", "sRGB"),
                    r.setAttribute("result", s),
                    e.appendChild(r),
                    this.feFuncRComposed = this.createFeFunc("feFuncR", r),
                    this.feFuncGComposed = this.createFeFunc("feFuncG", r),
                    this.feFuncBComposed = this.createFeFunc("feFuncB", r))
            }
            function SVGDropShadowEffect(e, t, a, s, i) {
                var r = t.container.globalData.renderConfig.filterSize
                    , o = t.data.fs || r;
                e.setAttribute("x", o.x || r.x),
                    e.setAttribute("y", o.y || r.y),
                    e.setAttribute("width", o.width || r.width),
                    e.setAttribute("height", o.height || r.height),
                    this.filterManager = t;
                var n = createNS("feGaussianBlur");
                n.setAttribute("in", "SourceAlpha"),
                    n.setAttribute("result", s + "_drop_shadow_1"),
                    n.setAttribute("stdDeviation", "0"),
                    this.feGaussianBlur = n,
                    e.appendChild(n);
                var l = createNS("feOffset");
                l.setAttribute("dx", "25"),
                    l.setAttribute("dy", "0"),
                    l.setAttribute("in", s + "_drop_shadow_1"),
                    l.setAttribute("result", s + "_drop_shadow_2"),
                    this.feOffset = l,
                    e.appendChild(l);
                var c = createNS("feFlood");
                c.setAttribute("flood-color", "#00ff00"),
                    c.setAttribute("flood-opacity", "1"),
                    c.setAttribute("result", s + "_drop_shadow_3"),
                    this.feFlood = c,
                    e.appendChild(c);
                var d = createNS("feComposite");
                d.setAttribute("in", s + "_drop_shadow_3"),
                    d.setAttribute("in2", s + "_drop_shadow_2"),
                    d.setAttribute("operator", "in"),
                    d.setAttribute("result", s + "_drop_shadow_4"),
                    e.appendChild(d);
                var h = this.createMergeNode(s, [s + "_drop_shadow_4", i]);
                e.appendChild(h)
            }
            extendPrototype([SVGComposableEffect], SVGTintFilter),
                SVGTintFilter.prototype.renderFrame = function(e) {
                    if (e || this.filterManager._mdf) {
                        var t = this.filterManager.effectElements[0].p.v
                            , a = this.filterManager.effectElements[1].p.v
                            , s = this.filterManager.effectElements[2].p.v / 100;
                        this.linearFilter.setAttribute("values", linearFilterValue + " " + s + " 0"),
                            this.matrixFilter.setAttribute("values", a[0] - t[0] + " 0 0 0 " + t[0] + " " + (a[1] - t[1]) + " 0 0 0 " + t[1] + " " + (a[2] - t[2]) + " 0 0 0 " + t[2] + " 0 0 0 1 0")
                    }
                }
                ,
                SVGFillFilter.prototype.renderFrame = function(e) {
                    if (e || this.filterManager._mdf) {
                        var t = this.filterManager.effectElements[2].p.v
                            , a = this.filterManager.effectElements[6].p.v;
                        this.matrixFilter.setAttribute("values", "0 0 0 0 " + t[0] + " 0 0 0 0 " + t[1] + " 0 0 0 0 " + t[2] + " 0 0 0 " + a + " 0")
                    }
                }
                ,
                SVGStrokeEffect.prototype.initialize = function() {
                    var e, t, a, s, i = this.elem.layerElement.children || this.elem.layerElement.childNodes;
                    for (1 === this.filterManager.effectElements[1].p.v ? (s = this.elem.maskManager.masksProperties.length,
                        a = 0) : s = 1 + (a = this.filterManager.effectElements[0].p.v - 1),
                             (t = createNS("g")).setAttribute("fill", "none"),
                             t.setAttribute("stroke-linecap", "round"),
                             t.setAttribute("stroke-dashoffset", 1); a < s; a += 1)
                        e = createNS("path"),
                            t.appendChild(e),
                            this.paths.push({
                                p: e,
                                m: a
                            });
                    if (3 === this.filterManager.effectElements[10].p.v) {
                        var r = createNS("mask")
                            , o = createElementID();
                        r.setAttribute("id", o),
                            r.setAttribute("mask-type", "alpha"),
                            r.appendChild(t),
                            this.elem.globalData.defs.appendChild(r);
                        var n = createNS("g");
                        for (n.setAttribute("mask", "url(" + getLocationHref() + "#" + o + ")"); i[0]; )
                            n.appendChild(i[0]);
                        this.elem.layerElement.appendChild(n),
                            this.masker = r,
                            t.setAttribute("stroke", "#fff")
                    } else if (1 === this.filterManager.effectElements[10].p.v || 2 === this.filterManager.effectElements[10].p.v) {
                        if (2 === this.filterManager.effectElements[10].p.v)
                            for (i = this.elem.layerElement.children || this.elem.layerElement.childNodes; i.length; )
                                this.elem.layerElement.removeChild(i[0]);
                        this.elem.layerElement.appendChild(t),
                            this.elem.layerElement.removeAttribute("mask"),
                            t.setAttribute("stroke", "#fff")
                    }
                    this.initialized = !0,
                        this.pathMasker = t
                }
                ,
                SVGStrokeEffect.prototype.renderFrame = function(e) {
                    var t;
                    this.initialized || this.initialize();
                    var a, s, i = this.paths.length;
                    for (t = 0; t < i; t += 1)
                        if (-1 !== this.paths[t].m && (a = this.elem.maskManager.viewData[this.paths[t].m],
                            s = this.paths[t].p,
                        (e || this.filterManager._mdf || a.prop._mdf) && s.setAttribute("d", a.lastPath),
                        e || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || a.prop._mdf)) {
                            var r;
                            if (0 !== this.filterManager.effectElements[7].p.v || 100 !== this.filterManager.effectElements[8].p.v) {
                                var o = .01 * Math.min(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v)
                                    , n = .01 * Math.max(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v)
                                    , l = s.getTotalLength();
                                r = "0 0 0 " + l * o + " ";
                                var c, d = l * (n - o), h = 1 + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * .01, p = Math.floor(d / h);
                                for (c = 0; c < p; c += 1)
                                    r += "1 " + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * .01 + " ";
                                r += "0 " + 10 * l + " 0 0"
                            } else
                                r = "1 " + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * .01;
                            s.setAttribute("stroke-dasharray", r)
                        }
                    if ((e || this.filterManager.effectElements[4].p._mdf) && this.pathMasker.setAttribute("stroke-width", 2 * this.filterManager.effectElements[4].p.v),
                    (e || this.filterManager.effectElements[6].p._mdf) && this.pathMasker.setAttribute("opacity", this.filterManager.effectElements[6].p.v),
                    (1 === this.filterManager.effectElements[10].p.v || 2 === this.filterManager.effectElements[10].p.v) && (e || this.filterManager.effectElements[3].p._mdf)) {
                        var u = this.filterManager.effectElements[3].p.v;
                        this.pathMasker.setAttribute("stroke", "rgb(" + bmFloor(255 * u[0]) + "," + bmFloor(255 * u[1]) + "," + bmFloor(255 * u[2]) + ")")
                    }
                }
                ,
                SVGTritoneFilter.prototype.renderFrame = function(e) {
                    if (e || this.filterManager._mdf) {
                        var t = this.filterManager.effectElements[0].p.v
                            , a = this.filterManager.effectElements[1].p.v
                            , s = this.filterManager.effectElements[2].p.v
                            , i = s[0] + " " + a[0] + " " + t[0]
                            , r = s[1] + " " + a[1] + " " + t[1]
                            , o = s[2] + " " + a[2] + " " + t[2];
                        this.feFuncR.setAttribute("tableValues", i),
                            this.feFuncG.setAttribute("tableValues", r),
                            this.feFuncB.setAttribute("tableValues", o)
                    }
                }
                ,
                SVGProLevelsFilter.prototype.createFeFunc = function(e, t) {
                    var a = createNS(e);
                    return a.setAttribute("type", "table"),
                        t.appendChild(a),
                        a
                }
                ,
                SVGProLevelsFilter.prototype.getTableValue = function(e, t, a, s, i) {
                    for (var r, o, n = 0, l = Math.min(e, t), c = Math.max(e, t), d = Array.call(null, {
                        length: 256
                    }), h = 0, p = i - s, u = t - e; n <= 256; )
                        o = (r = n / 256) <= l ? u < 0 ? i : s : r >= c ? u < 0 ? s : i : s + p * Math.pow((r - e) / u, 1 / a),
                            d[h] = o,
                            h += 1,
                            n += 256 / 255;
                    return d.join(" ")
                }
                ,
                SVGProLevelsFilter.prototype.renderFrame = function(e) {
                    if (e || this.filterManager._mdf) {
                        var t, a = this.filterManager.effectElements;
                        this.feFuncRComposed && (e || a[3].p._mdf || a[4].p._mdf || a[5].p._mdf || a[6].p._mdf || a[7].p._mdf) && (t = this.getTableValue(a[3].p.v, a[4].p.v, a[5].p.v, a[6].p.v, a[7].p.v),
                            this.feFuncRComposed.setAttribute("tableValues", t),
                            this.feFuncGComposed.setAttribute("tableValues", t),
                            this.feFuncBComposed.setAttribute("tableValues", t)),
                        this.feFuncR && (e || a[10].p._mdf || a[11].p._mdf || a[12].p._mdf || a[13].p._mdf || a[14].p._mdf) && (t = this.getTableValue(a[10].p.v, a[11].p.v, a[12].p.v, a[13].p.v, a[14].p.v),
                            this.feFuncR.setAttribute("tableValues", t)),
                        this.feFuncG && (e || a[17].p._mdf || a[18].p._mdf || a[19].p._mdf || a[20].p._mdf || a[21].p._mdf) && (t = this.getTableValue(a[17].p.v, a[18].p.v, a[19].p.v, a[20].p.v, a[21].p.v),
                            this.feFuncG.setAttribute("tableValues", t)),
                        this.feFuncB && (e || a[24].p._mdf || a[25].p._mdf || a[26].p._mdf || a[27].p._mdf || a[28].p._mdf) && (t = this.getTableValue(a[24].p.v, a[25].p.v, a[26].p.v, a[27].p.v, a[28].p.v),
                            this.feFuncB.setAttribute("tableValues", t)),
                        this.feFuncA && (e || a[31].p._mdf || a[32].p._mdf || a[33].p._mdf || a[34].p._mdf || a[35].p._mdf) && (t = this.getTableValue(a[31].p.v, a[32].p.v, a[33].p.v, a[34].p.v, a[35].p.v),
                            this.feFuncA.setAttribute("tableValues", t))
                    }
                }
                ,
                extendPrototype([SVGComposableEffect], SVGDropShadowEffect),
                SVGDropShadowEffect.prototype.renderFrame = function(e) {
                    if (e || this.filterManager._mdf) {
                        if ((e || this.filterManager.effectElements[4].p._mdf) && this.feGaussianBlur.setAttribute("stdDeviation", this.filterManager.effectElements[4].p.v / 4),
                        e || this.filterManager.effectElements[0].p._mdf) {
                            var t = this.filterManager.effectElements[0].p.v;
                            this.feFlood.setAttribute("flood-color", rgbToHex(Math.round(255 * t[0]), Math.round(255 * t[1]), Math.round(255 * t[2])))
                        }
                        if ((e || this.filterManager.effectElements[1].p._mdf) && this.feFlood.setAttribute("flood-opacity", this.filterManager.effectElements[1].p.v / 255),
                        e || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf) {
                            var a = this.filterManager.effectElements[3].p.v
                                , s = (this.filterManager.effectElements[2].p.v - 90) * degToRads
                                , i = a * Math.cos(s)
                                , r = a * Math.sin(s);
                            this.feOffset.setAttribute("dx", i),
                                this.feOffset.setAttribute("dy", r)
                        }
                    }
                }
            ;
            var _svgMatteSymbols = [];
            function SVGMatte3Effect(e, t, a) {
                this.initialized = !1,
                    this.filterManager = t,
                    this.filterElem = e,
                    this.elem = a,
                    a.matteElement = createNS("g"),
                    a.matteElement.appendChild(a.layerElement),
                    a.matteElement.appendChild(a.transformedElement),
                    a.baseElement = a.matteElement
            }
            function SVGGaussianBlurEffect(e, t, a, s) {
                e.setAttribute("x", "-100%"),
                    e.setAttribute("y", "-100%"),
                    e.setAttribute("width", "300%"),
                    e.setAttribute("height", "300%"),
                    this.filterManager = t;
                var i = createNS("feGaussianBlur");
                i.setAttribute("result", s),
                    e.appendChild(i),
                    this.feGaussianBlur = i
            }
            function TransformEffect() {}
            function SVGTransformEffect(e, t) {
                this.init(t)
            }
            function CVTransformEffect(e) {
                this.init(e)
            }
            return SVGMatte3Effect.prototype.findSymbol = function(e) {
                for (var t = 0, a = _svgMatteSymbols.length; t < a; ) {
                    if (_svgMatteSymbols[t] === e)
                        return _svgMatteSymbols[t];
                    t += 1
                }
                return null
            }
                ,
                SVGMatte3Effect.prototype.replaceInParent = function(e, t) {
                    var a = e.layerElement.parentNode;
                    if (a) {
                        for (var s, i = a.children, r = 0, o = i.length; r < o && i[r] !== e.layerElement; )
                            r += 1;
                        r <= o - 2 && (s = i[r + 1]);
                        var n = createNS("use");
                        n.setAttribute("href", "#" + t),
                            s ? a.insertBefore(n, s) : a.appendChild(n)
                    }
                }
                ,
                SVGMatte3Effect.prototype.setElementAsMask = function(e, t) {
                    if (!this.findSymbol(t)) {
                        var a = createElementID()
                            , s = createNS("mask");
                        s.setAttribute("id", t.layerId),
                            s.setAttribute("mask-type", "alpha"),
                            _svgMatteSymbols.push(t);
                        var i = e.globalData.defs;
                        i.appendChild(s);
                        var r = createNS("symbol");
                        r.setAttribute("id", a),
                            this.replaceInParent(t, a),
                            r.appendChild(t.layerElement),
                            i.appendChild(r);
                        var o = createNS("use");
                        o.setAttribute("href", "#" + a),
                            s.appendChild(o),
                            t.data.hd = !1,
                            t.show()
                    }
                    e.setMatte(t.layerId)
                }
                ,
                SVGMatte3Effect.prototype.initialize = function() {
                    for (var e = this.filterManager.effectElements[0].p.v, t = this.elem.comp.elements, a = 0, s = t.length; a < s; )
                        t[a] && t[a].data.ind === e && this.setElementAsMask(this.elem, t[a]),
                            a += 1;
                    this.initialized = !0
                }
                ,
                SVGMatte3Effect.prototype.renderFrame = function() {
                    this.initialized || this.initialize()
                }
                ,
                SVGGaussianBlurEffect.prototype.renderFrame = function(e) {
                    if (e || this.filterManager._mdf) {
                        var t = .3 * this.filterManager.effectElements[0].p.v
                            , a = this.filterManager.effectElements[1].p.v
                            , s = 3 == a ? 0 : t
                            , i = 2 == a ? 0 : t;
                        this.feGaussianBlur.setAttribute("stdDeviation", s + " " + i);
                        var r = 1 == this.filterManager.effectElements[2].p.v ? "wrap" : "duplicate";
                        this.feGaussianBlur.setAttribute("edgeMode", r)
                    }
                }
                ,
                TransformEffect.prototype.init = function(e) {
                    this.effectsManager = e,
                        this.type = effectTypes.TRANSFORM_EFFECT,
                        this.matrix = new Matrix,
                        this.opacity = -1,
                        this._mdf = !1,
                        this._opMdf = !1
                }
                ,
                TransformEffect.prototype.renderFrame = function(e) {
                    if (this._opMdf = !1,
                        this._mdf = !1,
                    e || this.effectsManager._mdf) {
                        var t = this.effectsManager.effectElements
                            , a = t[0].p.v
                            , s = t[1].p.v
                            , i = 1 === t[2].p.v
                            , r = t[3].p.v
                            , o = i ? r : t[4].p.v
                            , n = t[5].p.v
                            , l = t[6].p.v
                            , c = t[7].p.v;
                        this.matrix.reset(),
                            this.matrix.translate(-a[0], -a[1], a[2]),
                            this.matrix.scale(.01 * o, .01 * r, 1),
                            this.matrix.rotate(-c * degToRads),
                            this.matrix.skewFromAxis(-n * degToRads, (l + 90) * degToRads),
                            this.matrix.translate(s[0], s[1], 0),
                            this._mdf = !0,
                        this.opacity !== t[8].p.v && (this.opacity = t[8].p.v,
                            this._opMdf = !0)
                    }
                }
                ,
                extendPrototype([TransformEffect], SVGTransformEffect),
                extendPrototype([TransformEffect], CVTransformEffect),
                registerRenderer("canvas", CanvasRenderer),
                registerRenderer("html", HybridRenderer),
                registerRenderer("svg", SVGRenderer),
                ShapeModifiers.registerModifier("tm", TrimModifier),
                ShapeModifiers.registerModifier("pb", PuckerAndBloatModifier),
                ShapeModifiers.registerModifier("rp", RepeaterModifier),
                ShapeModifiers.registerModifier("rd", RoundCornersModifier),
                ShapeModifiers.registerModifier("zz", ZigZagModifier),
                ShapeModifiers.registerModifier("op", OffsetPathModifier),
                setExpressionsPlugin(Expressions),
                setExpressionInterfaces(getInterface),
                initialize$1(),
                initialize(),
                registerEffect$1(20, SVGTintFilter, !0),
                registerEffect$1(21, SVGFillFilter, !0),
                registerEffect$1(22, SVGStrokeEffect, !1),
                registerEffect$1(23, SVGTritoneFilter, !0),
                registerEffect$1(24, SVGProLevelsFilter, !0),
                registerEffect$1(25, SVGDropShadowEffect, !0),
                registerEffect$1(28, SVGMatte3Effect, !1),
                registerEffect$1(29, SVGGaussianBlurEffect, !0),
                registerEffect$1(35, SVGTransformEffect, !1),
                registerEffect(35, CVTransformEffect),
                lottie
        }
            ,
            module.exports = factory())
    }
)(lottie, lottie.exports);
var lottieExports = lottie.exports;
const Lottie = getDefaultExportFromCjs(lottieExports);
!function() {
    try {
        if ("undefined" != typeof document) {
            var e = document.createElement("style");
            e.appendChild(document.createTextNode(".lottie-animation-container{width:var(--lottie-animation-container-width);height:var(--lottie-animation-container-height);background-color:var(--lottie-animation-container-background-color);overflow:hidden;margin:var(--lottie-animation-margin)}.lottie-animation-container svg{transform:scale(var(--lottie-animation-scale))}")),
                document.head.appendChild(e)
        }
    } catch (t) {}
}();
var __defProp = Object.defineProperty
    , __defProps = Object.defineProperties
    , __getOwnPropDescs = Object.getOwnPropertyDescriptors
    , __getOwnPropSymbols = Object.getOwnPropertySymbols
    , __hasOwnProp = Object.prototype.hasOwnProperty
    , __propIsEnum = Object.prototype.propertyIsEnumerable
    , __defNormalProp = (e, t, a) => t in e ? __defProp(e, t, {
    enumerable: !0,
    configurable: !0,
    writable: !0,
    value: a
}) : e[t] = a
    , __spreadValues = (e, t) => {
    for (var a in t || (t = {}))
        __hasOwnProp.call(t, a) && __defNormalProp(e, a, t[a]);
    if (__getOwnPropSymbols)
        for (var a of __getOwnPropSymbols(t))
            __propIsEnum.call(t, a) && __defNormalProp(e, a, t[a]);
    return e
}
    , __spreadProps = (e, t) => __defProps(e, __getOwnPropDescs(t))
    , es6 = function e(t, a) {
    if (t === a)
        return !0;
    if (t && a && "object" == typeof t && "object" == typeof a) {
        if (t.constructor !== a.constructor)
            return !1;
        var s, i, r;
        if (Array.isArray(t)) {
            if ((s = t.length) != a.length)
                return !1;
            for (i = s; 0 != i--; )
                if (!e(t[i], a[i]))
                    return !1;
            return !0
        }
        if (t instanceof Map && a instanceof Map) {
            if (t.size !== a.size)
                return !1;
            for (i of t.entries())
                if (!a.has(i[0]))
                    return !1;
            for (i of t.entries())
                if (!e(i[1], a.get(i[0])))
                    return !1;
            return !0
        }
        if (t instanceof Set && a instanceof Set) {
            if (t.size !== a.size)
                return !1;
            for (i of t.entries())
                if (!a.has(i[0]))
                    return !1;
            return !0
        }
        if (ArrayBuffer.isView(t) && ArrayBuffer.isView(a)) {
            if ((s = t.length) != a.length)
                return !1;
            for (i = s; 0 != i--; )
                if (t[i] !== a[i])
                    return !1;
            return !0
        }
        if (t.constructor === RegExp)
            return t.source === a.source && t.flags === a.flags;
        if (t.valueOf !== Object.prototype.valueOf)
            return t.valueOf() === a.valueOf();
        if (t.toString !== Object.prototype.toString)
            return t.toString() === a.toString();
        if ((s = (r = Object.keys(t)).length) !== Object.keys(a).length)
            return !1;
        for (i = s; 0 != i--; )
            if (!Object.prototype.hasOwnProperty.call(a, r[i]))
                return !1;
        for (i = s; 0 != i--; ) {
            var o = r[i];
            if (!e(t[o], a[o]))
                return !1
        }
        return !0
    }
    return t != t && a != a
};
function klona(e) {
    var t, a, s;
    if (Array.isArray(e)) {
        for (a = Array(t = e.length); t--; )
            a[t] = (s = e[t]) && "object" == typeof s ? klona(s) : s;
        return a
    }
    if ("[object Object]" === Object.prototype.toString.call(e)) {
        for (t in a = {},
            e)
            "__proto__" === t ? Object.defineProperty(a, t, {
                value: klona(e[t]),
                configurable: !0,
                enumerable: !0,
                writable: !0
            }) : a[t] = (s = e[t]) && "object" == typeof s ? klona(s) : s;
        return a
    }
    return e
}
var _export_sfc = (e, t) => {
        const a = e.__vccOpts || e;
        for (const [s,i] of t)
            a[s] = i;
        return a
    }
;
const _sfc_main$y = defineComponent({
    props: {
        animationData: {
            type: Object,
            default: () => ({})
        },
        animationLink: {
            type: String,
            default: ""
        },
        loop: {
            type: [Boolean, Number],
            default: !0
        },
        autoPlay: {
            type: Boolean,
            default: !0
        },
        width: {
            type: [Number, String],
            default: "100%"
        },
        height: {
            type: [Number, String],
            default: "100%"
        },
        speed: {
            type: Number,
            default: 1
        },
        delay: {
            type: Number,
            default: 0
        },
        direction: {
            type: String,
            default: "forward"
        },
        pauseOnHover: {
            type: Boolean,
            default: !1
        },
        playOnHover: {
            type: Boolean,
            default: !1
        },
        backgroundColor: {
            type: String,
            default: "transparent"
        },
        pauseAnimation: {
            type: Boolean,
            default: !1
        },
        noMargin: {
            type: Boolean,
            default: !1
        },
        scale: {
            type: Number,
            default: 1
        },
        renderer: {
            type: String,
            default: "svg"
        },
        rendererSettings: {
            type: Object,
            default: () => ({})
        },
        assetsPath: {
            type: String,
            default: ""
        }
    },
    emits: {
        onComplete: null,
        onLoopComplete: null,
        onEnterFrame: null,
        onSegmentStart: null,
        onAnimationLoaded: null
    },
    setup(e, {emit: t}) {
        const a = ref();
        let s, i = null, r = 1;
        watchEffect((async () => {
                if (a.value) {
                    if ("" != e.animationLink)
                        try {
                            const t = await fetch(e.animationLink)
                                , a = await t.json();
                            s = a
                        } catch (t) {
                            return
                        }
                    else {
                        if (!1 !== es6(e.animationData, {}))
                            throw new Error("You must provide either animationLink or animationData");
                        s = klona(e.animationData)
                    }
                    o()
                }
            }
        ));
        const o = () => {
            if (!a.value)
                return;
            if (!s)
                return;
            null == i || i.destroy(),
                i = null;
            let o = e.autoPlay
                , n = e.loop;
            e.playOnHover && (o = !1),
            "number" == typeof n && n > 0 && (n -= 1),
            e.delay > 0 && (o = !1);
            const l = {
                container: a.value,
                renderer: e.renderer,
                loop: n,
                autoplay: o,
                animationData: s,
                assetsPath: e.assetsPath
            };
            !1 === es6(e.rendererSettings, {}) && (l.rendererSettings = e.rendererSettings),
            1 !== e.scale && (l.rendererSettings = __spreadProps(__spreadValues({}, l.rendererSettings), {
                viewBoxOnly: !0
            })),
                i = Lottie.loadAnimation(l),
                setTimeout(( () => {
                        o = e.autoPlay,
                            e.playOnHover ? null == i || i.pause() : o ? null == i || i.play() : null == i || i.pause(),
                            t("onAnimationLoaded")
                    }
                ), e.delay),
                i.setSpeed(e.speed),
            "reverse" === e.direction && i.setDirection(-1),
            "normal" === e.direction && i.setDirection(1),
            (e.pauseAnimation || e.playOnHover) && i.pause(),
                i.addEventListener("loopComplete", ( () => {
                        "alternate" === e.direction && (null == i || i.stop(),
                            r = -1 === r ? 1 : -1,
                        null == i || i.setDirection(r),
                        null == i || i.play()),
                            t("onLoopComplete")
                    }
                )),
                i.addEventListener("complete", ( () => {
                        t("onComplete")
                    }
                )),
                i.addEventListener("enterFrame", ( () => {
                        t("onEnterFrame")
                    }
                )),
                i.addEventListener("segmentStart", ( () => {
                        t("onSegmentStart")
                    }
                ))
        }
            , n = computed(( () => {
                let t = e.width
                    , a = e.height;
                return "number" == typeof e.width && (t = `${e.width}px`),
                "number" == typeof e.height && (a = `${e.height}px`),
                    {
                        "--lottie-animation-container-width": t,
                        "--lottie-animation-container-height": a,
                        "--lottie-animation-container-background-color": e.backgroundColor,
                        "--lottie-animation-margin": e.noMargin ? "0" : "0 auto",
                        "--lottie-animation-scale": 1 != e.scale ? e.scale : ""
                    }
            }
        ));
        watch(( () => e.pauseAnimation), ( () => {
                (e.pauseOnHover || e.playOnHover) && e.pauseAnimation || i && (e.pauseAnimation ? i.pause() : i.play())
            }
        ));
        return {
            lottieAnimationContainer: a,
            hoverEnded: () => {
                i && e.pauseOnHover && i.play(),
                i && e.playOnHover && i.pause()
            }
            ,
            hoverStarted: () => {
                i && e.pauseOnHover && i.pause(),
                i && e.playOnHover && i.play()
            }
            ,
            getCurrentStyle: n,
            play: () => {
                i && i.play()
            }
            ,
            pause: () => {
                i && i.pause()
            }
            ,
            stop: () => {
                i && i.stop()
            }
            ,
            destroy: () => {
                i && i.destroy()
            }
            ,
            setSpeed: (e=1) => {
                if (e <= 0)
                    throw new Error("Speed must be greater than 0");
                i && i.setSpeed(e)
            }
            ,
            setDirection: e => {
                i && ("forward" === e ? i.setDirection(1) : "reverse" === e && i.setDirection(-1))
            }
            ,
            goToAndStop: (e, t=!0) => {
                i && i.goToAndStop(e, t)
            }
            ,
            goToAndPlay: (e, t=!0) => {
                i && i.goToAndPlay(e, t)
            }
            ,
            playSegments: (e, t=!1) => {
                i && i.playSegments(e, t)
            }
            ,
            setSubFrame: (e=!0) => {
                i && i.setSubframe(e)
            }
            ,
            getDuration: (e=!0) => {
                if (i)
                    return i.getDuration(e)
            }
            ,
            updateDocumentData: (e, t=0) => {
                i && i.renderer.elements[t].updateDocumentData(e)
            }
        }
    }
});
function _sfc_render$f(e, t, a, s, i, r) {
    return openBlock(),
        createElementBlock("div", {
            ref: "lottieAnimationContainer",
            class: "lottie-animation-container",
            style: normalizeStyle(e.getCurrentStyle),
            onMouseenter: t[0] || (t[0] = (...t) => e.hoverStarted && e.hoverStarted(...t)),
            onMouseleave: t[1] || (t[1] = (...t) => e.hoverEnded && e.hoverEnded(...t))
        }, null, 36)
}
var Vue3Lottie = _export_sfc(_sfc_main$y, [["render", _sfc_render$f]]);
const SafeModal_vue_vue_type_style_index_0_scoped_ec3fcdbb_lang = ""
    , _hoisted_1$w = {
    class: "safemodal-container"
}
    , _hoisted_2$t = {
    class: "image-container"
}
    , _hoisted_3$q = ["src"]
    , _hoisted_4$p = {
    key: 1,
    class: "frame-2087329044"
}
    , _hoisted_5$p = {
    key: 0,
    class: "confetti-container"
}
    , _hoisted_6$n = {
    class: "prize-panel"
}
    , _hoisted_7$n = {
    class: "prize-content"
}
    , _hoisted_8$l = {
    class: "prize-right"
}
    , _hoisted_9$k = {
    class: "prize-amount"
}
    , _hoisted_10$j = {
    class: "safemodal-content"
}
    , _hoisted_11$j = {
    class: "safemodal-header"
}
    , _hoisted_12$j = {
    class: "safemodal-title"
}
    , _hoisted_13$i = {
    class: "safemodal-subtitle"
}
    , _hoisted_14$h = {
    key: 0,
    class: "safemodal-subscribe"
}
    , _hoisted_15$f = {
    key: 1,
    class: "deposits-display"
}
    , _hoisted_16$d = {
    class: "deposits-content"
}
    , _hoisted_17$b = {
    class: "deposits-amount"
}
    , _hoisted_18$a = {
    class: "deposits-value"
}
    , _hoisted_19$9 = {
    key: 2,
    class: "attempts-info"
}
    , _hoisted_20$7 = {
    key: 3,
    class: "safemodal-winner"
}
    , _hoisted_21$7 = {
    class: "safemodal-winner-info"
}
    , _hoisted_22$7 = {
    class: "safemodal-winner-details"
}
    , _hoisted_23$4 = {
    class: "winner-name"
}
    , _hoisted_24$3 = {
    class: "winner-time"
}
    , _hoisted_25$3 = ["src"]
    , _hoisted_26$3 = {
    class: "safemodal-actions"
}
    , _hoisted_27$3 = {
    key: 0,
    class: "error-message"
}
    , _hoisted_28$3 = {
    key: 1,
    class: "promo-error-container"
}
    , _hoisted_29$3 = {
    class: "promo-error"
}
    , _hoisted_30$3 = {
    class: "code-inputs"
}
    , _hoisted_31$3 = {
    key: 0,
    class: "star-icon",
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
}
    , _hoisted_32$3 = {
    key: 1,
    class: "digit-text"
}
    , _hoisted_33$2 = {
    key: 0,
    class: "timer-full"
}
    , _hoisted_34$1 = {
    class: "timer-full-time"
}
    , _hoisted_35$1 = {
    key: 1,
    class: "timer-deposit-container"
}
    , _hoisted_36$1 = {
    class: "timer-section"
}
    , _hoisted_37$1 = {
    class: "timer-next-time"
}
    , _hoisted_38$1 = {
    class: "code-inputs"
}
    , _hoisted_39$1 = {
    key: 0,
    class: "star-icon",
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
}
    , _hoisted_40$1 = {
    key: 1,
    class: "digit-text"
}
    , _hoisted_41$1 = {
    key: 0,
    class: "timer-full"
}
    , _hoisted_42$1 = {
    class: "timer-full-time"
}
    , _hoisted_43$1 = {
    key: 1,
    class: "timer-deposit-container"
}
    , _hoisted_44$1 = {
    class: "timer-section"
}
    , _hoisted_45$1 = {
    class: "timer-next-time"
}
    , _sfc_main$x = {
    __name: "SafeModal",
    props: {
        isOpen: {
            type: Boolean,
            default: !1
        }
    },
    emits: ["close"],
    setup(e, {emit: t}) {
        const a = e
            , s = t
            , i = inject("userStore")
            , r = useRouter()
            , o = ref(!1)
            , n = ref("")
            , l = ref("")
            , c = ref(null)
            , d = ref("default")
            , h = ref(null)
            , p = ref(null)
            , u = ref(null)
            , m = ref("")
            , f = ref(null)
            , v = ref(window.innerWidth)
            , g = ref(window.innerHeight)
            , y = ref(!1)
            , _ = ref(0)
            , b = ref(0)
            , k = ref(!1)
            , w = computed(( () => {
                var e;
                return (null == (e = h.value) ? void 0 : e.hint) ? h.value.hint.substring(0, b.value) : ""
            }
        ));
        computed(( () => 1.2 * Math.max(v.value, g.value)));
        const B = computed(( () => {
                    const e = l.value.split("").slice(0, 3);
                    for (; e.length < 3; )
                        e.push("");
                    return e
                }
            ))
            , C = async () => {
                try {
                    const e = await axios$1.get("/api/safe_get.php");
                    e.data.success && e.data.safe && (h.value = e.data.safe,
                        o.value = e.data.safe.is_subscriber || !1,
                        !e.data.last_winner || Array.isArray(e.data.last_winner) && 0 === e.data.last_winner.length ? p.value = null : p.value = e.data.last_winner)
                } catch (e) {}
            }
            , x = async () => {
                n.value = "";
                try {
                    const e = await axios$1.get("/api/safe_check_subscription.php");
                    e.data.success ? (o.value = !0,
                        n.value = "") : n.value = e.data.error || "Subscription check failed"
                } catch (e) {
                    n.value = "Failed to check subscription"
                }
            }
            , S = () => {
                window.open("https://t.me/gifterint_official_bot", "_blank")
            }
            , E = () => {
                c.value && c.value.focus()
            }
            , V = e => {
                l.value = e.target.value.replace(/[^0-9]/g, "").slice(0, 3)
            }
            , N = async () => {
                if (3 === l.value.length) {
                    n.value = "",
                        m.value = "";
                    try {
                        const e = await axios$1.post("/api/safe_activate.php", {
                            code: l.value
                        });
                        e.data.hasOwnProperty("success") ? (h.value && (h.value.attempts_24h += 1),
                            e.data.success ? (d.value = "success",
                                M(),
                                i.addToBalance(e.data.amount)) : (d.value = "failed",
                                l.value = "")) : m.value = e.data.error || "Something was wrong, try again"
                    } catch (e) {
                        m.value = "Something was wrong, try again"
                    }
                } else
                    n.value = "Please enter a 3-digit code"
            }
            , P = () => {
                s("close"),
                    r.push("/profile?openDeposit=true")
            }
            , A = e => {
                const t = new Date
                    , a = new Date(e)
                    , s = Math.floor((t - a) / 1e3);
                if (s < 60)
                    return `${s} seconds ago`;
                if (s < 3600) {
                    const e = Math.floor(s / 60);
                    return `${e} minute${e > 1 ? "s" : ""} ago`
                }
                if (s < 86400) {
                    const e = Math.floor(s / 3600);
                    return `${e} hour${e > 1 ? "s" : ""} ago`
                }
                {
                    const e = Math.floor(s / 86400);
                    return `${e} day${e > 1 ? "s" : ""} ago`
                }
            }
            , $ = e => {
                const t = e && !isNaN(e) ? e : 3600
                    , a = t % 60;
                return `${Math.floor(t / 60).toString().padStart(2, "0")}:${a.toString().padStart(2, "0")}`
            }
            , T = computed(( () => h.value && h.value.attempts_24h >= h.value.max_attempts))
            , M = async () => {
                try {
                    const e = await fetch("/images/effects/confeti.json");
                    f.value = await e.json()
                } catch (e) {}
            }
            , D = () => {
                y.value = !0,
                    setTimeout(( () => {
                            _.value = 1,
                                I()
                        }
                    ), 500)
            }
            , I = () => {
                var e, t;
                let a = 0;
                const s = (null == (t = null == (e = h.value) ? void 0 : e.hint) ? void 0 : t.length) || 0
                    , i = setInterval(( () => {
                        a <= s ? (b.value = a,
                            a++) : (clearInterval(i),
                            k.value = !0)
                    }
                ), 50)
            }
        ;
        return watch(( () => a.isOpen), (e => {
                e ? (C(),
                    l.value = "",
                    n.value = "",
                    m.value = "",
                    d.value = "default",
                    y.value = !1,
                    _.value = 0,
                    b.value = 0,
                    k.value = !1,
                u.value && clearInterval(u.value),
                    u.value = setInterval(( () => {
                            h.value && (h.value.next_attempt_available && !isNaN(h.value.next_attempt_available) || (h.value.next_attempt_available = 3600),
                            h.value.next_attempt_available > 0 && h.value.next_attempt_available--)
                        }
                    ), 1e3)) : u.value && (clearInterval(u.value),
                    u.value = null)
            }
        )),
            onMounted(( () => {
                    a.isOpen && C();
                    const e = () => {
                            v.value = window.innerWidth,
                                g.value = window.innerHeight
                        }
                    ;
                    window.addEventListener("resize", e),
                        onUnmounted(( () => {
                                window.removeEventListener("resize", e)
                            }
                        ))
                }
            )),
            (t, a) => (openBlock(),
                createBlock(Transition, {
                    name: "fade"
                }, {
                    default: withCtx(( () => {
                            var s, i, r;
                            return [e.isOpen ? (openBlock(),
                                createElementBlock("div", {
                                    key: 0,
                                    class: "safemodal-overlay",
                                    onClick: a[4] || (a[4] = withModifiers((e => t.$emit("close")), ["self"]))
                                }, [createBaseVNode("div", _hoisted_1$w, [a[27] || (a[27] = createBaseVNode("link", {
                                    rel: "preload",
                                    as: "image",
                                    href: "/images/effects/modal_safepng_hint-min.png"
                                }, null, -1)), createBaseVNode("div", _hoisted_2$t, [createBaseVNode("img", {
                                    class: "safemodal-image",
                                    src: y.value ? "/images/effects/modal_safepng_hint-min.png" : "/images/effects/modal_safepng-min.png"
                                }, null, 8, _hoisted_3$q), !y.value && (null == (s = h.value) ? void 0 : s.hint) ? (openBlock(),
                                    createElementBlock("div", {
                                        key: 0,
                                        class: "hint-button",
                                        onClick: D
                                    }, a[5] || (a[5] = [createBaseVNode("div", {
                                        class: "hint-label"
                                    }, "Hint from Pepe", -1)]))) : createCommentVNode("", !0), y.value && (null == (i = h.value) ? void 0 : i.hint) ? (openBlock(),
                                    createElementBlock("div", _hoisted_4$p, [createBaseVNode("div", {
                                        class: normalizeClass(["frame-2087329029", {
                                            visible: _.value >= 1
                                        }])
                                    }, [createBaseVNode("div", {
                                        class: normalizeClass(["_12", {
                                            "typing-complete": k.value
                                        }])
                                    }, toDisplayString(w.value), 3)], 2)])) : createCommentVNode("", !0)]), "success" === d.value ? (openBlock(),
                                    createElementBlock("div", _hoisted_5$p, [createVNode(unref(Vue3Lottie), {
                                        animationData: f.value,
                                        height: g.value,
                                        width: v.value,
                                        loop: !1,
                                        autoPlay: !0
                                    }, null, 8, ["animationData", "height", "width"])])) : createCommentVNode("", !0), createBaseVNode("div", _hoisted_6$n, [createBaseVNode("div", _hoisted_7$n, [a[6] || (a[6] = createBaseVNode("div", {
                                    class: "prize-left"
                                }, [createBaseVNode("div", {
                                    class: "prize-icon"
                                }, [createBaseVNode("img", {
                                    class: "prize-gift",
                                    src: "/images/effects/jackpot_prizes.png"
                                })]), createBaseVNode("div", {
                                    class: "prize-label"
                                }, "Current Prize:")], -1)), createBaseVNode("div", _hoisted_8$l, [createBaseVNode("div", _hoisted_9$k, toDisplayString((null == (r = h.value) ? void 0 : r.prize_amount) || 10), 1), createVNode(Coin)])])]), createBaseVNode("div", _hoisted_10$j, [createBaseVNode("div", _hoisted_11$j, [createBaseVNode("div", _hoisted_12$j, toDisplayString("success" === d.value ? "Congratulations!" : T.value && 4 === h.value.max_attempts ? "Safe" : "failed" === d.value ? "Unlucky :(" : "Safe"), 1), createBaseVNode("div", _hoisted_13$i, toDisplayString("success" === d.value ? "You guessed the code to the safe and get ton on your balance" : T.value && 4 === h.value.max_attempts ? "" : "failed" === d.value ? "You entered the wrong code, try again in 1 hour or get 3 more tries for a deposit of 10 tons or more" : "You can try to guess the code 1 time in 1 hour. If you have made a deposit of 10 ton or more in the last 24 hours, you will have 3 more tries"), 1)]), createBaseVNode("div", {
                                    class: "safemodal-close",
                                    onClick: a[0] || (a[0] = e => t.$emit("close"))
                                }, a[7] || (a[7] = [createBaseVNode("svg", {
                                    class: "close",
                                    width: "24",
                                    height: "24",
                                    viewBox: "0 0 24 24",
                                    fill: "none",
                                    xmlns: "http://www.w3.org/2000/svg"
                                }, [createBaseVNode("path", {
                                    d: "M18 6L6 18M6 6L18 18",
                                    stroke: "white",
                                    "stroke-width": "2",
                                    "stroke-linecap": "round",
                                    "stroke-linejoin": "round"
                                })], -1)])), o.value ? createCommentVNode("", !0) : (openBlock(),
                                    createElementBlock("div", _hoisted_14$h, [a[9] || (a[9] = createBaseVNode("img", {
                                        class: "telegram-icon",
                                        src: "/images/effects/tg_logo_mini.svg"
                                    }, null, -1)), createBaseVNode("div", {
                                        class: "safemodal-subscribe-text"
                                    }, [createBaseVNode("span", null, [a[8] || (a[8] = createBaseVNode("span", {
                                        class: "subscribe-text"
                                    }, " To try to guess the code - you must be subscribed to our channel ", -1)), createBaseVNode("span", {
                                        class: "subscribe-channel",
                                        onClick: S
                                    }, "@gifter")])])])), h.value && 1 === h.value.attempts_24h ? (openBlock(),
                                    createElementBlock("div", _hoisted_15$f, [createBaseVNode("div", _hoisted_16$d, [a[10] || (a[10] = createBaseVNode("div", {
                                        class: "deposits-title"
                                    }, " Deposits in the last 24 hours: ", -1)), createBaseVNode("div", _hoisted_17$b, [createBaseVNode("div", _hoisted_18$a, toDisplayString(h.value.deposits_24h), 1), createVNode(Coin, {
                                        size: "small"
                                    })])])])) : createCommentVNode("", !0), T.value && 4 === h.value.max_attempts ? (openBlock(),
                                    createElementBlock("div", _hoisted_19$9, a[11] || (a[11] = [createBaseVNode("div", {
                                        class: "info-icon"
                                    }, [createBaseVNode("svg", {
                                        class: "info-circle",
                                        width: "25",
                                        height: "25",
                                        viewBox: "0 0 25 25",
                                        fill: "none",
                                        xmlns: "http://www.w3.org/2000/svg"
                                    }, [createBaseVNode("path", {
                                        d: "M12.5 2C18.4371 2 23.25 6.81294 23.25 12.75C23.25 18.6871 18.4371 23.5 12.5 23.5C6.56294 23.5 1.75 18.6871 1.75 12.75C1.75 6.81294 6.56294 2 12.5 2ZM11 11C10.5858 11 10.25 11.3358 10.25 11.75C10.25 12.1642 10.5858 12.5 11 12.5H12.25V17.75C12.25 18.1642 12.5858 18.5 13 18.5C13.4142 18.5 13.75 18.1642 13.75 17.75V11.75C13.75 11.3618 13.4551 11.0425 13.0771 11.0039C13.0518 11.0013 13.026 11 13 11H11ZM13 7C12.5858 7 12.25 7.33579 12.25 7.75V8.75C12.25 9.16421 12.5858 9.5 13 9.5C13.4142 9.5 13.75 9.16421 13.75 8.75V7.75C13.75 7.33579 13.4142 7 13 7Z",
                                        fill: "white"
                                    })])], -1), createBaseVNode("div", {
                                        class: "attempts-message"
                                    }, "Attempts are over, come back in 1 hour", -1)]))) : createCommentVNode("", !0), "success" !== d.value && p.value ? (openBlock(),
                                    createElementBlock("div", _hoisted_20$7, [a[12] || (a[12] = createBaseVNode("div", {
                                        class: "safemodal-winner-header"
                                    }, [createBaseVNode("div", {
                                        class: "crown-icon"
                                    }, [createBaseVNode("svg", {
                                        width: "16",
                                        height: "17",
                                        viewBox: "0 0 16 17",
                                        fill: "none",
                                        xmlns: "http://www.w3.org/2000/svg"
                                    }, [createBaseVNode("path", {
                                        d: "M14.6656 4.55764V10.9443C14.6656 12.7843 13.1722 14.2776 11.3322 14.2776H4.66557C4.35891 14.2776 4.06557 14.2376 3.77891 14.1576C3.36557 14.0443 3.23224 13.5176 3.53891 13.211L10.6256 6.12431C10.7722 5.97764 10.9922 5.94431 11.1989 5.98431C11.4122 6.02431 11.6456 5.96431 11.8122 5.80431L13.5256 4.08431C14.1522 3.45764 14.6656 3.66431 14.6656 4.55764Z",
                                        fill: "#FEA500"
                                    }), createBaseVNode("path", {
                                        d: "M9.7587 5.6557L2.7787 12.6357C2.4587 12.9557 1.92536 12.8757 1.71203 12.4757C1.46536 12.0224 1.33203 11.4957 1.33203 10.9424V4.5557C1.33203 3.66237 1.84536 3.4557 2.47203 4.08237L4.19203 5.80904C4.45203 6.06237 4.8787 6.06237 5.1387 5.80904L7.52536 3.4157C7.78536 3.1557 8.21203 3.1557 8.47203 3.4157L9.76536 4.70904C10.0187 4.96904 10.0187 5.3957 9.7587 5.6557Z",
                                        fill: "#FEA500"
                                    })])]), createBaseVNode("div", {
                                        class: "last-winner-text"
                                    }, "Last Winner")], -1)), createBaseVNode("div", _hoisted_21$7, [createBaseVNode("div", _hoisted_22$7, [createBaseVNode("div", _hoisted_23$4, toDisplayString(p.value.name), 1), createBaseVNode("div", _hoisted_24$3, toDisplayString(A(p.value.date)), 1)]), createBaseVNode("img", {
                                        class: "winner-avatar",
                                        src: p.value.ava
                                    }, null, 8, _hoisted_25$3)])])) : createCommentVNode("", !0), createBaseVNode("div", _hoisted_26$3, [n.value ? (openBlock(),
                                    createElementBlock("div", _hoisted_27$3, toDisplayString(n.value), 1)) : createCommentVNode("", !0), m.value ? (openBlock(),
                                    createElementBlock("div", _hoisted_28$3, [createBaseVNode("div", _hoisted_29$3, toDisplayString(m.value), 1)])) : createCommentVNode("", !0), o.value ? (openBlock(),
                                    createElementBlock(Fragment, {
                                        key: 3
                                    }, ["default" === d.value ? (openBlock(),
                                        createElementBlock(Fragment, {
                                            key: 0
                                        }, [T.value ? (openBlock(),
                                            createElementBlock(Fragment, {
                                                key: 1
                                            }, [4 === h.value.max_attempts ? (openBlock(),
                                                createElementBlock("div", _hoisted_33$2, [a[16] || (a[16] = createBaseVNode("div", {
                                                    class: "timer-full-label"
                                                }, "Next try:", -1)), createBaseVNode("div", _hoisted_34$1, toDisplayString($(h.value.next_attempt_available)), 1)])) : (openBlock(),
                                                createElementBlock("div", _hoisted_35$1, [createBaseVNode("div", _hoisted_36$1, [a[17] || (a[17] = createBaseVNode("div", {
                                                    class: "timer-next-label"
                                                }, "Next try:", -1)), createBaseVNode("div", _hoisted_37$1, toDisplayString($(h.value.next_attempt_available)), 1)]), createBaseVNode("div", {
                                                    class: "deposit-section"
                                                }, [createBaseVNode("div", {
                                                    class: "safemodal-button deposit-with-badge",
                                                    onClick: P
                                                }, a[18] || (a[18] = [createBaseVNode("div", {
                                                    class: "button-label"
                                                }, "Deposit", -1)])), a[19] || (a[19] = createBaseVNode("div", {
                                                    class: "tries-badge"
                                                }, [createBaseVNode("div", {
                                                    class: "tries-text"
                                                }, "+3 tries")], -1))])]))], 64)) : (openBlock(),
                                            createElementBlock(Fragment, {
                                                key: 0
                                            }, [createBaseVNode("div", _hoisted_30$3, [(openBlock(!0),
                                                createElementBlock(Fragment, null, renderList(B.value, ( (e, t) => (openBlock(),
                                                    createElementBlock("div", {
                                                        key: t,
                                                        class: "code-input",
                                                        onClick: E
                                                    }, [e ? (openBlock(),
                                                        createElementBlock("div", _hoisted_32$3, toDisplayString(e), 1)) : (openBlock(),
                                                        createElementBlock("svg", _hoisted_31$3, a[14] || (a[14] = [createBaseVNode("path", {
                                                            d: "M5.90199 14.329L6.17969 9.4391L2.07457 12.1316L0.601562 9.57191L4.98438 7.37447L0.601562 5.17702L2.07457 2.61737L6.17969 5.30984L5.90199 0.419922H8.83594L8.57031 5.30984L12.6754 2.61737L14.1484 5.17702L9.75355 7.37447L14.1484 9.57191L12.6754 12.1316L8.57031 9.4391L8.83594 14.329H5.90199Z",
                                                            fill: "white",
                                                            "fill-opacity": "0.35"
                                                        }, null, -1)])))])))), 128))]), withDirectives(createBaseVNode("input", {
                                                ref_key: "hiddenInput",
                                                ref: c,
                                                type: "tel",
                                                inputmode: "numeric",
                                                pattern: "[0-9]*",
                                                maxlength: "3",
                                                "onUpdate:modelValue": a[1] || (a[1] = e => l.value = e),
                                                onInput: V,
                                                class: "hidden-input"
                                            }, null, 544), [[vModelText, l.value]]), createBaseVNode("div", {
                                                class: "safemodal-button open-safe-button",
                                                onClick: N
                                            }, a[15] || (a[15] = [createBaseVNode("div", {
                                                class: "button-label"
                                            }, "Open the safe", -1)]))], 64))], 64)) : "success" === d.value ? (openBlock(),
                                        createElementBlock("div", {
                                            key: 1,
                                            class: "safemodal-button",
                                            onClick: a[2] || (a[2] = e => t.$emit("close"))
                                        }, a[20] || (a[20] = [createBaseVNode("div", {
                                            class: "button-label"
                                        }, "Get Prize", -1)]))) : "failed" === d.value ? (openBlock(),
                                        createElementBlock(Fragment, {
                                            key: 2
                                        }, [T.value ? (openBlock(),
                                            createElementBlock(Fragment, {
                                                key: 1
                                            }, [4 === h.value.max_attempts ? (openBlock(),
                                                createElementBlock("div", _hoisted_41$1, [a[23] || (a[23] = createBaseVNode("div", {
                                                    class: "timer-full-label"
                                                }, "Next try:", -1)), createBaseVNode("div", _hoisted_42$1, toDisplayString($(h.value.next_attempt_available)), 1)])) : (openBlock(),
                                                createElementBlock("div", _hoisted_43$1, [createBaseVNode("div", _hoisted_44$1, [a[24] || (a[24] = createBaseVNode("div", {
                                                    class: "timer-next-label"
                                                }, "Next try:", -1)), createBaseVNode("div", _hoisted_45$1, toDisplayString($(h.value.next_attempt_available)), 1)]), createBaseVNode("div", {
                                                    class: "deposit-section"
                                                }, [createBaseVNode("div", {
                                                    class: "safemodal-button deposit-with-badge",
                                                    onClick: P
                                                }, a[25] || (a[25] = [createBaseVNode("div", {
                                                    class: "button-label"
                                                }, "Deposit", -1)])), a[26] || (a[26] = createBaseVNode("div", {
                                                    class: "tries-badge"
                                                }, [createBaseVNode("div", {
                                                    class: "tries-text"
                                                }, "+3 tries")], -1))])]))], 64)) : (openBlock(),
                                            createElementBlock(Fragment, {
                                                key: 0
                                            }, [createBaseVNode("div", _hoisted_38$1, [(openBlock(!0),
                                                createElementBlock(Fragment, null, renderList(B.value, ( (e, t) => (openBlock(),
                                                    createElementBlock("div", {
                                                        key: t,
                                                        class: "code-input",
                                                        onClick: E
                                                    }, [e ? (openBlock(),
                                                        createElementBlock("div", _hoisted_40$1, toDisplayString(e), 1)) : (openBlock(),
                                                        createElementBlock("svg", _hoisted_39$1, a[21] || (a[21] = [createBaseVNode("path", {
                                                            d: "M5.90199 14.329L6.17969 9.4391L2.07457 12.1316L0.601562 9.57191L4.98438 7.37447L0.601562 5.17702L2.07457 2.61737L6.17969 5.30984L5.90199 0.419922H8.83594L8.57031 5.30984L12.6754 2.61737L14.1484 5.17702L9.75355 7.37447L14.1484 9.57191L12.6754 12.1316L8.57031 9.4391L8.83594 14.329H5.90199Z",
                                                            fill: "white",
                                                            "fill-opacity": "0.35"
                                                        }, null, -1)])))])))), 128))]), withDirectives(createBaseVNode("input", {
                                                ref_key: "hiddenInput",
                                                ref: c,
                                                type: "tel",
                                                inputmode: "numeric",
                                                pattern: "[0-9]*",
                                                maxlength: "3",
                                                "onUpdate:modelValue": a[3] || (a[3] = e => l.value = e),
                                                onInput: V,
                                                class: "hidden-input"
                                            }, null, 544), [[vModelText, l.value]]), createBaseVNode("div", {
                                                class: "safemodal-button open-safe-button",
                                                onClick: N
                                            }, a[22] || (a[22] = [createBaseVNode("div", {
                                                class: "button-label"
                                            }, "Open the safe", -1)]))], 64))], 64)) : createCommentVNode("", !0)], 64)) : (openBlock(),
                                    createElementBlock("div", {
                                        key: 2,
                                        class: "safemodal-button",
                                        onClick: x
                                    }, a[13] || (a[13] = [createBaseVNode("div", {
                                        class: "button-label"
                                    }, "Check subscribe", -1)])))])])])])) : createCommentVNode("", !0)]
                        }
                    )),
                    _: 1
                }))
    }
}
    , SafeModal = _export_sfc$1(_sfc_main$x, [["__scopeId", "data-v-ec3fcdbb"]])
    , HotCaseModal_vue_vue_type_style_index_0_scoped_b42f3099_lang = ""
    , _sfc_main$w = defineComponent({
    name: "HotCaseModal",
    props: {
        isOpen: {
            type: Boolean,
            required: !0
        }
    },
    emits: ["close"],
    methods: {
        close() {
            this.$emit("close")
        },
        handleOverlayClick() {
            this.close()
        }
    }
})
    , _hoisted_1$v = {
    class: "modal-content"
}
    , _hoisted_2$s = {
    class: "modal-header"
}
    , _hoisted_3$p = {
    class: "modal-footer"
};
function _sfc_render$e(e, t, a, s, i, r) {
    return openBlock(),
        createBlock(Teleport, {
            to: "body"
        }, [createVNode(Transition, {
            name: "modal-fade"
        }, {
            default: withCtx(( () => [e.isOpen ? (openBlock(),
                createElementBlock("div", {
                    key: 0,
                    class: "modal-overlay",
                    onClick: t[3] || (t[3] = (...t) => e.handleOverlayClick && e.handleOverlayClick(...t))
                }, [createVNode(Transition, {
                    name: "modal-slide"
                }, {
                    default: withCtx(( () => [e.isOpen ? (openBlock(),
                        createElementBlock("div", {
                            key: 0,
                            class: "modal-container",
                            onClick: t[2] || (t[2] = withModifiers(( () => {}
                            ), ["stop"]))
                        }, [createBaseVNode("div", _hoisted_1$v, [createBaseVNode("div", _hoisted_2$s, [t[5] || (t[5] = createBaseVNode("h2", {
                            class: "modal-title"
                        }, "What is this case?", -1)), createBaseVNode("button", {
                            class: "modal-close",
                            onClick: t[0] || (t[0] = (...t) => e.close && e.close(...t))
                        }, t[4] || (t[4] = [createBaseVNode("svg", {
                            width: "24",
                            height: "24",
                            viewBox: "0 0 24 24",
                            fill: "none",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, [createBaseVNode("path", {
                            d: "M18 6L6 18M6 6L18 18",
                            stroke: "white",
                            "stroke-width": "2",
                            "stroke-linecap": "round",
                            "stroke-linejoin": "round"
                        })], -1)]))]), t[6] || (t[6] = createBaseVNode("div", {
                            class: "modal-body"
                        }, [createBaseVNode("p", {
                            class: "modal-description"
                        }, [createTextVNode(" Currently, the case has an increased chance of"), createBaseVNode("br"), createTextVNode(" dropping expensive gifts +50% ")])], -1)), createBaseVNode("div", _hoisted_3$p, [createBaseVNode("button", {
                            class: "modal-button",
                            onClick: t[1] || (t[1] = (...t) => e.close && e.close(...t))
                        }, "Cool")])])])) : createCommentVNode("", !0)])),
                    _: 1
                })])) : createCommentVNode("", !0)])),
            _: 1
        })])
}
const HotCaseModal = _export_sfc$1(_sfc_main$w, [["render", _sfc_render$e], ["__scopeId", "data-v-b42f3099"]])
    , CasesList_vue_vue_type_style_index_0_scoped_267abcd6_lang = ""
    , _sfc_main$v = defineComponent({
    name: "CasesList",
    components: {
        Coin: Coin,
        SafeModal: SafeModal,
        HotCaseModal: HotCaseModal
    },
    data: () => ({
        cards: [],
        selectedCategory: "All",
        showSafeModal: !1,
        showHotModal: !1,
        timers: {}
    }),
    mounted() {
        this.fetchCases()
    },
    beforeUnmount() {
        this.clearTimers()
    },
    computed: {
        filteredCases() {
            return "All" === this.selectedCategory ? this.cards : this.cards.filter((e => {
                    if (!e.category)
                        return !1;
                    return e.category.split(",").map((e => e.trim())).includes(this.selectedCategory)
                }
            ))
        }
    },
    methods: {
        async fetchCases() {
            try {
                const e = await axios$1.get("/api/cases.php", {
                    withCredentials: !0
                });
                this.cards = e.data,
                    this.startTimers()
            } catch (e) {}
        },
        openModal(e) {
            this.$emit("open-modal", e.id)
        },
        selectCategory(e) {
            this.selectedCategory !== e && (this.selectedCategory = e)
        },
        isWebmFile: e => !!e && e.toLowerCase().endsWith(".webm"),
        generateGradientStyle(e) {
            if (!e)
                return {
                    background: "\n            radial-gradient(61.63% 100.04% at 43.18% 123.86%, rgba(171, 173, 174, 0.40) 0%, rgba(171, 173, 174, 0.00) 100%),\n            linear-gradient(180deg, rgba(20, 20, 21, 0.00) 0%, #141415 100%)\n          "
                };
            const t = e.split(",");
            if (6 !== t.length)
                return {
                    background: "none"
                };
            const a = t[0]
                , s = t[1]
                , i = t[2]
                , r = t[3]
                , o = t[4]
                , n = t[5];
            return {
                background: `\n          radial-gradient(61.63% 100.04% at 43.18% 123.86%, rgba(${a}, ${s}, ${i}, 0.40) 0%, rgba(${a}, ${s}, ${i}, 0.00) 100%),\n          linear-gradient(180deg, rgba(${r}, ${o}, ${n}, 0.00) 0%, rgb(${r}, ${o}, ${n}) 100%)\n        `
            }
        },
        startTimers() {
            this.clearTimers();
            const e = {};
            this.cards.forEach((t => {
                    t.is_hot && t.hot_timer && (e[t.id] = t.hot_timer)
                }
            )),
                this.timers = e,
                this.timerInterval = setInterval(( () => {
                        const e = {
                            ...this.timers
                        };
                        Object.keys(e).forEach((t => {
                                e[t] > 0 ? e[t]-- : delete e[t]
                            }
                        )),
                            this.timers = e
                    }
                ), 1e3)
        },
        clearTimers() {
            this.timerInterval && clearInterval(this.timerInterval)
        },
        formatTime(e) {
            const t = Math.floor(e / 3600)
                , a = Math.floor(e % 3600 / 60)
                , s = e % 60;
            return `${String(t).padStart(2, "0")}:${String(a).padStart(2, "0")}:${String(s).padStart(2, "0")}`
        },
        getTimerValue(e, t) {
            return this.timers.hasOwnProperty(e) ? this.timers[e] : t
        }
    }
})
    , _hoisted_1$u = {
    class: "cases-section"
}
    , _hoisted_2$r = {
    class: "tabs"
}
    , _hoisted_3$o = {
    class: "cases-grid"
}
    , _hoisted_4$o = ["onClick"]
    , _hoisted_5$o = {
    class: "free-case-image-container"
}
    , _hoisted_6$m = ["src"]
    , _hoisted_7$m = ["src", "alt"]
    , _hoisted_8$k = {
    class: "free-case-footer"
}
    , _hoisted_9$j = {
    class: "free-case-label"
}
    , _hoisted_10$i = {
    key: 0,
    class: "case-new-badge"
}
    , _hoisted_11$i = {
    key: 1,
    class: "case-hot-badge"
}
    , _hoisted_12$i = {
    key: 3,
    class: "case-image",
    autoplay: "",
    loop: "",
    muted: "",
    playsinline: ""
}
    , _hoisted_13$h = ["src"]
    , _hoisted_14$g = ["src"]
    , _hoisted_15$e = {
    key: 5,
    class: "case-hot-timer"
}
    , _hoisted_16$c = {
    class: "case-footer"
}
    , _hoisted_17$a = {
    class: "case-price"
}
    , _hoisted_18$9 = {
    key: 0,
    class: "ton-gold-icon",
    src: "/images/effects/ton_gold.svg",
    alt: "TON"
};
function _sfc_render$d(e, t, a, s, i, r) {
    const o = resolveComponent("SafeModal")
        , n = resolveComponent("HotCaseModal")
        , l = resolveComponent("Coin");
    return openBlock(),
        createElementBlock("section", _hoisted_1$u, [createBaseVNode("div", {
            class: "safe-banner",
            onClick: t[0] || (t[0] = t => e.showSafeModal = !0)
        }, t[9] || (t[9] = [createBaseVNode("div", {
            class: "safe-banner-content"
        }, [createBaseVNode("div", {
            class: "safe-banner-text"
        }, "Guess the code from the safe and get bonus"), createBaseVNode("img", {
            class: "safe-banner-image",
            src: "/images/effects/safe_mini_banner.png"
        })], -1)])), createVNode(o, {
            "is-open": e.showSafeModal,
            onClose: t[1] || (t[1] = t => e.showSafeModal = !1)
        }, null, 8, ["is-open"]), createVNode(n, {
            "is-open": e.showHotModal,
            onClose: t[2] || (t[2] = t => e.showHotModal = !1)
        }, null, 8, ["is-open"]), createBaseVNode("div", _hoisted_2$r, [createBaseVNode("div", {
            class: normalizeClass(["tab-segment", {
                active: "All" === e.selectedCategory
            }]),
            onClick: t[3] || (t[3] = t => e.selectCategory("All"))
        }, t[10] || (t[10] = [createBaseVNode("div", {
            class: "text"
        }, "❇️ All", -1)]), 2), createBaseVNode("div", {
            class: normalizeClass(["tab-segment3", {
                active: "Free" === e.selectedCategory
            }]),
            onClick: t[4] || (t[4] = t => e.selectCategory("Free"))
        }, t[11] || (t[11] = [createBaseVNode("div", {
            class: "text"
        }, "🎟 Free", -1)]), 2), createBaseVNode("div", {
            class: normalizeClass(["tab-segment3", {
                active: "New" === e.selectedCategory
            }]),
            onClick: t[5] || (t[5] = t => e.selectCategory("New"))
        }, t[12] || (t[12] = [createBaseVNode("div", {
            class: "text"
        }, "⭐️ New", -1)]), 2), createBaseVNode("div", {
            class: normalizeClass(["tab-segment3", {
                active: "Low" === e.selectedCategory
            }]),
            onClick: t[6] || (t[6] = t => e.selectCategory("Low"))
        }, t[13] || (t[13] = [createBaseVNode("div", {
            class: "text"
        }, "🎁 Low", -1)]), 2), createBaseVNode("div", {
            class: normalizeClass(["tab-segment3", {
                active: "High" === e.selectedCategory
            }]),
            onClick: t[7] || (t[7] = t => e.selectCategory("High"))
        }, t[14] || (t[14] = [createBaseVNode("div", {
            class: "text"
        }, "🔥 High", -1)]), 2)]), createBaseVNode("div", _hoisted_3$o, [(openBlock(!0),
            createElementBlock(Fragment, null, renderList(e.filteredCases, (a => (openBlock(),
                createElementBlock("div", {
                    key: a.id,
                    class: normalizeClass(["case-card", {
                        "custom-design-card": a.custom_design,
                        "hot-case": a.is_hot
                    }]),
                    style: normalizeStyle(a.custom_design ? {
                        background: a.custom_design.background
                    } : {}),
                    onClick: t => e.openModal(a)
                }, [a.custom_design ? (openBlock(),
                    createElementBlock(Fragment, {
                        key: 0
                    }, [createBaseVNode("div", _hoisted_5$o, [createBaseVNode("img", {
                        class: "free-case-text-svg",
                        src: `/images/cases/${a.custom_design["text-svg"]}`,
                        style: normalizeStyle({
                            left: void 0 !== a.custom_design.left ? a.custom_design.left + "px" : "-6.5px"
                        })
                    }, null, 12, _hoisted_6$m), createBaseVNode("img", {
                        class: normalizeClass(["free-case-image", {
                            "custom-case-image": 21 !== a.id
                        }]),
                        src: a.image,
                        alt: a.custom_design.label
                    }, null, 10, _hoisted_7$m)]), createBaseVNode("div", _hoisted_8$k, [createBaseVNode("div", _hoisted_9$j, toDisplayString(a.custom_design.label), 1)])], 64)) : (openBlock(),
                    createElementBlock(Fragment, {
                        key: 1
                    }, [createBaseVNode("div", {
                        class: normalizeClass(["case-image-container", {
                            black_backdrop: a.is_black
                        }]),
                        style: normalizeStyle(a.is_black ? {} : e.generateGradientStyle(a.colors))
                    }, [a.is_new && !a.is_hot ? (openBlock(),
                        createElementBlock("div", _hoisted_10$i, t[15] || (t[15] = [createBaseVNode("div", {
                            class: "case-new-label"
                        }, "new", -1)]))) : createCommentVNode("", !0), a.is_hot ? (openBlock(),
                        createElementBlock("div", _hoisted_11$i, t[16] || (t[16] = [createBaseVNode("div", {
                            class: "case-hot-label"
                        }, "🔥 HOT", -1)]))) : createCommentVNode("", !0), a.is_hot ? (openBlock(),
                        createElementBlock("div", {
                            key: 2,
                            class: "case-hot-help",
                            onClick: t[8] || (t[8] = withModifiers((t => e.showHotModal = !0), ["stop"]))
                        }, t[17] || (t[17] = [createBaseVNode("svg", {
                            width: "7",
                            height: "10",
                            viewBox: "0 0 7 10",
                            fill: "none",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, [createBaseVNode("path", {
                            d: "M1.12207 2.56102C1.2644 2.12245 1.52513 1.73215 1.87565 1.43258C2.22618 1.13302 2.65316 0.93616 3.10856 0.863908C3.56396 0.791656 4.03018 0.846675 4.45622 1.02303C4.88225 1.19939 5.25121 1.4903 5.5223 1.86328C5.79339 2.23627 5.95574 2.67681 5.99197 3.13648C6.02821 3.59614 5.93654 4.057 5.72724 4.46786C5.51794 4.87871 5.19948 5.22342 4.80634 5.46436C4.4132 5.7053 3.96109 5.83282 3.5 5.83282V6.66654M3.5415 9.16634V9.24968L3.4585 9.24984V9.16634H3.5415Z",
                            stroke: "white",
                            "stroke-opacity": "0.5",
                            "stroke-width": "1.5",
                            "stroke-linecap": "round",
                            "stroke-linejoin": "round"
                        })], -1)]))) : createCommentVNode("", !0), e.isWebmFile(a.image) ? (openBlock(),
                        createElementBlock("video", _hoisted_12$i, [createBaseVNode("source", {
                            src: a.image,
                            type: "video/webm"
                        }, null, 8, _hoisted_13$h)])) : (openBlock(),
                        createElementBlock("img", {
                            key: 4,
                            class: "case-image",
                            src: a.image,
                            alt: "Case Image"
                        }, null, 8, _hoisted_14$g)), a.is_hot && a.hot_timer ? (openBlock(),
                        createElementBlock("div", _hoisted_15$e, toDisplayString(e.formatTime(e.getTimerValue(a.id, a.hot_timer))), 1)) : createCommentVNode("", !0)], 6), createBaseVNode("div", _hoisted_16$c, [createBaseVNode("div", _hoisted_17$a, toDisplayString(a.price), 1), a.is_hot ? (openBlock(),
                        createElementBlock("img", _hoisted_18$9)) : (openBlock(),
                        createBlock(l, {
                            key: 1,
                            size: "small"
                        }))])], 64))], 14, _hoisted_4$o)))), 128))])])
}
const CasesList = _export_sfc$1(_sfc_main$v, [["render", _sfc_render$d], ["__scopeId", "data-v-267abcd6"]])
    , UserHeader_vue_vue_type_style_index_0_scoped_bd830ce8_lang = ""
    , _sfc_main$u = defineComponent({
    name: "UserHeader",
    components: {
        Coin: Coin
    },
    props: {
        initialWalletAddress: {
            type: String,
            default: null
        }
    },
    setup(e) {
        const t = inject("userStore")
            , a = useRouter()
            , s = useTonWallet()
            , i = useTonAddress()
            , {tonConnectUI: r} = useTonConnectUI()
            , o = ref(!1)
            , n = ref(null)
            , l = ref(!1)
            , c = ref(!1)
            , d = ref(null)
            , h = ref(null)
            , p = ref({})
            , u = ref(!!t.state.user.walletAddress)
            , m = ref(!1)
            , f = ref(!1);
        watch(( () => t.state.user.walletAddress), (e => {
                u.value = !!e
            }
        )),
            watch(( () => t.state.user.balance), ( (e, t) => {
                    if (void 0 !== t && e !== t) {
                        const a = e - t;
                        a > 0 ? (m.value = !0,
                            setTimeout(( () => {
                                    m.value = !1
                                }
                            ), 1e3)) : a < 0 && (f.value = !0,
                            setTimeout(( () => {
                                    f.value = !1
                                }
                            ), 1e3))
                    }
                }
            )),
            watch(( () => s.value), (async e => {
                    if (e && i.value && !t.state.user.walletAddress)
                        try {
                            await v(i.value)
                        } catch (a) {
                            n.value = "Failed to sync wallet: " + (a.message || "Unknown error")
                        }
                }
            ), {
                immediate: !0
            }),
            watch(( () => i.value), (async e => {
                    if (s.value && e && !t.state.user.walletAddress)
                        try {
                            await v(e)
                        } catch (a) {
                            n.value = "Failed to sync wallet: " + (a.message || "Unknown error")
                        }
                }
            ), {
                immediate: !0
            });
        const v = async e => {
                if (e)
                    try {
                        const a = await axios$1.post("/api/update_wallet.php", {
                            wallet_address: e
                        }, {
                            withCredentials: !0
                        });
                        if (!a.data.success)
                            throw new Error(a.data.message || "Failed to save wallet address");
                        t.connectWallet(e),
                            u.value = !0
                    } catch (a) {
                        throw a
                    }
            }
            , g = () => {
                if (l.value && d.value && h.value) {
                    const e = d.value.getBoundingClientRect()
                        , t = window.innerHeight
                        , a = h.value.offsetHeight || 100
                        , s = t - e.bottom < a + 10;
                    h.value.style.top = s ? e.top - a - 5 + "px" : `${e.bottom + 5}px`;
                    const i = h.value.offsetWidth || 160;
                    e.right - i < 10 ? h.value.style.left = `${Math.max(10, e.left)}px` : h.value.style.left = e.right - i + "px"
                }
            }
            , y = e => {
                l.value && d.value && h.value && !d.value.contains(e.target) && !h.value.contains(e.target) && (l.value = !1)
            }
        ;
        return watch(l, (e => {
                e && nextTick(( () => {
                        g()
                    }
                ))
            }
        )),
            onMounted(( () => {
                    u.value = !!t.state.user.walletAddress,
                    s.value && i.value && !t.state.user.walletAddress && v(i.value).catch((e => {}
                    )),
                    e.initialWalletAddress && !t.state.user.walletAddress && (t.connectWallet(e.initialWalletAddress),
                        u.value = !0),
                        document.addEventListener("click", y),
                        window.addEventListener("resize", g),
                        window.addEventListener("scroll", g),
                        window.addEventListener("orientationchange", ( () => {
                                l.value && setTimeout(g, 300)
                            }
                        ))
                }
            )),
            onUnmounted(( () => {
                    document.removeEventListener("click", y),
                        window.removeEventListener("resize", g),
                        window.removeEventListener("scroll", g)
                }
            )),
            {
                userStore: t,
                connecting: o,
                error: n,
                isDropdownOpen: l,
                showCopySuccess: c,
                copySuccessStyle: p,
                dropdownButton: d,
                dropdownMenu: h,
                connectWallet: async () => {
                    o.value = !0,
                        n.value = null;
                    try {
                        if (r && s.value && i.value && !t.state.user.walletAddress)
                            return void (await v(i.value));
                        if (r) {
                            if (s.value)
                                try {
                                    await r.disconnect(),
                                        await new Promise((e => setTimeout(e, 300)))
                                } catch (e) {}
                            await r.openModal()
                        } else {
                            await new Promise((e => setTimeout(e, 1e3)));
                            const e = "0xEa2C128dabB6787E472cFd8a9CDb0f8a0de09d11";
                            await v(e)
                        }
                    } catch (a) {
                        if (n.value = "Failed to connect wallet: " + (a.message || "Unknown error"),
                        a.message && a.message.includes("already connected") && s.value && i.value)
                            try {
                                await v(i.value),
                                    n.value = null
                            } catch (l) {
                                n.value = "Failed to sync wallet: " + (l.message || "Unknown error")
                            }
                    } finally {
                        o.value = !1
                    }
                }
                ,
                disconnectWallet: async () => {
                    try {
                        if (r && s.value)
                            try {
                                await r.disconnect()
                            } catch (e) {}
                        const a = await axios$1.post("/api/update_wallet.php", {
                            disconnect: !0
                        }, {
                            withCredentials: !0
                        });
                        if (!a.data.success)
                            throw new Error(a.data.message || "Failed to disconnect wallet in database");
                        t.disconnectWallet(),
                            l.value = !1,
                            u.value = !1
                    } catch (a) {
                        n.value = "Failed to disconnect wallet: " + (a.message || "Unknown error")
                    }
                }
                ,
                closeError: () => {
                    n.value = null
                }
                ,
                copyAddress: async () => {
                    try {
                        const a = t.state.user.walletAddress;
                        if (!a)
                            return void (n.value = "No wallet address available to copy");
                        if (d.value) {
                            const e = d.value.getBoundingClientRect();
                            p.value = {
                                top: `${e.bottom + 10}px`,
                                left: `${e.left + e.width / 2}px`,
                                transform: "translateX(-50%)"
                            }
                        }
                        let s = !1;
                        if (navigator.clipboard && navigator.clipboard.writeText)
                            try {
                                await navigator.clipboard.writeText(a),
                                    s = !0
                            } catch (e) {}
                        if (!s && window.Telegram && window.Telegram.WebApp)
                            try {
                                window.Telegram.WebApp.readTextFromClipboard((function(e) {
                                        window.Telegram.WebApp.copyTextToClipboard(a),
                                            s = !0
                                    }
                                ))
                            } catch (e) {}
                        if (!s) {
                            const t = document.createElement("textarea");
                            t.value = a,
                                t.style.position = "fixed",
                                t.style.left = "-999999px",
                                t.style.top = "-999999px",
                                document.body.appendChild(t),
                                t.focus(),
                                t.select();
                            try {
                                s = document.execCommand("copy")
                            } catch (e) {}
                            document.body.removeChild(t)
                        }
                        if (!s)
                            return void (n.value = `Clipboard access blocked. Please manually copy: ${a}`);
                        l.value = !1,
                            c.value = !0,
                            setTimeout(( () => {
                                    c.value = !1
                                }
                            ), 2e3)
                    } catch (e) {
                        n.value = "Failed to copy address: " + (e.message || "Unknown error")
                    }
                }
                ,
                walletConnected: u,
                isAnimatingBalanceIncrease: m,
                isAnimatingBalanceDecrease: f,
                navigateToProfile: () => {
                    a.push("/profile")
                }
                ,
                toggleDropdown: () => {
                    l.value = !l.value,
                    l.value && nextTick(( () => {
                            g()
                        }
                    ))
                }
            }
    }
})
    , _hoisted_1$t = {
    class: "user-header"
}
    , _hoisted_2$q = {
    class: "user-header-row"
}
    , _hoisted_3$n = ["src"]
    , _hoisted_4$n = {
    key: 1,
    class: "avatar",
    src: "/images/effects/profile.svg",
    alt: "User Avatar"
}
    , _hoisted_5$n = {
    class: "profile-info"
}
    , _hoisted_6$l = {
    class: "profile-name"
}
    , _hoisted_7$l = {
    class: "wallet-section"
}
    , _hoisted_8$j = ["disabled"]
    , _hoisted_9$i = {
    class: "button-label"
}
    , _hoisted_10$h = {
    key: 1,
    class: "wallet-dropdown-container"
}
    , _hoisted_11$h = {
    key: 0,
    class: "dropdown-menu",
    ref: "dropdownMenu"
}
    , _hoisted_12$h = {
    class: "coin-count"
}
    , _hoisted_13$g = {
    class: "coin-container"
}
    , _hoisted_14$f = {
    key: 1,
    class: "wallet-error alert"
};
function _sfc_render$c(e, t, a, s, i, r) {
    const o = resolveComponent("Coin");
    return openBlock(),
        createElementBlock("header", _hoisted_1$t, [createBaseVNode("div", _hoisted_2$q, [createBaseVNode("div", {
            class: "profile",
            onClick: t[0] || (t[0] = (...t) => e.navigateToProfile && e.navigateToProfile(...t)),
            style: {
                cursor: "pointer"
            }
        }, [e.userStore.state.user.photoUrl ? (openBlock(),
            createElementBlock("img", {
                key: 0,
                class: "avatar",
                src: e.userStore.state.user.photoUrl,
                alt: "User Avatar"
            }, null, 8, _hoisted_3$n)) : (openBlock(),
            createElementBlock("img", _hoisted_4$n)), createBaseVNode("div", _hoisted_5$n, [createBaseVNode("div", _hoisted_6$l, toDisplayString(e.userStore.displayName), 1)])]), createBaseVNode("div", _hoisted_7$l, [e.walletConnected ? (openBlock(),
            createElementBlock("div", _hoisted_10$h, [createBaseVNode("button", {
                class: "wallet-address-button",
                onClick: t[2] || (t[2] = (...t) => e.toggleDropdown && e.toggleDropdown(...t)),
                ref: "dropdownButton"
            }, [createBaseVNode("span", null, toDisplayString(e.userStore.formattedWalletAddress), 1), t[7] || (t[7] = createBaseVNode("svg", {
                width: "10",
                height: "6",
                viewBox: "0 0 10 6",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
            }, [createBaseVNode("path", {
                d: "M1 1L5 5L9 1",
                stroke: "white",
                "stroke-width": "1.5",
                "stroke-linecap": "round",
                "stroke-linejoin": "round"
            })], -1))], 512), e.isDropdownOpen ? (openBlock(),
                createElementBlock("div", _hoisted_11$h, [createBaseVNode("button", {
                    class: "dropdown-item",
                    onClick: t[3] || (t[3] = (...t) => e.copyAddress && e.copyAddress(...t))
                }, t[8] || (t[8] = [createBaseVNode("svg", {
                    width: "16",
                    height: "16",
                    viewBox: "0 0 24 24",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, [createBaseVNode("path", {
                    d: "M8 5H6C4.89543 5 4 5.89543 4 7V19C4 20.1046 4.89543 21 6 21H16C17.1046 21 18 20.1046 18 19V17M8 5C8 6.10457 8.89543 7 10 7H14C15.1046 7 16 6.10457 16 5M8 5C8 3.89543 8.89543 3 10 3H14C15.1046 3 16 3.89543 16 5M16 5H18C19.1046 5 20 5.89543 20 7V13",
                    stroke: "white",
                    "stroke-width": "1.5",
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round"
                })], -1), createBaseVNode("span", null, "Copy Address", -1)])), createBaseVNode("button", {
                    class: "dropdown-item disconnect",
                    onClick: t[4] || (t[4] = (...t) => e.disconnectWallet && e.disconnectWallet(...t))
                }, t[9] || (t[9] = [createBaseVNode("svg", {
                    width: "16",
                    height: "16",
                    viewBox: "0 0 24 24",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, [createBaseVNode("path", {
                    d: "M9 21H5C4.46957 21 3.96086 20.7893 3.58579 20.4142C3.21071 20.0391 3 19.5304 3 19V5C3 4.46957 3.21071 3.96086 3.58579 3.58579C3.96086 3.21071 4.46957 3 5 3H9M16 17L21 12M21 12L16 7M21 12H9",
                    stroke: "#FF4D4D",
                    "stroke-width": "1.5",
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round"
                })], -1), createBaseVNode("span", {
                    class: "disconnect-text"
                }, "Disconnect", -1)]))], 512)) : createCommentVNode("", !0)])) : (openBlock(),
            createElementBlock("button", {
                key: 0,
                class: "wallet-button",
                onClick: t[1] || (t[1] = (...t) => e.connectWallet && e.connectWallet(...t)),
                disabled: e.connecting
            }, [createBaseVNode("span", _hoisted_9$i, toDisplayString(e.connecting ? "Connecting..." : "Connect Wallet"), 1)], 8, _hoisted_8$j)), createBaseVNode("div", {
            class: normalizeClass(["coin-count-container", {
                "balance-increase": e.isAnimatingBalanceIncrease,
                "balance-decrease": e.isAnimatingBalanceDecrease
            }]),
            onClick: t[5] || (t[5] = (...t) => e.navigateToProfile && e.navigateToProfile(...t)),
            style: {
                cursor: "pointer"
            }
        }, [createBaseVNode("div", _hoisted_12$h, toDisplayString(e.userStore.formattedBalance), 1), createBaseVNode("div", _hoisted_13$g, [createVNode(o, {
            size: "medium"
        })])], 2)])]), e.showCopySuccess ? (openBlock(),
            createElementBlock("div", {
                key: 0,
                class: "copy-success",
                style: normalizeStyle(e.copySuccessStyle)
            }, " Address copied! ", 4)) : createCommentVNode("", !0), e.error ? (openBlock(),
            createElementBlock("div", _hoisted_14$f, [createTextVNode(toDisplayString(e.error) + " ", 1), createBaseVNode("button", {
                class: "close-error",
                onClick: t[6] || (t[6] = (...t) => e.closeError && e.closeError(...t))
            }, "×")])) : createCommentVNode("", !0)])
}
const UserHeader = _export_sfc$1(_sfc_main$u, [["render", _sfc_render$c], ["__scopeId", "data-v-bd830ce8"]])
    , FooterInfo_vue_vue_type_style_index_0_scoped_88094f08_lang = ""
    , _sfc_main$t = {
    name: "FooterInfo"
}
    , _hoisted_1$s = {
    class: "footer-info"
};
function _sfc_render$b(e, t, a, s, i, r) {
    return openBlock(),
        createElementBlock("div", _hoisted_1$s, t[0] || (t[0] = [createStaticVNode('<div class="footer-vlo" data-v-88094f08><div class="text" data-v-88094f08><span class="company-name" data-v-88094f08>VLO UNICOMB IT LIMITED</span><span class="company-details" data-v-88094f08> Company number HE 434998, Loutrakiou 5, CHARA VENEZIA, 1st floor, Flat/Office 101, Stovolos, 2027, Nicosia, Cyprus </span></div><div class="footer-links" data-v-88094f08><a href="/agreement.html" target="_blank" class="footer-link" data-v-88094f08>User Agreement</a></div></div>', 1)]))
}
const FooterInfo = _export_sfc$1(_sfc_main$t, [["render", _sfc_render$b], ["__scopeId", "data-v-88094f08"]])
    , MainPage_vue_vue_type_style_index_0_scoped_66ac9c5e_lang = ""
    , _sfc_main$s = defineComponent({
    name: "MainPage",
    components: {
        UserHeader: UserHeader,
        LiveDrop: LiveDrop,
        CasesList: CasesList,
        FooterInfo: FooterInfo
    },
    emits: ["open-modal"],
    setup(e, {emit: t}) {
        const a = inject("userStore")
            , s = ref(!1);
        onMounted(( () => {
                window.Telegram && window.Telegram.WebApp && window.Telegram.WebApp.initData && (s.value = !0)
            }
        ));
        return {
            userStore: a,
            handleOpenModal: e => {
                t("open-modal", e)
            }
            ,
            isTelegramMiniApp: s
        }
    }
})
    , _hoisted_1$r = {
    class: "main-page"
}
    , _hoisted_2$p = {
    class: "main-panel"
};
function _sfc_render$a(e, t, a, s, i, r) {
    const o = resolveComponent("UserHeader")
        , n = resolveComponent("LiveDrop")
        , l = resolveComponent("CasesList")
        , c = resolveComponent("FooterInfo");
    return openBlock(),
        createElementBlock("div", _hoisted_1$r, [createBaseVNode("div", _hoisted_2$p, [createVNode(o), createVNode(n), createVNode(l, {
            onOpenModal: e.handleOpenModal
        }, null, 8, ["onOpenModal"]), e.isTelegramMiniApp ? createCommentVNode("", !0) : (openBlock(),
            createBlock(c, {
                key: 0
            }))])])
}
const MainPage = _export_sfc$1(_sfc_main$s, [["render", _sfc_render$a], ["__scopeId", "data-v-66ac9c5e"]])
    , WeeklyLeaderboard_vue_vue_type_style_index_0_scoped_981147a7_lang = ""
    , _hoisted_1$q = {
    class: "weekly-leaderboard"
}
    , _hoisted_2$o = {
    class: "leaderboard-tabs"
}
    , _hoisted_3$m = {
    key: 0,
    class: "loading-state"
}
    , _hoisted_4$m = {
    key: 1,
    class: "error-state"
}
    , _hoisted_5$m = {
    class: "error-message"
}
    , _hoisted_6$k = {
    key: 0,
    class: "rewards-section"
}
    , _hoisted_7$k = {
    class: "rewards-header"
}
    , _hoisted_8$i = {
    key: 0,
    class: "rewards-subtitle"
}
    , _hoisted_9$h = {
    class: "rewards-container"
}
    , _hoisted_10$g = {
    class: "rewards-row"
}
    , _hoisted_11$g = {
    key: 0,
    class: "reward-card reward-card-large"
}
    , _hoisted_12$g = ["src"]
    , _hoisted_13$f = {
    key: 1,
    class: "reward-card reward-card-large"
}
    , _hoisted_14$e = ["src"]
    , _hoisted_15$d = {
    class: "rewards-row"
}
    , _hoisted_16$b = {
    key: 0,
    class: "reward-card"
}
    , _hoisted_17$9 = ["src"]
    , _hoisted_18$8 = {
    key: 1,
    class: "reward-card"
}
    , _hoisted_19$8 = ["src"]
    , _hoisted_20$6 = {
    key: 2,
    class: "reward-card"
}
    , _hoisted_21$6 = ["src"]
    , _hoisted_22$6 = {
    class: "leaderboard-users"
}
    , _hoisted_23$3 = {
    class: "user-info"
}
    , _hoisted_24$2 = ["src"]
    , _hoisted_25$2 = {
    class: "user-details"
}
    , _hoisted_26$2 = {
    class: "user-name"
}
    , _hoisted_27$2 = {
    class: "user-stats"
}
    , _hoisted_28$2 = {
    class: "user-earnings"
}
    , _hoisted_29$2 = {
    class: "earnings-amount"
}
    , _hoisted_30$2 = {
    class: "amount-text"
}
    , _hoisted_31$2 = {
    class: "coin-wrapper"
}
    , _hoisted_32$2 = {
    class: "user-rank"
}
    , _hoisted_33$1 = {
    class: "rank-text"
}
    , _hoisted_34 = {
    key: 1,
    class: "current-user-fixed"
}
    , _hoisted_35 = {
    class: "user-status-card"
}
    , _hoisted_36 = {
    class: "user-info"
}
    , _hoisted_37 = ["src"]
    , _hoisted_38 = {
    class: "user-details"
}
    , _hoisted_39 = {
    class: "user-name"
}
    , _hoisted_40 = {
    class: "user-stats"
}
    , _hoisted_41 = {
    class: "user-earnings"
}
    , _hoisted_42 = {
    class: "earnings-amount"
}
    , _hoisted_43 = {
    class: "amount-text"
}
    , _hoisted_44 = {
    class: "coin-wrapper"
}
    , _hoisted_45 = {
    class: "user-rank"
}
    , _hoisted_46 = {
    class: "rank-text"
}
    , _sfc_main$r = {
    __name: "WeeklyLeaderboard",
    setup(e) {
        const t = inject("userStore")
            , a = ref("weekly")
            , s = ref([])
            , i = ref([])
            , r = ref(null)
            , o = ref(!0)
            , n = ref(null)
            , l = ref(null)
            , c = ref(null)
            , d = e => {
            a.value = e,
                v(e)
        }
            , h = e => e ? e.startsWith("/") ? e : `/${e}` : ""
            , p = e => {
            if (null == e)
                return "0";
            const t = e.toString().split(".");
            return t[0] = t[0].replace(/\B(?=(\d{3})+(?!\d))/g, " "),
                t.join(".")
        }
            , u = e => null == e ? "0" : e >= 1e6 ? p((e / 1e6).toFixed(1)) + "M" : e >= 1e3 ? p((e / 1e3).toFixed(1)) + "k" : p(e)
            , m = computed(( () => {
                const e = "weekly" === a.value ? s.value : i.value;
                return !!(t.state.user && e.length && r.value) && e.some((e => e.user_id === r.value.user_id))
            }
        ))
            , f = computed(( () => "weekly" === a.value && l.value && Object.keys(l.value).length > 0))
            , v = async e => {
            try {
                o.value = !0,
                    n.value = null,
                "friends" === e && (l.value = null,
                    c.value = null);
                const t = "friends" === e ? "/api/week_top.php?type=friends" : "/api/week_top.php"
                    , a = await axios$1.get(t, {
                    withCredentials: !0
                });
                if (a.data) {
                    r.value = a.data.user_stat || null;
                    const t = (a.data.week_users || []).map(( (e, t) => ({
                        ...e,
                        rank: t + 1
                    })));
                    "friends" === e ? i.value = t : (s.value = t,
                    a.data.rewards && (l.value = a.data.rewards,
                        c.value = a.data.rewards_date || null))
                }
            } catch (t) {
                n.value = "Failed to load leaderboard data. Please try again."
            } finally {
                o.value = !1
            }
        }
            , g = computed(( () => "weekly" === a.value ? s.value : i.value));
        return onMounted(( () => {
                v(a.value)
            }
        )),
            (e, t) => (openBlock(),
                createElementBlock("div", _hoisted_1$q, [createBaseVNode("div", _hoisted_2$o, [createBaseVNode("div", {
                    class: normalizeClass(["tab-button", {
                        active: "weekly" === a.value
                    }]),
                    onClick: t[0] || (t[0] = e => d("weekly"))
                }, t[3] || (t[3] = [createBaseVNode("div", {
                    class: "tab-text"
                }, "Weekly", -1)]), 2), createBaseVNode("div", {
                    class: normalizeClass(["tab-button", {
                        active: "friends" === a.value
                    }]),
                    onClick: t[1] || (t[1] = e => d("friends"))
                }, t[4] || (t[4] = [createBaseVNode("div", {
                    class: "tab-text"
                }, "Friends", -1)]), 2)]), o.value ? (openBlock(),
                    createElementBlock("div", _hoisted_3$m, t[5] || (t[5] = [createBaseVNode("div", {
                        class: "loading-spinner"
                    }, null, -1), createBaseVNode("div", {
                        class: "loading-text"
                    }, "Loading leaderboard data...", -1)]))) : n.value ? (openBlock(),
                    createElementBlock("div", _hoisted_4$m, [createBaseVNode("div", _hoisted_5$m, toDisplayString(n.value), 1), createBaseVNode("button", {
                        class: "retry-button",
                        onClick: t[2] || (t[2] = e => v(a.value))
                    }, t[6] || (t[6] = [createBaseVNode("div", {
                        class: "button-label"
                    }, "Try Again", -1)]))])) : (openBlock(),
                    createElementBlock(Fragment, {
                        key: 2
                    }, [f.value ? (openBlock(),
                        createElementBlock("div", _hoisted_6$k, [createBaseVNode("div", _hoisted_7$k, [t[7] || (t[7] = createBaseVNode("div", {
                            class: "rewards-title"
                        }, "Get prizes for being at the top", -1)), c.value ? (openBlock(),
                            createElementBlock("div", _hoisted_8$i, " Prizes will be drawn on " + toDisplayString(c.value), 1)) : createCommentVNode("", !0)]), createBaseVNode("div", _hoisted_9$h, [createBaseVNode("div", _hoisted_10$g, [l.value["1st"] ? (openBlock(),
                            createElementBlock("div", _hoisted_11$g, [t[8] || (t[8] = createBaseVNode("div", {
                                class: "reward-glow reward-glow-gold"
                            }, null, -1)), createBaseVNode("img", {
                                class: "reward-image reward-image-large",
                                src: h(l.value["1st"].image),
                                alt: "1st place prize"
                            }, null, 8, _hoisted_12$g), t[9] || (t[9] = createBaseVNode("div", {
                                class: "reward-badge reward-badge-gold"
                            }, [createBaseVNode("div", {
                                class: "reward-badge-text"
                            }, "1st")], -1))])) : createCommentVNode("", !0), l.value["2nd"] ? (openBlock(),
                            createElementBlock("div", _hoisted_13$f, [t[10] || (t[10] = createBaseVNode("div", {
                                class: "reward-glow reward-glow-silver"
                            }, null, -1)), createBaseVNode("img", {
                                class: "reward-image reward-image-large",
                                src: h(l.value["2nd"].image),
                                alt: "2nd place prize"
                            }, null, 8, _hoisted_14$e), t[11] || (t[11] = createBaseVNode("div", {
                                class: "reward-badge reward-badge-silver"
                            }, [createBaseVNode("div", {
                                class: "reward-badge-text"
                            }, "2nd")], -1))])) : createCommentVNode("", !0)]), createBaseVNode("div", _hoisted_15$d, [l.value["3rd"] ? (openBlock(),
                            createElementBlock("div", _hoisted_16$b, [t[12] || (t[12] = createBaseVNode("div", {
                                class: "reward-glow reward-glow-bronze"
                            }, null, -1)), createBaseVNode("img", {
                                class: "reward-image",
                                src: h(l.value["3rd"].image),
                                alt: "3rd place prize"
                            }, null, 8, _hoisted_17$9), t[13] || (t[13] = createBaseVNode("div", {
                                class: "reward-badge reward-badge-bronze"
                            }, [createBaseVNode("div", {
                                class: "reward-badge-text"
                            }, "3rd")], -1))])) : createCommentVNode("", !0), l.value["4-10"] ? (openBlock(),
                            createElementBlock("div", _hoisted_18$8, [createBaseVNode("img", {
                                class: "reward-image",
                                src: h(l.value["4-10"].image),
                                alt: "4-10 place prize"
                            }, null, 8, _hoisted_19$8), t[14] || (t[14] = createBaseVNode("div", {
                                class: "reward-badge reward-badge-dark"
                            }, [createBaseVNode("div", {
                                class: "reward-badge-text"
                            }, "4-10")], -1))])) : createCommentVNode("", !0), l.value["11-20"] ? (openBlock(),
                            createElementBlock("div", _hoisted_20$6, [createBaseVNode("img", {
                                class: "reward-image",
                                src: h(l.value["11-20"].image),
                                alt: "11-20 place prize"
                            }, null, 8, _hoisted_21$6), t[15] || (t[15] = createBaseVNode("div", {
                                class: "reward-badge reward-badge-dark"
                            }, [createBaseVNode("div", {
                                class: "reward-badge-text"
                            }, "11-20")], -1))])) : createCommentVNode("", !0)])])])) : createCommentVNode("", !0), t[16] || (t[16] = createBaseVNode("div", {
                        class: "leaderboard-headers"
                    }, [createBaseVNode("div", {
                        class: "header-text"
                    }, "User"), createBaseVNode("div", {
                        class: "header-text"
                    }, "Earned Income")], -1)), createBaseVNode("div", _hoisted_22$6, [(openBlock(!0),
                        createElementBlock(Fragment, null, renderList(g.value, (e => (openBlock(),
                            createElementBlock("div", {
                                key: e.user_id,
                                class: normalizeClass(["user-card", {
                                    highlight: e.rank <= 3,
                                    "current-user": r.value && e.user_id === r.value.user_id
                                }])
                            }, [createBaseVNode("div", _hoisted_23$3, [createBaseVNode("img", {
                                class: "user-avatar",
                                src: e.avatar,
                                alt: "User Avatar"
                            }, null, 8, _hoisted_24$2), createBaseVNode("div", _hoisted_25$2, [createBaseVNode("div", _hoisted_26$2, toDisplayString(e.name), 1), createBaseVNode("div", _hoisted_27$2, "Opened " + toDisplayString(p(e.cases_week)) + " cases", 1)])]), createBaseVNode("div", _hoisted_28$2, [createBaseVNode("div", _hoisted_29$2, [createBaseVNode("div", _hoisted_30$2, toDisplayString(u(e.profit_week)), 1), createBaseVNode("div", _hoisted_31$2, [createVNode(Coin, {
                                size: "small"
                            })])]), createBaseVNode("div", _hoisted_32$2, [createBaseVNode("div", _hoisted_33$1, "#" + toDisplayString(e.rank), 1)])])], 2)))), 128))]), r.value && !m.value ? (openBlock(),
                        createElementBlock("div", _hoisted_34, [createBaseVNode("div", _hoisted_35, [createBaseVNode("div", _hoisted_36, [createBaseVNode("img", {
                            class: "user-avatar",
                            src: r.value.avatar,
                            alt: "Your Avatar"
                        }, null, 8, _hoisted_37), createBaseVNode("div", _hoisted_38, [createBaseVNode("div", _hoisted_39, toDisplayString(r.value.name || "You"), 1), createBaseVNode("div", _hoisted_40, "Opened " + toDisplayString(p(r.value.cases_week)) + " cases", 1)])]), createBaseVNode("div", _hoisted_41, [createBaseVNode("div", _hoisted_42, [createBaseVNode("div", _hoisted_43, toDisplayString(u(r.value.profit_week)), 1), createBaseVNode("div", _hoisted_44, [createVNode(Coin, {
                            size: "small"
                        })])]), createBaseVNode("div", _hoisted_45, [createBaseVNode("div", _hoisted_46, "#" + toDisplayString(r.value.position), 1)])])])])) : createCommentVNode("", !0)], 64))]))
    }
}
    , WeeklyLeaderboard = _export_sfc$1(_sfc_main$r, [["__scopeId", "data-v-981147a7"]])
    , WeeklyPage_vue_vue_type_style_index_0_scoped_aafc2f0f_lang = ""
    , _hoisted_1$p = {
    class: "weekly-page"
}
    , _sfc_main$q = {
    __name: "WeeklyPage",
    setup: e => (e, t) => (openBlock(),
        createElementBlock("div", _hoisted_1$p, [createVNode(WeeklyLeaderboard)]))
}
    , WeeklyPage = _export_sfc$1(_sfc_main$q, [["__scopeId", "data-v-aafc2f0f"]])
    , ModalWithdrawRef_vue_vue_type_style_index_0_scoped_8552786f_lang = ""
    , _hoisted_1$o = {
    key: 0,
    class: "error-message"
}
    , _hoisted_2$n = {
    key: 1,
    class: "success-message"
}
    , _hoisted_3$l = {
    class: "frame-2087328884"
}
    , _hoisted_4$l = {
    class: "frame-2087328930"
}
    , _hoisted_5$l = {
    class: "button"
}
    , _hoisted_6$j = ["disabled"]
    , _hoisted_7$j = {
    class: "frame-2087328931"
}
    , _hoisted_8$h = {
    class: "button3"
}
    , _hoisted_9$g = ["disabled"]
    , _hoisted_10$f = {
    class: "coin"
}
    , _hoisted_11$f = {
    class: "frame-2087328873"
}
    , _hoisted_12$f = {
    class: "label4"
}
    , _hoisted_13$e = {
    class: "coin2"
}
    , _hoisted_14$d = {
    class: "label5"
}
    , _hoisted_15$c = {
    key: 0
}
    , _hoisted_16$a = {
    key: 1
}
    , _sfc_main$p = {
    __name: "ModalWithdrawRef",
    props: {
        isOpen: {
            type: Boolean,
            default: !1
        },
        availableBalance: {
            type: Number,
            default: 0
        },
        userWallet: {
            type: String,
            default: null
        }
    },
    emits: ["close", "withdraw-complete"],
    setup(e, {emit: t}) {
        const a = e
            , s = t
            , i = ref("")
            , r = ref("")
            , o = ref("")
            , n = ref("")
            , l = ref(!1)
            , c = ref(!1)
            , d = computed(( () => !!a.userWallet))
            , h = computed(( () => {
                    const e = i.value && i.value.trim().length >= 10
                        , t = parseFloat(r.value)
                        , s = !isNaN(t) && t > 0 && t <= a.availableBalance && t >= 1;
                    return e && s
                }
            ))
            , p = () => {
                a.userWallet ? i.value = a.userWallet : o.value = "No linked wallet available. Please connect a wallet first."
            }
            , u = () => {
                a.availableBalance > 0 && (r.value = a.availableBalance.toString())
            }
            , m = async () => {
                var e, t;
                if (h.value)
                    try {
                        o.value = "",
                            n.value = "",
                            l.value = !0;
                        const e = parseFloat(r.value);
                        if (e < 1)
                            return o.value = "Minimum withdrawal amount is 1 TON",
                                void (l.value = !1);
                        const t = await axios$1.post("/api/withdraw_ton_ref.php", {
                            wallet_address: i.value.trim(),
                            amount: e
                        }, {
                            withCredentials: !0
                        });
                        t.data.success ? (n.value = t.data.message || "Withdrawal request successful!",
                            r.value = "",
                            s("withdraw-complete", {
                                amount: e,
                                success: !0
                            }),
                            setTimeout(( () => {
                                    f()
                                }
                            ), 3e3)) : o.value = t.data.error || "Failed to process withdrawal request"
                    } catch (a) {
                        o.value = (null == (t = null == (e = a.response) ? void 0 : e.data) ? void 0 : t.error) || "An error occurred during withdrawal"
                    } finally {
                        l.value = !1
                    }
            }
            , f = () => {
                l.value || (c.value = !0,
                    setTimeout(( () => {
                            s("close"),
                                c.value = !1,
                                o.value = "",
                                n.value = "",
                                r.value = ""
                        }
                    ), 300))
            }
        ;
        return watch(( () => a.userWallet), (e => {
                e && a.isOpen && (i.value = e)
            }
        ), {
            immediate: !0
        }),
            watch(( () => a.isOpen), (e => {
                    e || (o.value = "",
                        n.value = "",
                        r.value = "")
                }
            )),
            (t, a) => {
                return e.isOpen ? (openBlock(),
                    createElementBlock("div", {
                        key: 0,
                        class: "modal-overlay",
                        onClick: withModifiers(f, ["self"])
                    }, [createBaseVNode("div", {
                        class: normalizeClass(["modal", {
                            closing: c.value
                        }])
                    }, [a[5] || (a[5] = createBaseVNode("div", {
                        class: "frame-2087328889"
                    }, [createBaseVNode("div", {
                        class: "withdraw-referral-balance"
                    }, "Withdraw referral balance"), createBaseVNode("div", {
                        class: "enter-the-amount-you-want-to-withdraw"
                    }, " Enter the amount you want to withdraw ")], -1)), createBaseVNode("div", {
                        class: "icon",
                        onClick: f
                    }, a[2] || (a[2] = [createBaseVNode("svg", {
                        class: "close",
                        width: "24",
                        height: "24",
                        viewBox: "0 0 24 24",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg"
                    }, [createBaseVNode("path", {
                        d: "M18 6L6 18M6 6L18 18",
                        stroke: "white",
                        "stroke-width": "2",
                        "stroke-linecap": "round",
                        "stroke-linejoin": "round"
                    })], -1)])), o.value ? (openBlock(),
                        createElementBlock("div", _hoisted_1$o, toDisplayString(o.value), 1)) : createCommentVNode("", !0), n.value ? (openBlock(),
                        createElementBlock("div", _hoisted_2$n, toDisplayString(n.value), 1)) : createCommentVNode("", !0), createBaseVNode("div", _hoisted_3$l, [createBaseVNode("div", _hoisted_4$l, [createBaseVNode("div", _hoisted_5$l, [withDirectives(createBaseVNode("input", {
                        type: "text",
                        "onUpdate:modelValue": a[0] || (a[0] = e => i.value = e),
                        class: "wallet-input",
                        placeholder: "TON wallet address",
                        disabled: l.value
                    }, null, 8, _hoisted_6$j), [[vModelText, i.value]])]), createBaseVNode("div", {
                        class: normalizeClass(["button2", {
                            disabled: !d.value || l.value
                        }]),
                        onClick: p
                    }, a[3] || (a[3] = [createBaseVNode("div", {
                        class: "label2"
                    }, "Use a linked wallet", -1)]), 2)]), createBaseVNode("div", _hoisted_7$j, [createBaseVNode("div", _hoisted_8$h, [withDirectives(createBaseVNode("input", {
                        type: "number",
                        "onUpdate:modelValue": a[1] || (a[1] = e => r.value = e),
                        class: "amount-input",
                        placeholder: "Amount (Min: 1 TON)",
                        disabled: l.value
                    }, null, 8, _hoisted_9$g), [[vModelText, r.value]]), createBaseVNode("div", _hoisted_10$f, [createVNode(Coin, {
                        size: "small"
                    })])]), createBaseVNode("div", {
                        class: "button2",
                        onClick: u
                    }, [a[4] || (a[4] = createBaseVNode("div", {
                        class: "label3"
                    }, "Available:", -1)), createBaseVNode("div", _hoisted_11$f, [createBaseVNode("div", _hoisted_12$f, toDisplayString((s = e.availableBalance,
                    "number" != typeof s && (s = Number(s) || 0),
                        s.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " "))), 1), createBaseVNode("div", _hoisted_13$e, [createVNode(Coin, {
                        size: "small"
                    })])])])]), createBaseVNode("div", {
                        class: normalizeClass(["button5", {
                            disabled: !h.value || l.value
                        }]),
                        onClick: m
                    }, [createBaseVNode("div", _hoisted_14$d, [l.value ? (openBlock(),
                        createElementBlock("span", _hoisted_16$a, "Processing...")) : (openBlock(),
                        createElementBlock("span", _hoisted_15$c, "Withdraw"))])], 2)])], 2)])) : createCommentVNode("", !0);
                var s
            }
    }
}
    , ModalWithdrawRef = _export_sfc$1(_sfc_main$p, [["__scopeId", "data-v-8552786f"]])
    , InvitePage_vue_vue_type_style_index_0_scoped_5d8b8948_lang = ""
    , _hoisted_1$n = {
    class: "invite-page"
}
    , _hoisted_2$m = {
    class: "main-top-panel"
}
    , _hoisted_3$k = {
    key: 0,
    class: "loading-state"
}
    , _hoisted_4$k = {
    key: 1,
    class: "error-state"
}
    , _hoisted_5$k = {
    class: "error-message"
}
    , _hoisted_6$i = {
    class: "referral-banner"
}
    , _hoisted_7$i = {
    class: "banner-title"
}
    , _hoisted_8$g = {
    class: "banner-buttons"
}
    , _hoisted_9$f = {
    class: "icon"
}
    , _hoisted_10$e = {
    key: 0,
    class: "copy-icon",
    src: "/images/actions/copy.svg",
    alt: "Copy"
}
    , _hoisted_11$e = {
    key: 1,
    width: "16",
    height: "16",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
}
    , _hoisted_12$e = {
    key: 0,
    class: "copy-success"
}
    , _hoisted_13$d = {
    class: "balance-section"
}
    , _hoisted_14$c = {
    class: "balance-info"
}
    , _hoisted_15$b = {
    class: "balance-display"
}
    , _hoisted_16$9 = {
    class: "balance-amount"
}
    , _hoisted_17$8 = {
    class: "coin-small"
}
    , _hoisted_18$7 = ["disabled"]
    , _hoisted_19$7 = {
    key: 0,
    class: "success-message"
}
    , _hoisted_20$5 = {
    class: "invited-section"
}
    , _hoisted_21$5 = {
    class: "invited-header"
}
    , _hoisted_22$5 = {
    class: "count-badge"
}
    , _hoisted_23$2 = {
    class: "count-text"
}
    , _hoisted_24$1 = {
    key: 0,
    class: "empty-referrals"
}
    , _hoisted_25$1 = {
    key: 1,
    class: "invited-list"
}
    , _hoisted_26$1 = {
    class: "user-row-left"
}
    , _hoisted_27$1 = ["src", "alt"]
    , _hoisted_28$1 = {
    class: "user-details"
}
    , _hoisted_29$1 = {
    class: "user-name"
}
    , _hoisted_30$1 = {
    class: "label-small"
}
    , _hoisted_31$1 = {
    class: "profit-display"
}
    , _hoisted_32$1 = {
    class: "profit-amount"
}
    , _hoisted_33 = {
    class: "coin-small"
}
    , _sfc_main$o = {
    __name: "InvitePage",
    setup(e) {
        const t = inject("userStore")
            , a = ref(null)
            , s = ref([])
            , i = ref(0)
            , r = ref(!0)
            , o = ref(null)
            , n = ref("")
            , l = ref(!1)
            , c = ref("")
            , d = ref(!1)
            , h = computed(( () => "undefined" != typeof window && window.Telegram && window.Telegram.WebApp))
            , p = computed(( () => t.state.user.walletAddress || null))
            , u = computed(( () => {
                    return a.value && a.value.referral_code ? (e = a.value.referral_code) ? `https://t.me/${c.value}/case?startapp=ref_${e}` : "" : "";
                    var e
                }
            ))
            , m = computed(( () => "🎁 Hey! I found this awesome crypto app where we can earn rewards together! 🚀\n\nJoin me and get a special bonus when you sign up! 💰✨\n\n"))
            , f = async () => {
                try {
                    r.value = !0,
                        o.value = null;
                    const e = await axios$1.get("/api/referrals.php", {
                        withCredentials: !0
                    });
                    e.data.success ? (a.value = e.data.referral,
                        s.value = e.data.referred_users || [],
                        i.value = e.data.total_referred || 0,
                    e.data.botUsername && (c.value = e.data.botUsername)) : o.value = e.data.error || "Failed to load referral data"
                } catch (e) {
                    o.value = "An error occurred while loading referral data"
                } finally {
                    r.value = !1
                }
            }
            , v = async () => {
                try {
                    let a = !1;
                    if (h.value && window.Telegram.WebApp.copyTextToClipboard)
                        try {
                            window.Telegram.WebApp.copyTextToClipboard(u.value),
                                a = !0
                        } catch (e) {}
                    if (!a && navigator.clipboard && navigator.clipboard.writeText)
                        try {
                            await navigator.clipboard.writeText(u.value),
                                a = !0
                        } catch (e) {}
                    if (!a)
                        try {
                            const t = document.createElement("textarea");
                            t.value = u.value,
                                t.style.position = "fixed",
                                t.style.left = "-999999px",
                                t.style.top = "-999999px",
                                t.setAttribute("readonly", "readonly"),
                                document.body.appendChild(t),
                                t.focus(),
                                t.select();
                            try {
                                a = document.execCommand("copy")
                            } catch (e) {}
                            document.body.removeChild(t)
                        } catch (t) {}
                    l.value = !0,
                        setTimeout(( () => {
                                l.value = !1
                            }
                        ), 2e3)
                } catch (e) {
                    l.value = !0,
                        setTimeout(( () => {
                                l.value = !1
                            }
                        ), 2e3)
                }
            }
            , g = () => {
                try {
                    if (!u.value)
                        return void alert("Referral link is not available. Please try again.");
                    const t = h.value && window.Telegram.WebApp.platform ? window.Telegram.WebApp.platform : "unknown"
                        , a = (h.value && window.Telegram.WebApp.version && window.Telegram.WebApp.version,
                    "tdesktop" === t || t.includes("desktop"));
                    if (h.value && window.Telegram.WebApp.openTelegramLink)
                        try {
                            const e = `https://t.me/share/url?url=${encodeURIComponent(u.value)}&text=${encodeURIComponent(m.value)}`;
                            return void window.Telegram.WebApp.openTelegramLink(e)
                        } catch (e) {}
                    if (h.value && window.Telegram.WebApp.switchInlineQuery)
                        try {
                            return void window.Telegram.WebApp.switchInlineQuery("", ["users", "groups", "channels"])
                        } catch (e) {}
                    if (a && h.value && window.Telegram.WebApp.openLink)
                        try {
                            const e = `tg://msg_url?url=${encodeURIComponent(u.value)}&text=${encodeURIComponent(m.value)}`;
                            return void window.Telegram.WebApp.openLink(e)
                        } catch (e) {}
                    try {
                        const e = `https://t.me/share/url?url=${encodeURIComponent(u.value)}&text=${encodeURIComponent(m.value)}`;
                        return void (h.value && window.Telegram.WebApp.openLink ? window.Telegram.WebApp.openLink(e) : window.open(e, "_blank"))
                    } catch (e) {}
                    v();
                    const s = document.createElement("div");
                    s.className = "desktop-share-notification",
                        s.innerHTML = '\n      <div class="notification-content">\n        <div class="notification-title">Link copied!</div>\n        <div class="notification-text">Paste the link in Telegram to share with friends</div>\n      </div>\n      <button class="notification-close">&times;</button>\n    ',
                        document.body.appendChild(s);
                    s.querySelector(".notification-close").addEventListener("click", ( () => {
                            document.body.removeChild(s)
                        }
                    )),
                        setTimeout(( () => {
                                document.body.contains(s) && document.body.removeChild(s)
                            }
                        ), 5e3)
                } catch (t) {
                    v(),
                        alert("Link copied to clipboard. You can paste it in Telegram to share with friends.")
                }
            }
            , y = e => ("number" != typeof e && (e = Number(e) || 0),
                e.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " "))
            , _ = () => {
                a.value && a.value.balance > 0 ? d.value = !0 : (o.value = "You don't have any referral balance to withdraw",
                    setTimeout(( () => {
                            o.value = null
                        }
                    ), 3e3))
            }
            , b = () => {
                d.value = !1
            }
            , k = e => {
                e.success && (n.value = `Withdrawal of ${y(e.amount)} TON has been processed!`,
                a.value && (a.value.balance = Math.max(0, a.value.balance - e.amount)),
                    setTimeout(( () => {
                            n.value = ""
                        }
                    ), 5e3),
                    f())
            }
        ;
        return onMounted(( () => {
                f(),
                    h.value
            }
        )),
            (e, t) => {
                var c, h, u, m, w;
                return openBlock(),
                    createElementBlock("div", _hoisted_1$n, [createBaseVNode("div", _hoisted_2$m, [createVNode(UserHeader), r.value ? (openBlock(),
                        createElementBlock("div", _hoisted_3$k, t[0] || (t[0] = [createBaseVNode("div", {
                            class: "loading-spinner"
                        }, null, -1), createBaseVNode("div", {
                            class: "loading-text"
                        }, "Loading referral data...", -1)]))) : o.value ? (openBlock(),
                        createElementBlock("div", _hoisted_4$k, [createBaseVNode("div", _hoisted_5$k, toDisplayString(o.value), 1), createBaseVNode("button", {
                            class: "retry-button",
                            onClick: f
                        }, t[1] || (t[1] = [createBaseVNode("div", {
                            class: "button-label"
                        }, "Try Again", -1)]))])) : (openBlock(),
                        createElementBlock(Fragment, {
                            key: 2
                        }, [createBaseVNode("div", _hoisted_6$i, [t[5] || (t[5] = createBaseVNode("img", {
                            class: "rectangle-bg",
                            src: "/images/effects/rectangle_rotate.png",
                            alt: "Background"
                        }, null, -1)), createBaseVNode("div", _hoisted_7$i, [createTextVNode("Get " + toDisplayString((null == (c = a.value) ? void 0 : c.percent) || 20) + "% of your friends ", 1), t[2] || (t[2] = createBaseVNode("span", null, "deposits", -1))]), createBaseVNode("div", _hoisted_8$g, [createBaseVNode("button", {
                            class: "invite-button",
                            onClick: g
                        }, t[3] || (t[3] = [createBaseVNode("div", {
                            class: "button-label"
                        }, "Invite a friend", -1)])), createBaseVNode("button", {
                            class: "copy-button",
                            onClick: v
                        }, [createBaseVNode("div", _hoisted_9$f, [l.value ? (openBlock(),
                            createElementBlock("svg", _hoisted_11$e, t[4] || (t[4] = [createBaseVNode("path", {
                                d: "M20 6L9 17L4 12",
                                stroke: "white",
                                "stroke-width": "2",
                                "stroke-linecap": "round",
                                "stroke-linejoin": "round"
                            }, null, -1)]))) : (openBlock(),
                            createElementBlock("img", _hoisted_10$e))])])]), l.value ? (openBlock(),
                            createElementBlock("div", _hoisted_12$e, " Link copied to clipboard! ")) : createCommentVNode("", !0)]), createBaseVNode("div", _hoisted_13$d, [createBaseVNode("div", _hoisted_14$c, [t[6] || (t[6] = createBaseVNode("div", {
                            class: "label-small"
                        }, "Referral balance", -1)), createBaseVNode("div", _hoisted_15$b, [createBaseVNode("div", _hoisted_16$9, toDisplayString(y((null == (h = a.value) ? void 0 : h.balance) || 0)), 1), createBaseVNode("div", _hoisted_17$8, [createVNode(Coin, {
                            size: "small"
                        })])])]), createBaseVNode("button", {
                            class: normalizeClass(["withdraw-button", {
                                "withdraw-button-disabled": !(null == (u = a.value) ? void 0 : u.balance)
                            }]),
                            onClick: _,
                            disabled: !(null == (m = a.value) ? void 0 : m.balance)
                        }, t[7] || (t[7] = [createBaseVNode("div", {
                            class: "button-label"
                        }, "Withdraw", -1)]), 10, _hoisted_18$7)]), n.value ? (openBlock(),
                            createElementBlock("div", _hoisted_19$7, toDisplayString(n.value), 1)) : createCommentVNode("", !0), createBaseVNode("div", _hoisted_20$5, [createBaseVNode("div", _hoisted_21$5, [t[8] || (t[8] = createBaseVNode("div", {
                            class: "section-title"
                        }, "Invited", -1)), createBaseVNode("div", _hoisted_22$5, [createBaseVNode("div", _hoisted_23$2, toDisplayString(i.value), 1)])]), t[10] || (t[10] = createBaseVNode("div", {
                            class: "invited-list-header"
                        }, [createBaseVNode("div", {
                            class: "label-small"
                        }, "User"), createBaseVNode("div", {
                            class: "label-small"
                        }, "Profit")], -1)), 0 === s.value.length ? (openBlock(),
                            createElementBlock("div", _hoisted_24$1, t[9] || (t[9] = [createBaseVNode("div", {
                                class: "empty-message"
                            }, "You haven't invited any friends yet", -1)]))) : (openBlock(),
                            createElementBlock("div", _hoisted_25$1, [(openBlock(!0),
                                createElementBlock(Fragment, null, renderList(s.value, (e => (openBlock(),
                                    createElementBlock("div", {
                                        key: e.id,
                                        class: "user-row"
                                    }, [createBaseVNode("div", _hoisted_26$1, [createBaseVNode("img", {
                                        class: "user-avatar",
                                        src: e.photo_url || "/images/effects/profile.svg",
                                        alt: e.first_name
                                    }, null, 8, _hoisted_27$1), createBaseVNode("div", _hoisted_28$1, [createBaseVNode("div", _hoisted_29$1, toDisplayString(e.first_name) + " " + toDisplayString(e.last_name), 1), createBaseVNode("div", _hoisted_30$1, "Opened " + toDisplayString(e.cases_opened || 0) + " cases", 1)])]), createBaseVNode("div", _hoisted_31$1, [createBaseVNode("div", _hoisted_32$1, toDisplayString(y(e.total_profit || 0)), 1), createBaseVNode("div", _hoisted_33, [createVNode(Coin, {
                                        size: "small"
                                    })])])])))), 128))]))])], 64))]), createVNode(ModalWithdrawRef, {
                        "is-open": d.value,
                        "available-balance": (null == (w = a.value) ? void 0 : w.balance) || 0,
                        "user-wallet": p.value,
                        onClose: b,
                        onWithdrawComplete: k
                    }, null, 8, ["is-open", "available-balance", "user-wallet"])])
            }
    }
}
    , InvitePage = _export_sfc$1(_sfc_main$o, [["__scopeId", "data-v-5d8b8948"]])
    , ModalDeposit_vue_vue_type_style_index_0_scoped_b39ea157_lang = ""
    , _hoisted_1$m = {
    class: "modal-header"
}
    , _hoisted_2$l = {
    class: "deposit"
}
    , _hoisted_3$j = {
    key: 0,
    class: "error-message"
}
    , _hoisted_4$j = {
    key: 1,
    class: "transaction-status"
}
    , _hoisted_5$j = {
    class: "promocode-section"
}
    , _hoisted_6$h = {
    class: "promocode-input-container"
}
    , _hoisted_7$h = ["disabled"]
    , _hoisted_8$f = {
    key: 0,
    class: "bonus-badge"
}
    , _hoisted_9$e = {
    key: 1,
    class: "checking-spinner"
}
    , _hoisted_10$d = ["disabled"]
    , _hoisted_11$d = {
    class: "coin"
}
    , _hoisted_12$d = {
    key: 2,
    class: "bonus-display"
}
    , _hoisted_13$c = {
    class: "bonus-content"
}
    , _hoisted_14$b = {
    class: "bonus-amount"
}
    , _hoisted_15$a = {
    class: "bonus-value"
}
    , _hoisted_16$8 = {
    key: 3,
    class: "error-display"
}
    , _hoisted_17$7 = {
    class: "error-content"
}
    , _hoisted_18$6 = {
    class: "error-text"
}
    , _hoisted_19$6 = ["disabled"]
    , _hoisted_20$4 = {
    key: 0,
    class: "button-label"
}
    , _hoisted_21$4 = {
    key: 1,
    class: "button-label"
}
    , _hoisted_22$4 = {
    key: 2,
    class: "button-label"
}
    , _sfc_main$n = {
    __name: "ModalDeposit",
    props: {
        isOpen: {
            type: Boolean,
            default: !1
        },
        currentBalance: {
            type: Number,
            default: 0
        },
        walletAddress: {
            type: String,
            default: null
        },
        paymentMethod: {
            type: String,
            default: "ton",
            validator: e => ["ton", "cryptobot"].includes(e)
        }
    },
    emits: ["close", "deposit", "backToChoosePS"],
    setup(e, {emit: t}) {
        const a = e
            , s = t
            , i = computed(( () => "ton" === a.paymentMethod ? "TON" : "CryptoBot"))
            , r = computed(( () => {
                if (!l.value || !w.value)
                    return 0;
                const e = parseFloat(l.value) || 0
                    , t = e + e * (B.value / 100);
                return Math.round(100 * t) / 100
            }
        ));
        useTonWallet();
        const o = useTonAddress()
            , {tonConnectUI: n} = useTonConnectUI()
            , l = ref("")
            , c = ref(!1)
            , d = ref(!1)
            , h = ref(!1)
            , p = ref(!1)
            , u = ref(null)
            , m = ref("")
            , f = ref("")
            , v = ref("")
            , g = ref(null)
            , y = ref(!1)
            , _ = ref(null)
            , b = ref(!1)
            , k = ref("")
            , w = ref(!1)
            , B = ref(35)
            , C = ref("")
            , x = ref(!1);
        let S = null;
        onMounted(( () => {
                a.walletAddress || o.value;
                ( () => {
                        const e = document.querySelector('meta[name="viewport"]');
                        if (e)
                            e.setAttribute("content", "width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no");
                        else {
                            const e = document.createElement("meta");
                            e.name = "viewport",
                                e.content = "width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no",
                                document.head.appendChild(e)
                        }
                    }
                )(),
                window.visualViewport && (window.visualViewport.addEventListener("resize", $),
                    window.visualViewport.addEventListener("scroll", T));
                const e = () => {
                        "visible" === document.visibilityState && G()
                    }
                    , t = () => {
                        G()
                    }
                ;
                document.addEventListener("visibilitychange", e),
                    window.addEventListener("focus", t),
                    G(),
                    onUnmounted(( () => {
                            document.removeEventListener("visibilitychange", e),
                                window.removeEventListener("focus", t)
                        }
                    ))
            }
        )),
            onUnmounted(( () => {
                    window.visualViewport && (window.visualViewport.removeEventListener("resize", $),
                        window.visualViewport.removeEventListener("scroll", T))
                }
            ));
        const E = e => {
                b.value = !0,
                    e.preventDefault()
            }
            , V = e => {
                b.value && (b.value = !1,
                    e.preventDefault(),
                    O())
            }
            , N = () => {
                y.value = !0
            }
            , P = () => {
                setTimeout(( () => {
                        y.value = !1
                    }
                ), 100)
            }
            , A = () => {
                if (S && clearTimeout(S),
                    C.value = "",
                k.value.length < 3)
                    return w.value = !1,
                        void (x.value = !1);
                x.value = !0,
                    S = setTimeout((async () => {
                            try {
                                const e = await axios$1.post("/api/check_promocode.php", {
                                    promocode: k.value
                                });
                                e.data.success ? (w.value = !0,
                                    B.value = e.data.bonus,
                                    C.value = "") : (w.value = !1,
                                    C.value = "Promocode not found or limit exceeded")
                            } catch (e) {
                                w.value = !1,
                                    C.value = "Error checking promocode"
                            } finally {
                                x.value = !1
                            }
                        }
                    ), 500)
            }
            , $ = () => {
                if (window.visualViewport) {
                    const e = window.visualViewport.height < .8 * window.innerHeight;
                    e !== y.value && (y.value = e)
                }
            }
            , T = () => {
                y.value && window.visualViewport && window.scrollTo(0, 0)
            }
            , M = () => {
                const e = () => Math.floor(65536 * (1 + Math.random())).toString(16).substring(1);
                return `${e()}-${e()}-${e()}-${e()}`
            }
            , D = () => {
                g.value && (clearTimeout(g.value),
                    g.value = null),
                    h.value = !0,
                    p.value = !1,
                    c.value = !1,
                    d.value = !1,
                    setTimeout(( () => {
                            s("close"),
                                L()
                        }
                    ), 150)
            }
            , I = () => {
                p.value || (g.value && (clearTimeout(g.value),
                    g.value = null),
                    h.value = !0,
                    setTimeout(( () => {
                            F(),
                                L(),
                                s("backToChoosePS")
                        }
                    ), 150))
            }
            , F = () => {
                p.value || (h.value = !0,
                    g.value = setTimeout(( () => {
                            s("close"),
                                L()
                        }
                    ), 150))
            }
            , L = () => {
                l.value = "",
                    c.value = !1,
                    d.value = !1,
                    h.value = !1,
                    u.value = null,
                    f.value = "",
                    m.value = "",
                    v.value = "",
                    p.value = !1,
                    b.value = !1,
                g.value && (clearTimeout(g.value),
                    g.value = null)
            }
            , R = () => {
                _.value && _.value.blur(),
                    setTimeout(( () => {
                            O()
                        }
                    ), 200)
            }
            , O = async () => {
                const e = parseFloat(l.value);
                if (!(isNaN(e) || e <= 0 || p.value))
                    if (e < 1)
                        u.value = "Minimum deposit amount: 1 TON";
                    else {
                        _.value && _.value.blur(),
                            u.value = null,
                            p.value = !0,
                            c.value = !0;
                        try {
                            if ("ton" === a.paymentMethod) {
                                const t = a.walletAddress ? a.walletAddress : o.value ? o.value : null;
                                if (!t)
                                    throw new Error("No wallet address available for deposit");
                                await z(e, t)
                            } else
                                "cryptobot" === a.paymentMethod && await j(e)
                        } catch (t) {
                            u.value = t.message || "Transaction error. Please try again.",
                                c.value = !1,
                                p.value = !1
                        }
                    }
            }
            , z = async (e, t) => {
                if (!n)
                    throw p.value = !1,
                        new Error("TON Connect UI is not available");
                try {
                    const l = {
                        amount: e,
                        walletAddress: t,
                        genId: M(),
                        timestamp: Date.now(),
                        status: "pending"
                    };
                    let h;
                    w.value && (l.promocode = k.value),
                        localStorage.setItem("pendingTonTransaction", JSON.stringify(l)),
                        m.value = "Getting transaction payload...";
                    try {
                        const e = await axios$1.post("https://" + window.location.hostname + ":8443/genBocTelegram", {
                            payload: l.genId
                        });
                        if (!e.data || !e.data.payload)
                            throw new Error("Invalid payload response");
                        h = e.data.payload,
                            l.payload = h,
                            localStorage.setItem("pendingTonTransaction", JSON.stringify(l))
                    } catch (a) {
                        throw p.value = !1,
                            localStorage.removeItem("pendingTonTransaction"),
                            new Error("Failed to prepare transaction. Please try again.")
                    }
                    try {
                        m.value = "Registering transaction...";
                        const a = {
                            wallet_address: t,
                            amount: e,
                            gen_id: l.genId,
                            status: "preflight"
                        };
                        w.value && (a.promocode = k.value);
                        const s = await axios$1.post("/api/register_pending_transaction.php", a, {
                            withCredentials: !0
                        });
                        s.data && s.data.success && (l.transactionId = s.data.transaction_id,
                            localStorage.setItem("pendingTonTransaction", JSON.stringify(l)))
                    } catch (a) {}
                    const u = Math.floor(1e9 * e)
                        , f = {
                        validUntil: Math.floor(Date.now() / 1e3) + 300,
                        messages: [{
                            address: "UQDy8VEZi7yDfxvE460U00a8xWC0yHaKMDfXY5Xb7IggxNPF",
                            amount: u.toString(),
                            payload: h
                        }]
                    };
                    let v;
                    m.value = "Waiting for wallet confirmation...",
                        l.status = "sending",
                        l.sendTimestamp = Date.now(),
                        localStorage.setItem("pendingTonTransaction", JSON.stringify(l));
                    try {
                        v = await n.sendTransaction(f)
                    } catch (i) {
                        if (i.message && i.message.includes("[TON_CONNECT_SDK_ERROR]") && i.message.includes("Connect wallet to send a transaction")) {
                            m.value = "Wallet disconnected. Please reconnect...";
                            try {
                                await n.disconnect()
                            } catch (r) {}
                            await new Promise((e => setTimeout(e, 500)));
                            try {
                                return await n.openModal(),
                                    await new Promise(( (e, t) => {
                                            const a = setInterval(( () => {
                                                    n.wallet && (clearInterval(a),
                                                        e())
                                                }
                                            ), 500);
                                            setTimeout(( () => {
                                                    clearInterval(a),
                                                        t(new Error("Connection timeout"))
                                                }
                                            ), 3e4)
                                        }
                                    )),
                                    m.value = "Wallet reconnected. Please try your transaction again.",
                                    localStorage.removeItem("pendingTonTransaction"),
                                    c.value = !1,
                                    void (p.value = !1)
                            } catch (o) {
                                throw new Error("Failed to reconnect wallet. Please try again.")
                            }
                        }
                        throw i
                    }
                    let y = "";
                    v && "object" == typeof v ? y = v.boc ? v.boc : v.data ? v.data : JSON.stringify(v) : "string" == typeof v && (y = v),
                        l.boc = y,
                        l.status = "sent",
                        l.sentTimestamp = Date.now(),
                        localStorage.setItem("pendingTonTransaction", JSON.stringify(l)),
                        m.value = "Transaction sent, registering...";
                    try {
                        const a = {
                            transaction_boc: y,
                            wallet_address: t,
                            amount: e,
                            gen_id: l.genId
                        };
                        w.value && (a.promocode = k.value);
                        const i = await axios$1.post("/api/check_transaction.php", a, {
                            withCredentials: !0
                        });
                        return i.data.success ? (i.data.transaction_id && (l.transactionId = i.data.transaction_id),
                            l.status = "completed",
                            l.completedTimestamp = Date.now(),
                            localStorage.setItem("pendingTonTransaction", JSON.stringify(l)),
                            c.value = !1,
                            d.value = !0,
                            m.value = "Transaction sent! Your balance will be credited automatically once processed.",
                            p.value = !1,
                            g.value = setTimeout(( () => {
                                    s("deposit", 0),
                                        F(),
                                        localStorage.removeItem("pendingTonTransaction")
                                }
                            ), 4e3),
                            !0) : (l.status = "registration_failed",
                            l.error = i.data.message || "Failed to register transaction",
                            localStorage.setItem("pendingTonTransaction", JSON.stringify(l)),
                            c.value = !1,
                            d.value = !0,
                            m.value = "Transaction sent! Your balance will be credited automatically once processed.",
                            p.value = !1,
                            g.value = setTimeout(( () => {
                                    s("deposit", 0),
                                        F()
                                }
                            ), 4e3),
                            !0)
                    } catch (a) {
                        return l.status = "registration_error",
                            l.error = a.message || "Error during transaction registration",
                            localStorage.setItem("pendingTonTransaction", JSON.stringify(l)),
                            c.value = !1,
                            d.value = !0,
                            m.value = "Transaction sent! Your balance will be credited automatically once processed.",
                            p.value = !1,
                            g.value = setTimeout(( () => {
                                    s("deposit", 0),
                                        F()
                                }
                            ), 4e3),
                            !0
                    }
                } catch (a) {
                    try {
                        const e = JSON.parse(localStorage.getItem("pendingTonTransaction"));
                        e && (e.status = "error",
                            e.error = a.message || "Unknown error",
                            e.errorTimestamp = Date.now(),
                            localStorage.setItem("pendingTonTransaction", JSON.stringify(e)))
                    } catch (l) {}
                    throw p.value = !1,
                        new Error(a.message || "Failed to complete TON deposit")
                }
            }
            , G = async () => {
                try {
                    const t = localStorage.getItem("pendingTonTransaction");
                    if (!t)
                        return !1;
                    const a = JSON.parse(t);
                    if ("sent" === a.status && a.boc) {
                        const t = Date.now()
                            , i = 36e5;
                        if (t - a.sentTimestamp > i)
                            return localStorage.removeItem("pendingTonTransaction"),
                                !1;
                        c.value = !0,
                            m.value = "Recovering previous transaction...";
                        try {
                            const e = {
                                transaction_boc: a.boc,
                                wallet_address: a.walletAddress,
                                amount: a.amount,
                                gen_id: a.genId
                            };
                            a.promocode && (e.promocode = a.promocode);
                            const t = await axios$1.post("/api/check_transaction.php", e, {
                                withCredentials: !0
                            });
                            return t.data.success ? (a.status = "completed",
                                a.completedTimestamp = Date.now(),
                                localStorage.setItem("pendingTonTransaction", JSON.stringify(a)),
                                c.value = !1,
                                d.value = !0,
                                m.value = "Previously sent transaction has been registered successfully!",
                                g.value = setTimeout(( () => {
                                        s("deposit", 0),
                                            F(),
                                            localStorage.removeItem("pendingTonTransaction")
                                    }
                                ), 4e3),
                                !0) : (a.status = "recovery_failed",
                                a.recoveryError = t.data.message,
                                localStorage.setItem("pendingTonTransaction", JSON.stringify(a)),
                                !1)
                        } catch (e) {
                            return a.status = "recovery_error",
                                a.recoveryError = e.message,
                                localStorage.setItem("pendingTonTransaction", JSON.stringify(a)),
                                !1
                        }
                    } else if ("pending" === a.status || "sending" === a.status) {
                        const e = Date.now()
                            , t = 6e5;
                        return e - a.timestamp > t && localStorage.removeItem("pendingTonTransaction"),
                            !1
                    }
                    return !1
                } catch (e) {
                    return !1
                }
            }
            , j = async e => {
                if (isNaN(e) || e <= 0)
                    throw new Error("Invalid deposit amount");
                m.value = "Preparing CryptoBot payment...";
                try {
                    const t = `/api/create_pay_cryptobot.php?amount=${e}${w.value ? `&promocode=${encodeURIComponent(k.value)}` : ""}`
                        , a = await axios$1.get(t);
                    if (a.data.status) {
                        p.value = !1,
                            c.value = !1,
                            d.value = !0,
                            m.value = "Payment link generated. Opening CryptoBot...";
                        const e = /iPad|iPhone|iPod/.test(navigator.userAgent) || "MacIntel" === navigator.platform && navigator.maxTouchPoints > 1
                            , t = a.data.url;
                        if (g.value = setTimeout(( () => {
                                s("deposit", 0),
                                    F()
                            }
                        ), 4e3),
                            e)
                            window.location.href = t;
                        else {
                            const e = window.open(t, "_blank");
                            e && !e.closed && void 0 !== e.closed || (window.location.href = t)
                        }
                        return !0
                    }
                    throw new Error(a.data.error || "Failed to create CryptoBot payment")
                } catch (t) {
                    throw t
                }
            }
        ;
        return watch(( () => l.value), (e => {
                "string" == typeof e && (l.value = (e => {
                        if (!e)
                            return "";
                        const t = (e = e.toString().replace(/[^\d.]/g, "")).split(".");
                        return t.length > 2 && (e = `${t[0]}.${t.slice(1).join("")}`),
                        t.length > 1 && t[1].length > 4 && (e = `${t[0]}.${t[1].substring(0, 4)}`),
                            e
                    }
                )(e))
            }
        )),
            (t, a) => e.isOpen ? (openBlock(),
                createElementBlock("div", {
                    key: 0,
                    class: "modal-overlay",
                    onClick: withModifiers(F, ["self"])
                }, [createBaseVNode("div", {
                    class: normalizeClass(["modal", {
                        closing: h.value,
                        "keyboard-active": y.value
                    }])
                }, [createBaseVNode("div", _hoisted_1$m, [createBaseVNode("div", {
                    class: "back-button",
                    onClick: I
                }, a[2] || (a[2] = [createBaseVNode("svg", {
                    class: "arrow-arrow-left-lg",
                    width: "20",
                    height: "20",
                    viewBox: "0 0 20 20",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, [createBaseVNode("path", {
                    d: "M15.8334 10H4.16675M4.16675 10L10.0001 4.16667M4.16675 10L10.0001 15.8333",
                    stroke: "white",
                    "stroke-width": "1.5",
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round"
                })], -1)])), createBaseVNode("div", _hoisted_2$l, toDisplayString(i.value) + " Deposit", 1), a[4] || (a[4] = createBaseVNode("div", {
                    class: "enter-the-amount-you-want-to-deposit"
                }, " Enter the amount to deposit ", -1)), createBaseVNode("div", {
                    class: "icon",
                    onClick: D
                }, a[3] || (a[3] = [createBaseVNode("svg", {
                    class: "close",
                    width: "24",
                    height: "24",
                    viewBox: "0 0 24 24",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, [createBaseVNode("path", {
                    d: "M18 6L6 18M6 6L18 18",
                    stroke: "white",
                    "stroke-width": "2",
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round"
                })], -1)]))]), u.value ? (openBlock(),
                    createElementBlock("div", _hoisted_3$j, toDisplayString(u.value), 1)) : createCommentVNode("", !0), m.value ? (openBlock(),
                    createElementBlock("div", _hoisted_4$j, toDisplayString(m.value), 1)) : createCommentVNode("", !0), createBaseVNode("div", _hoisted_5$j, [a[6] || (a[6] = createStaticVNode('<div class="promocode-card" data-v-b39ea157><img class="promocode-image" src="/images/effects/discount_promo-min.png" alt="Promocode" data-v-b39ea157><div class="promocode-title" data-v-b39ea157>Get a bonus on your deposit</div><div class="promocode-subtitle" data-v-b39ea157> Look for promo codes in <span class="text-semibold" data-v-b39ea157>@gifter</span><br data-v-b39ea157>or in the channels of our partners. </div><svg class="promocode-dots" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 337 3" fill="none" data-v-b39ea157><path d="M0 1.5H337" stroke="white" stroke-width="2" stroke-dasharray="8 4" opacity="0.5" data-v-b39ea157></path></svg></div>', 1)), createBaseVNode("div", _hoisted_6$h, [createBaseVNode("div", {
                    class: normalizeClass(["promocode-input-wrapper", {
                        "has-bonus": w.value,
                        "has-error": C.value
                    }])
                }, [withDirectives(createBaseVNode("input", {
                    "onUpdate:modelValue": a[0] || (a[0] = e => k.value = e),
                    onInput: A,
                    type: "text",
                    placeholder: "Promocode",
                    class: normalizeClass(["promocode-input", {
                        "has-value": w.value
                    }]),
                    disabled: c.value || d.value
                }, null, 42, _hoisted_7$h), [[vModelText, k.value]]), w.value ? (openBlock(),
                    createElementBlock("div", _hoisted_8$f, "+" + toDisplayString(B.value) + "%", 1)) : createCommentVNode("", !0), x.value ? (openBlock(),
                    createElementBlock("div", _hoisted_9$e, a[5] || (a[5] = [createBaseVNode("svg", {
                        width: "16",
                        height: "16",
                        viewBox: "0 0 16 16",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg"
                    }, [createBaseVNode("circle", {
                        cx: "8",
                        cy: "8",
                        r: "7",
                        stroke: "white",
                        "stroke-opacity": "0.3",
                        "stroke-width": "2"
                    }), createBaseVNode("path", {
                        d: "M8 1C11.866 1 15 4.13401 15 8",
                        stroke: "white",
                        "stroke-width": "2",
                        "stroke-linecap": "round"
                    })], -1)]))) : createCommentVNode("", !0)], 2)])]), createBaseVNode("div", {
                    class: normalizeClass(["input-group", {
                        disabled: c.value || d.value
                    }])
                }, [withDirectives(createBaseVNode("input", {
                    type: "number",
                    inputmode: "decimal",
                    "onUpdate:modelValue": a[1] || (a[1] = e => l.value = e),
                    class: "amount-input",
                    placeholder: "Enter amount",
                    onFocus: N,
                    onBlur: P,
                    onKeyup: withKeys(R, ["enter"]),
                    disabled: c.value || d.value,
                    ref_key: "amountInput",
                    ref: _
                }, null, 40, _hoisted_10$d), [[vModelText, l.value]]), createBaseVNode("div", _hoisted_11$d, [createVNode(Coin, {
                    size: "small"
                })])], 2), w.value && l.value ? (openBlock(),
                    createElementBlock("div", _hoisted_12$d, [createBaseVNode("div", _hoisted_13$c, [a[8] || (a[8] = createBaseVNode("div", {
                        class: "bonus-label"
                    }, "To receive:", -1)), createBaseVNode("div", _hoisted_14$b, [createBaseVNode("div", _hoisted_15$a, toDisplayString(r.value.toFixed(2)), 1), a[7] || (a[7] = createBaseVNode("div", {
                        class: "coin-icon"
                    }, [createBaseVNode("img", {
                        src: "/images/effects/minimal_ton_logo.svg",
                        alt: "TON"
                    })], -1))])])])) : createCommentVNode("", !0), C.value && k.value.length >= 3 ? (openBlock(),
                    createElementBlock("div", _hoisted_16$8, [createBaseVNode("div", _hoisted_17$7, [a[9] || (a[9] = createBaseVNode("svg", {
                        width: "16",
                        height: "16",
                        viewBox: "0 0 16 16",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg"
                    }, [createBaseVNode("circle", {
                        cx: "8",
                        cy: "8",
                        r: "7",
                        stroke: "#FF4444",
                        "stroke-width": "1.5"
                    }), createBaseVNode("path", {
                        d: "M8 5V9",
                        stroke: "#FF4444",
                        "stroke-width": "1.5",
                        "stroke-linecap": "round"
                    }), createBaseVNode("circle", {
                        cx: "8",
                        cy: "11.5",
                        r: "0.5",
                        fill: "#FF4444"
                    })], -1)), createBaseVNode("div", _hoisted_18$6, toDisplayString(C.value), 1)])])) : createCommentVNode("", !0), createBaseVNode("button", {
                    class: normalizeClass(["deposit-button", {
                        confirming: c.value,
                        success: d.value,
                        disabled: !l.value || isNaN(parseFloat(l.value)) || parseFloat(l.value) <= 0 || p.value
                    }]),
                    onClick: O,
                    onTouchstart: E,
                    onTouchend: V,
                    disabled: !l.value || isNaN(parseFloat(l.value)) || parseFloat(l.value) <= 0 || p.value
                }, [c.value || d.value ? c.value ? (openBlock(),
                    createElementBlock("div", _hoisted_21$4, "Processing...")) : (openBlock(),
                    createElementBlock("div", _hoisted_22$4, "Success!")) : (openBlock(),
                    createElementBlock("div", _hoisted_20$4, " Deposit "))], 42, _hoisted_19$6)], 2)])) : createCommentVNode("", !0)
    }
}
    , ModalDeposit = _export_sfc$1(_sfc_main$n, [["__scopeId", "data-v-b39ea157"]])
    , ModalDepositsGifts_vue_vue_type_style_index_0_scoped_2f900ba8_lang = ""
    , _hoisted_1$l = {
    class: "frame-2087328435"
}
    , _hoisted_2$k = ["src", "alt"]
    , _hoisted_3$i = {
    class: "hint"
}
    , _hoisted_4$i = {
    class: "coin"
}
    , _hoisted_5$i = {
    class: "title"
}
    , _sfc_main$m = {
    __name: "ModalDepositsGifts",
    props: {
        isOpen: {
            type: Boolean,
            default: !1
        }
    },
    emits: ["close", "backToChoosePS", "giftsLoadStatus"],
    setup(e, {emit: t}) {
        const a = e
            , s = t
            , i = ref([])
            , r = ref(!1)
            , o = ref(!1)
            , n = ref(null)
            , l = async () => {
                o.value = !0,
                    n.value = null;
                try {
                    const e = await axios$1.get("/api/gifts_prices.php");
                    i.value = e.data;
                    const t = Array.isArray(i.value) && i.value.length > 0;
                    s("giftsLoadStatus", t)
                } catch (e) {
                    n.value = "Failed to load gifts data",
                        s("giftsLoadStatus", !1)
                } finally {
                    o.value = !1
                }
            }
            , c = () => {
                r.value = !0,
                    setTimeout(( () => {
                            s("close"),
                                r.value = !1
                        }
                    ), 150)
            }
            , d = () => {
                r.value = !0,
                    setTimeout(( () => {
                            c(),
                                s("backToChoosePS")
                        }
                    ), 150)
            }
            , h = () => {
                window.open("https://t.me/weeaave", "_blank"),
                    c()
            }
        ;
        return onMounted(( () => {
                l()
            }
        )),
            watch(( () => a.isOpen), (e => {
                    e && 0 === i.value.length && l()
                }
            )),
            (t, a) => e.isOpen ? (openBlock(),
                createElementBlock("div", {
                    key: 0,
                    class: "modal-overlay",
                    onClick: withModifiers(c, ["self"])
                }, [createBaseVNode("div", {
                    class: normalizeClass(["modal", {
                        closing: r.value
                    }])
                }, [a[4] || (a[4] = createBaseVNode("div", {
                    class: "frame-2087328894"
                }, [createBaseVNode("div", {
                    class: "deposit-with-gifts"
                }, "Deposit with gifts")], -1)), createBaseVNode("div", {
                    class: "frame-2087328886",
                    onClick: d
                }, a[0] || (a[0] = [createBaseVNode("svg", {
                    class: "arrow-arrow-left-lg",
                    width: "20",
                    height: "20",
                    viewBox: "0 0 20 20",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, [createBaseVNode("path", {
                    d: "M15.8334 10H4.16675M4.16675 10L10.0001 4.16667M4.16675 10L10.0001 15.8333",
                    stroke: "white",
                    "stroke-width": "1.5",
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round"
                })], -1)])), a[5] || (a[5] = createBaseVNode("div", {
                    class: "send-a-gift-to-our-bot-and-we-will-credit-money-to-your-balance"
                }, " Send a gift to our bot and we will credit money to your balance ", -1)), createBaseVNode("div", {
                    class: "button",
                    onClick: h
                }, a[1] || (a[1] = [createBaseVNode("div", {
                    class: "label"
                }, "Open dialog with bot", -1)])), a[6] || (a[6] = createBaseVNode("div", {
                    class: "gift-prices"
                }, "Gift prices", -1)), createBaseVNode("div", _hoisted_1$l, [(openBlock(!0),
                    createElementBlock(Fragment, null, renderList(i.value, ( (e, t) => (openBlock(),
                        createElementBlock("div", {
                            key: t,
                            class: "deposit"
                        }, [createBaseVNode("img", {
                            class: "ezgif-8597-d-9-f-70-a-1286-1",
                            src: e.img,
                            alt: e.name
                        }, null, 8, _hoisted_2$k), createBaseVNode("div", _hoisted_3$i, [createBaseVNode("div", _hoisted_4$i, [createVNode(Coin, {
                            size: "small"
                        })]), createBaseVNode("div", _hoisted_5$i, toDisplayString(e.price), 1)])])))), 128)), a[2] || (a[2] = createBaseVNode("div", {
                    class: "rectangle-161123953"
                }, null, -1))]), createBaseVNode("div", {
                    class: "icon",
                    onClick: c
                }, a[3] || (a[3] = [createBaseVNode("svg", {
                    class: "close",
                    width: "24",
                    height: "24",
                    viewBox: "0 0 24 24",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, [createBaseVNode("path", {
                    d: "M18 6L6 18M6 6L18 18",
                    stroke: "white",
                    "stroke-width": "2",
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round"
                })], -1)]))], 2)])) : createCommentVNode("", !0)
    }
}
    , ModalDepositsGifts = _export_sfc$1(_sfc_main$m, [["__scopeId", "data-v-2f900ba8"]])
    , ModalDepositStars_vue_vue_type_style_index_0_scoped_68108772_lang = ""
    , _hoisted_1$k = {
    class: "stars-options"
}
    , _hoisted_2$j = ["onClick"]
    , _hoisted_3$h = {
    class: "star-amount"
}
    , _hoisted_4$h = {
    class: "coin-amount"
}
    , _hoisted_5$h = {
    class: "label"
}
    , _hoisted_6$g = {
    class: "alternative-info"
}
    , _hoisted_7$g = ["href"]
    , _hoisted_8$e = {
    class: "exchange-info"
}
    , _sfc_main$l = {
    __name: "ModalDepositStars",
    props: {
        isOpen: {
            type: Boolean,
            default: !1
        }
    },
    emits: ["close", "backToChoosePS"],
    setup(e, {emit: t}) {
        const a = t
            , s = ref(!1)
            , i = ref(null)
            , r = ref(2)
            , o = ref([{
                stars: 50,
                coins: 100
            }, {
                stars: 100,
                coins: 200
            }, {
                stars: 250,
                coins: 500
            }, {
                stars: 500,
                coins: 1e3
            }, {
                stars: 1e3,
                coins: 2e3
            }, {
                stars: 2500,
                coins: 5e3
            }])
            , n = computed(( () => i.value ? `https://t.me/opencasesbots?start=stars_${i.value}` : "#"))
            , l = () => {
                s.value = !0,
                    setTimeout(( () => {
                            a("close"),
                                s.value = !1,
                                i.value = null
                        }
                    ), 150)
            }
            , c = () => {
                s.value = !0,
                    setTimeout(( () => {
                            l(),
                                a("backToChoosePS")
                        }
                    ), 150)
            }
            , d = async () => {
                var e, t;
                if (i.value)
                    if (window.Telegram && window.Telegram.WebApp) {
                        const a = window.Telegram.WebApp
                            , s = o.value.find((e => e.stars === i.value));
                        if (a.sendData) {
                            const i = {
                                action: "create_stars_invoice",
                                stars: s.stars,
                                coins: s.coins,
                                user_id: null == (t = null == (e = a.initDataUnsafe) ? void 0 : e.user) ? void 0 : t.id
                            };
                            a.sendData(JSON.stringify(i)),
                                setTimeout(( () => {
                                        a.close()
                                    }
                                ), 500)
                        } else if (a.openTelegramLink) {
                            const e = `https://t.me/opencasesbots?start=stars_${s.stars}_${s.coins}`;
                            a.openTelegramLink(e)
                        } else if (a.openLink) {
                            const e = `https://t.me/opencasesbots?start=stars_${s.stars}_${s.coins}`;
                            a.openLink(e)
                        } else
                            window.open(n.value, "_blank")
                    } else
                        alert("This feature is only available in Telegram")
            }
        ;
        return onMounted(( () => {
                window.Telegram && window.Telegram.WebApp && (window.Telegram.WebApp.ready(),
                    window.Telegram.WebApp.expand())
            }
        )),
            (t, a) => e.isOpen ? (openBlock(),
                createElementBlock("div", {
                    key: 0,
                    class: "modal-overlay",
                    onClick: withModifiers(l, ["self"])
                }, [createBaseVNode("div", {
                    class: normalizeClass(["modal", {
                        closing: s.value
                    }])
                }, [a[5] || (a[5] = createBaseVNode("div", {
                    class: "frame-2087328894"
                }, [createBaseVNode("div", {
                    class: "deposit-with-stars"
                }, "Deposit with Stars")], -1)), createBaseVNode("div", {
                    class: "frame-2087328886",
                    onClick: c
                }, a[0] || (a[0] = [createBaseVNode("svg", {
                    class: "arrow-arrow-left-lg",
                    width: "20",
                    height: "20",
                    viewBox: "0 0 20 20",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, [createBaseVNode("path", {
                    d: "M15.8334 10H4.16675M4.16675 10L10.0001 4.16667M4.16675 10L10.0001 15.8333",
                    stroke: "white",
                    "stroke-width": "1.5",
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round"
                })], -1)])), createBaseVNode("div", {
                    class: "icon",
                    onClick: l
                }, a[1] || (a[1] = [createBaseVNode("svg", {
                    class: "close",
                    width: "24",
                    height: "24",
                    viewBox: "0 0 24 24",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, [createBaseVNode("path", {
                    d: "M18 6L6 18M6 6L18 18",
                    stroke: "white",
                    "stroke-width": "2",
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round"
                })], -1)])), a[6] || (a[6] = createBaseVNode("div", {
                    class: "deposit-description"
                }, " Choose amount of stars to deposit ", -1)), createBaseVNode("div", _hoisted_1$k, [(openBlock(!0),
                    createElementBlock(Fragment, null, renderList(o.value, (e => (openBlock(),
                        createElementBlock("div", {
                            key: e.stars,
                            class: normalizeClass(["star-option", {
                                selected: i.value === e.stars
                            }]),
                            onClick: t => {
                                return a = e.stars,
                                    void (i.value = a);
                                var a
                            }
                        }, [createBaseVNode("div", _hoisted_3$h, [a[2] || (a[2] = createBaseVNode("svg", {
                            class: "star-icon",
                            width: "20",
                            height: "20",
                            viewBox: "0 0 20 20",
                            fill: "none",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, [createBaseVNode("path", {
                            d: "M10 1L12.63 7.59L20 8.49L15 13.37L16.18 20.71L10 17.27L3.82 20.71L5 13.37L0 8.49L7.37 7.59L10 1Z",
                            fill: "#FFD700"
                        })], -1)), createTextVNode(" " + toDisplayString(e.stars), 1)]), createBaseVNode("div", _hoisted_4$h, [a[3] || (a[3] = createBaseVNode("div", {
                            class: "coin-wrapper"
                        }, [createBaseVNode("img", {
                            src: "/images/coin.svg",
                            alt: "coin",
                            class: "coin-icon"
                        })], -1)), createTextVNode(" " + toDisplayString(e.coins), 1)])], 10, _hoisted_2$j)))), 128))]), createBaseVNode("div", {
                    class: normalizeClass(["button", {
                        disabled: !i.value
                    }]),
                    onClick: d
                }, [createBaseVNode("div", _hoisted_5$h, "Pay " + toDisplayString(i.value) + " Stars", 1)], 2), createBaseVNode("div", _hoisted_6$g, [a[4] || (a[4] = createBaseVNode("p", null, "If the button doesn't work, you can also:", -1)), createBaseVNode("a", {
                    href: n.value,
                    target: "_blank",
                    class: "bot-link",
                    onClick: l
                }, " Open payment in Telegram ", 8, _hoisted_7$g)]), createBaseVNode("div", _hoisted_8$e, " 1 Star = " + toDisplayString(r.value) + " coins ", 1)], 2)])) : createCommentVNode("", !0)
    }
}
    , ModalDepositStars = _export_sfc$1(_sfc_main$l, [["__scopeId", "data-v-68108772"]])
    , ModalChoosePS_vue_vue_type_style_index_0_scoped_aff4e3da_lang = ""
    , _hoisted_1$j = {
    class: "frame-2087328884"
}
    , _sfc_main$k = {
    __name: "ModalChoosePS",
    props: {
        isOpen: {
            type: Boolean,
            default: !1
        },
        currentBalance: {
            type: Number,
            default: 0
        },
        walletAddress: {
            type: String,
            default: null
        }
    },
    emits: ["close", "deposit", "open"],
    setup(e, {emit: t}) {
        const a = t
            , s = ref(!1)
            , i = ref(!1)
            , r = ref(!1)
            , o = ref(!1)
            , n = ref(!1)
            , l = ref(!0)
            , c = () => {
                s.value = !0,
                    setTimeout(( () => {
                            a("close"),
                                s.value = !1
                        }
                    ), 150)
            }
            , d = () => {
                i.value = !0,
                    c()
            }
            , h = () => {
                i.value = !1
            }
            , p = () => {
                r.value = !0,
                    c()
            }
            , u = () => {
                r.value = !1
            }
            , m = () => {
                o.value = !0,
                    c()
            }
            , f = () => {
                o.value = !1
            }
            , v = () => {
                n.value = !1
            }
            , g = () => {
                i.value = !1,
                    r.value = !1,
                    o.value = !1,
                    n.value = !1,
                    a("close"),
                    setTimeout(( () => {
                            a("open")
                        }
                    ), 50)
            }
            , y = e => {
                a("deposit", e)
            }
            , _ = e => {
                l.value = e
            }
        ;
        return (t, a) => (openBlock(),
            createElementBlock(Fragment, null, [e.isOpen ? (openBlock(),
                createElementBlock("div", {
                    key: 0,
                    class: "modal-overlay",
                    onClick: withModifiers(c, ["self"])
                }, [createBaseVNode("div", {
                    class: normalizeClass(["modal", {
                        closing: s.value
                    }])
                }, [a[5] || (a[5] = createBaseVNode("div", {
                    class: "frame-2087328889"
                }, [createBaseVNode("div", {
                    class: "deposit"
                }, "Deposit"), createBaseVNode("div", {
                    class: "select-the-method-of-deposit"
                }, "Select the method of deposit")], -1)), createBaseVNode("div", {
                    class: "icon",
                    onClick: c
                }, a[0] || (a[0] = [createBaseVNode("svg", {
                    class: "close",
                    width: "24",
                    height: "24",
                    viewBox: "0 0 24 24",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, [createBaseVNode("path", {
                    d: "M18 6L6 18M6 6L18 18",
                    stroke: "white",
                    "stroke-width": "2",
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round"
                })], -1)])), createBaseVNode("div", _hoisted_1$j, [createBaseVNode("div", {
                    class: "button",
                    onClick: d
                }, a[1] || (a[1] = [createBaseVNode("div", {
                    class: "rectangle-161123957"
                }, null, -1), createBaseVNode("div", {
                    class: "frame-2087328953"
                }, [createBaseVNode("img", {
                    class: "frame-2087328956",
                    src: "/images/effects/dep_ton2.svg",
                    alt: "TON"
                }), createBaseVNode("div", {
                    class: "label"
                }, "Ton")], -1)])), createBaseVNode("div", {
                    class: "button",
                    onClick: p
                }, a[2] || (a[2] = [createBaseVNode("div", {
                    class: "rectangle-1611239572"
                }, null, -1), createBaseVNode("div", {
                    class: "frame-20873289532"
                }, [createBaseVNode("img", {
                    class: "frame-2087328954",
                    src: "/images/effects/dep_crypotbot_2-min.png",
                    alt: "CryptoBot"
                }), createBaseVNode("div", {
                    class: "label"
                }, "CryptoBot")], -1)])), l.value ? (openBlock(),
                    createElementBlock("div", {
                        key: 0,
                        class: "button",
                        onClick: m
                    }, a[3] || (a[3] = [createBaseVNode("div", {
                        class: "rectangle-1611239573"
                    }, null, -1), createBaseVNode("div", {
                        class: "frame-20873289533"
                    }, [createBaseVNode("img", {
                        class: "frame-2087328955",
                        src: "/images/effects/dep_gifts_2.svg",
                        alt: "Gifts"
                    }), createBaseVNode("div", {
                        class: "label"
                    }, "Gifts")], -1)]))) : createCommentVNode("", !0), createCommentVNode("", !0)])], 2)])) : createCommentVNode("", !0), createVNode(ModalDeposit, {
                isOpen: i.value,
                paymentMethod: "ton",
                onClose: h,
                onDeposit: y,
                onBackToChoosePS: g,
                currentBalance: e.currentBalance,
                walletAddress: e.walletAddress
            }, null, 8, ["isOpen", "currentBalance", "walletAddress"]), createVNode(ModalDeposit, {
                isOpen: r.value,
                paymentMethod: "cryptobot",
                onClose: u,
                onDeposit: y,
                onBackToChoosePS: g,
                currentBalance: e.currentBalance,
                walletAddress: e.walletAddress
            }, null, 8, ["isOpen", "currentBalance", "walletAddress"]), createVNode(ModalDepositsGifts, {
                isOpen: o.value,
                onClose: f,
                onBackToChoosePS: g,
                onGiftsLoadStatus: _
            }, null, 8, ["isOpen"]), createVNode(ModalDepositStars, {
                isOpen: n.value,
                onClose: v,
                onBackToChoosePS: g
            }, null, 8, ["isOpen"])], 64))
    }
}
    , ModalChoosePS = _export_sfc$1(_sfc_main$k, [["__scopeId", "data-v-aff4e3da"]])
    , ModalSettings_vue_vue_type_style_index_0_scoped_1ecdaa33_lang = ""
    , _hoisted_2$i = {
    class: "label"
}
    , _sfc_main$j = {
    __name: "ModalSettings",
    props: {
        isOpen: {
            type: Boolean,
            default: !1
        }
    },
    emits: ["close"],
    setup(e, {emit: t}) {
        const a = t
            , s = ref(!1);
        ref("en");
        const i = ref(!1);
        onMounted(( () => {
                const e = localStorage.getItem("demoopening");
                i.value = "true" === e
            }
        ));
        const r = () => {
                s.value = !0,
                    setTimeout(( () => {
                            a("close"),
                                s.value = !1
                        }
                    ), 150)
            }
            , o = () => {
                i.value = !i.value,
                    localStorage.setItem("demoopening", i.value.toString())
            }
        ;
        return (t, a) => e.isOpen ? (openBlock(),
            createElementBlock("div", {
                key: 0,
                class: "modal-overlay",
                onClick: withModifiers(r, ["self"])
            }, [createBaseVNode("div", {
                class: normalizeClass(["modal", {
                    closing: s.value
                }])
            }, [a[5] || (a[5] = createBaseVNode("div", {
                class: "frame-2087328889"
            }, [createBaseVNode("div", {
                class: "settings"
            }, "Settings")], -1)), createBaseVNode("div", {
                class: "icon",
                onClick: r
            }, a[2] || (a[2] = [createBaseVNode("svg", {
                class: "close",
                width: "24",
                height: "24",
                viewBox: "0 0 24 24",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
            }, [createBaseVNode("path", {
                d: "M18 6L6 18M6 6L18 18",
                stroke: "white",
                "stroke-width": "2",
                "stroke-linecap": "round",
                "stroke-linejoin": "round"
            })], -1)])), createCommentVNode("", !0), a[6] || (a[6] = createStaticVNode('<div class="demo-mode-section" data-v-1ecdaa33><div class="demo-mode-title" data-v-1ecdaa33>Demo Mode</div><div class="demo-mode-description" data-v-1ecdaa33><div class="demo-mode-warning" data-v-1ecdaa33><span class="demo-mode-description-span" data-v-1ecdaa33><svg width="16" height="16" viewBox="0 0 0.72 0.72" fill="none" xmlns="http://www.w3.org/2000/svg" data-v-1ecdaa33><path d="M.037.217a.18.18 0 0 1 .18-.18h.285a.18.18 0 0 1 .18.18v.285a.18.18 0 0 1-.18.18H.217a.18.18 0 0 1-.18-.18z" fill="#ffa500" data-v-1ecdaa33></path><path fill-rule="evenodd" clip-rule="evenodd" d="M.36.158A.02.02 0 0 1 .382.18v.27a.022.022 0 0 1-.045 0V.18A.02.02 0 0 1 .359.158M.33.54A.03.03 0 0 1 .36.51a.03.03 0 1 1 0 .06.03.03 0 0 1-.03-.03" fill="#000" data-v-1ecdaa33></path></svg> Important! </span></div><div class="demo-mode-text" data-v-1ecdaa33><span class="demo-mode-description-span2" data-v-1ecdaa33> When you enable <b data-v-1ecdaa33>Demo mode</b>, you will not receive <b data-v-1ecdaa33>prizes</b> in your inventory and <b data-v-1ecdaa33>balance</b> will not be added when selling items. </span></div><div class="demo-mode-info" data-v-1ecdaa33><span class="demo-mode-description-span2" data-v-1ecdaa33> You can <b data-v-1ecdaa33>enable</b> or <b data-v-1ecdaa33>disable</b> Demo Mode at any time by clicking the <b data-v-1ecdaa33>button</b> below. </span></div></div></div>', 1)), createBaseVNode("div", {
                class: normalizeClass(["button", {
                    deactivate: i.value
                }]),
                onClick: o
            }, [createBaseVNode("div", _hoisted_2$i, toDisplayString(i.value ? "Deactivate demo-mode" : "Activate demo-mode"), 1)], 2)], 2)])) : createCommentVNode("", !0)
    }
}
    , ModalSettings = _export_sfc$1(_sfc_main$j, [["__scopeId", "data-v-1ecdaa33"]])
    , ModalDropAction_vue_vue_type_style_index_0_scoped_0cbb215d_lang = ""
    , _hoisted_1$i = {
    class: "modal"
}
    , _hoisted_2$h = {
    key: 0,
    class: "coin-animation-container"
}
    , _hoisted_3$g = ["src", "alt"]
    , _hoisted_4$g = {
    class: "item-info"
}
    , _hoisted_5$g = {
    class: "item-name"
}
    , _hoisted_6$f = {
    class: "item-description"
}
    , _hoisted_7$f = {
    class: "action-buttons"
}
    , _hoisted_8$d = ["disabled"]
    , _hoisted_9$d = {
    class: "price-value"
}
    , _hoisted_10$c = {
    class: "coin-small"
}
    , _hoisted_11$c = ["disabled"]
    , _hoisted_12$c = ["disabled"]
    , _sfc_main$i = {
    __name: "ModalDropAction",
    props: {
        isOpen: {
            type: Boolean,
            default: !1
        },
        item: {
            type: Object,
            default: () => ({
                id: 1,
                name: "Name Gift",
                image: "helm4x.png",
                price: 100,
                description: "Maecenas dignissim justo eget nulla rutrum molestie. Maecenas lobortis sem dui, vel rutrum risus tincidunt ullamcorper. Proin eu enim metus."
            })
        }
    },
    emits: ["close", "sell", "get", "upgrade"],
    setup(e, {emit: t}) {
        const a = useRouter()
            , s = e
            , i = t
            , r = ref(!1)
            , o = ref([])
            , n = () => {
                i("close")
            }
            , l = () => {
                r.value = !0,
                    o.value = (e => {
                            const t = [];
                            for (let a = 0; a < e; a++)
                                t.push({
                                    id: a,
                                    left: 80 * Math.random() + 10,
                                    delay: .2 * Math.random(),
                                    size: 10 * Math.random() + 20,
                                    rotation: 360 * Math.random()
                                });
                            return t
                        }
                    )(Math.min(10, s.item.price / 10)),
                    setTimeout(( () => {
                            i("sell", {
                                ...s.item,
                                isSellingAnimation: !0
                            }),
                                setTimeout(( () => {
                                        r.value = !1,
                                            o.value = []
                                    }
                                ), 300)
                        }
                    ), 600)
            }
            , c = () => {
                i("get", s.item)
            }
            , d = () => {
                a.push("/upgrade")
            }
        ;
        return (t, a) => (openBlock(),
            createBlock(Transition, {
                name: "modal-fade"
            }, {
                default: withCtx(( () => [e.isOpen ? (openBlock(),
                    createElementBlock("div", {
                        key: 0,
                        class: "modal-overlay",
                        onClick: withModifiers(n, ["self"])
                    }, [createBaseVNode("div", _hoisted_1$i, [a[4] || (a[4] = createBaseVNode("img", {
                        class: "rectangle",
                        src: "/images/effects/rectangle_modal.png",
                        alt: "Background"
                    }, null, -1)), r.value ? (openBlock(),
                        createElementBlock("div", _hoisted_2$h, [(openBlock(!0),
                            createElementBlock(Fragment, null, renderList(o.value, (e => (openBlock(),
                                createElementBlock("div", {
                                    key: e.id,
                                    class: "animated-coin",
                                    style: normalizeStyle({
                                        left: `${e.left}%`,
                                        width: `${e.size}px`,
                                        height: `${e.size}px`,
                                        animationDelay: `${e.delay}s`,
                                        transform: `rotate(${e.rotation}deg)`
                                    })
                                }, [createVNode(Coin, {
                                    size: "small"
                                })], 4)))), 128))])) : createCommentVNode("", !0), createBaseVNode("button", {
                        class: "close-button",
                        onClick: n
                    }, a[0] || (a[0] = [createBaseVNode("svg", {
                        width: "24",
                        height: "24",
                        viewBox: "0 0 24 24",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg"
                    }, [createBaseVNode("path", {
                        d: "M18 6L6 18M6 6L18 18",
                        stroke: "white",
                        "stroke-width": "2",
                        "stroke-linecap": "round",
                        "stroke-linejoin": "round"
                    })], -1)])), createBaseVNode("img", {
                        class: "item-image",
                        src: e.item.image,
                        alt: e.item.name
                    }, null, 8, _hoisted_3$g), createBaseVNode("div", _hoisted_4$g, [createBaseVNode("div", _hoisted_5$g, toDisplayString(e.item.name), 1), createBaseVNode("div", _hoisted_6$f, toDisplayString(e.item.description), 1)]), createBaseVNode("div", _hoisted_7$f, [createBaseVNode("button", {
                        class: "sell-button",
                        onClick: l,
                        disabled: r.value
                    }, [a[1] || (a[1] = createBaseVNode("div", {
                        class: "button-label"
                    }, "Sell for", -1)), createBaseVNode("div", _hoisted_9$d, toDisplayString(e.item.price), 1), createBaseVNode("div", _hoisted_10$c, [createVNode(Coin, {
                        size: "small"
                    })])], 8, _hoisted_8$d), createBaseVNode("button", {
                        class: "get-button",
                        onClick: c,
                        disabled: r.value
                    }, a[2] || (a[2] = [createBaseVNode("div", {
                        class: "button-label"
                    }, "Get Gift", -1)]), 8, _hoisted_11$c), createBaseVNode("button", {
                        class: "upgrade-button",
                        onClick: d,
                        disabled: r.value
                    }, a[3] || (a[3] = [createBaseVNode("div", {
                        class: "button-label"
                    }, "Upgrade", -1)]), 8, _hoisted_12$c)])])])) : createCommentVNode("", !0)])),
                _: 1
            }))
    }
}
    , ModalDropAction = _export_sfc$1(_sfc_main$i, [["__scopeId", "data-v-0cbb215d"]])
    , WithdrawModal_vue_vue_type_style_index_0_scoped_a474ac8b_lang = ""
    , _hoisted_1$h = {
    class: "modal"
}
    , _hoisted_2$g = {
    class: "get-gift"
}
    , _hoisted_3$f = {
    key: 0,
    class: "confirmation-message"
}
    , _hoisted_4$f = {
    key: 1,
    class: "error-message"
}
    , _hoisted_5$f = {
    class: "button-container"
}
    , _sfc_main$h = {
    __name: "WithdrawModal",
    props: {
        isOpen: {
            type: Boolean,
            default: !1
        },
        errorMessage: {
            type: String,
            default: ""
        }
    },
    emits: ["close", "open-bot", "confirm-withdraw"],
    setup(e, {emit: t}) {
        const a = e
            , s = t
            , i = computed(( () => {
                    const e = a.errorMessage.toLowerCase();
                    return e.includes("[400 peer_id_invalid]") || e.includes("peer_id_invalid") || e.includes("need to confirm your account") || e.includes("telegram says")
                }
            ))
            , r = computed(( () => {
                    const e = a.errorMessage.toLowerCase();
                    return e.includes("telegram") || e.includes("bot") || e.includes("chat") || e.includes("[400") || e.includes("[401") || e.includes("[403") || e.includes("pyrogram")
                }
            ))
            , o = () => {
                s("close")
            }
            , n = () => {
                s("open-bot")
            }
            , l = () => {
                localStorage.setItem("withdraw_confirmed2", "true"),
                    s("confirm-withdraw"),
                    o()
            }
        ;
        return (t, a) => e.isOpen ? (openBlock(),
            createElementBlock("div", {
                key: 0,
                class: "modal-overlay",
                onClick: withModifiers(o, ["self"])
            }, [createBaseVNode("div", _hoisted_1$h, [a[4] || (a[4] = createBaseVNode("div", {
                class: "modal-background-container"
            }, [createBaseVNode("img", {
                class: "rectangle",
                src: "/images/effects/rectangle_modal.png",
                alt: "Background"
            })], -1)), createBaseVNode("div", {
                class: "icon",
                onClick: o
            }, a[0] || (a[0] = [createBaseVNode("svg", {
                class: "close",
                width: "24",
                height: "24",
                viewBox: "0 0 24 24",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
            }, [createBaseVNode("path", {
                d: "M18 6L6 18M6 6L18 18",
                stroke: "white",
                "stroke-width": "2",
                "stroke-linecap": "round",
                "stroke-linejoin": "round"
            })], -1)])), createBaseVNode("div", _hoisted_2$g, toDisplayString(i.value ? "Confirm Your Account" : "Withdrawal Failed"), 1), i.value ? (openBlock(),
                createElementBlock("div", _hoisted_3$f, a[1] || (a[1] = [createBaseVNode("span", null, [createBaseVNode("span", {
                    class: "text-normal"
                }, [createTextVNode(" To withdraw items, you need to confirm your account. "), createBaseVNode("br"), createTextVNode(' Write " ')]), createBaseVNode("span", {
                    class: "text-highlight"
                }, " Hi "), createBaseVNode("span", {
                    class: "text-normal"
                }, ' " to new Portals bot and you can receive your gifts. ')], -1)]))) : (openBlock(),
                createElementBlock("div", _hoisted_4$f, toDisplayString(e.errorMessage), 1)), createBaseVNode("div", _hoisted_5$f, [i.value || r.value ? (openBlock(),
                createElementBlock("button", {
                    key: 0,
                    class: "primary-button",
                    onClick: n
                }, a[2] || (a[2] = [createBaseVNode("div", {
                    class: "button-label"
                }, "Open dialog with Portals bot", -1)]))) : createCommentVNode("", !0), i.value ? (openBlock(),
                createElementBlock("button", {
                    key: 1,
                    class: "secondary-button",
                    onClick: l
                }, a[3] || (a[3] = [createBaseVNode("div", {
                    class: "button-label"
                }, "Confirm Withdraw", -1)]))) : createCommentVNode("", !0)])])])) : createCommentVNode("", !0)
    }
}
    , WithdrawModal = _export_sfc$1(_sfc_main$h, [["__scopeId", "data-v-a474ac8b"]])
    , ModalSellAll_vue_vue_type_style_index_0_scoped_dec51503_lang = ""
    , _hoisted_1$g = {
    class: "frame-2087328929"
}
    , _hoisted_2$f = {
    class: "label"
}
    , _hoisted_3$e = {
    class: "coin"
}
    , _hoisted_4$e = {
    class: "frame-2087328884"
}
    , _hoisted_5$e = ["disabled"]
    , _hoisted_6$e = {
    key: 0,
    class: "label2"
}
    , _hoisted_7$e = {
    key: 1,
    class: "loading-spinner"
}
    , _sfc_main$g = {
    __name: "ModalSellAll",
    props: {
        isOpen: {
            type: Boolean,
            default: !1
        },
        itemCount: {
            type: Number,
            default: 0
        },
        totalPrice: {
            type: Number,
            default: 0
        }
    },
    emits: ["close", "sellComplete"],
    setup(e, {emit: t}) {
        const a = e
            , s = t
            , i = inject("userStore")
            , r = ref(!1)
            , o = ref(!1)
            , n = () => {
                o.value || (r.value = !0,
                    setTimeout(( () => {
                            s("close"),
                                r.value = !1
                        }
                    ), 300))
            }
            , l = async () => {
                if (!o.value)
                    try {
                        o.value = !0;
                        const e = await axios$1.get("/api/sell_all_items.php", {
                            withCredentials: !0
                        });
                        !0 === e.data.status ? (e.data.amount && i && i.addToBalance(parseFloat(e.data.amount)),
                            s("sellComplete", {
                                totalPrice: e.data.amount || a.totalPrice,
                                itemCount: e.data.count || a.itemCount,
                                success: !0
                            }),
                            setTimeout(( () => {
                                    n()
                                }
                            ), 1e3)) : (n(),
                            s("sellComplete", {
                                success: !1,
                                error: e.data.message || "Failed to sell items"
                            }))
                    } catch (e) {
                        n(),
                            s("sellComplete", {
                                success: !1,
                                error: e.message || "An unexpected error occurred"
                            })
                    } finally {
                        o.value = !1
                    }
            }
        ;
        return (t, a) => e.isOpen ? (openBlock(),
            createElementBlock("div", {
                key: 0,
                class: "modal-overlay",
                onClick: withModifiers(n, ["self"])
            }, [createBaseVNode("div", {
                class: normalizeClass(["modal", {
                    closing: r.value
                }])
            }, [a[2] || (a[2] = createBaseVNode("div", {
                class: "frame-2087328889"
            }, [createBaseVNode("div", {
                class: "confirm"
            }, "Confirm"), createBaseVNode("div", {
                class: "are-you-sure-you-want-to-sell-all-your-items"
            }, " Are you sure you want to sell all your items? ")], -1)), createBaseVNode("div", {
                class: "icon",
                onClick: n
            }, a[0] || (a[0] = [createBaseVNode("svg", {
                class: "close",
                width: "24",
                height: "24",
                viewBox: "0 0 24 24",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
            }, [createBaseVNode("path", {
                d: "M18 6L6 18M6 6L18 18",
                stroke: "white",
                "stroke-width": "2",
                "stroke-linecap": "round",
                "stroke-linejoin": "round"
            })], -1)])), createBaseVNode("div", _hoisted_1$g, [createBaseVNode("div", _hoisted_2$f, toDisplayString(e.itemCount) + " items for a total of " + toDisplayString(e.totalPrice), 1), createBaseVNode("div", _hoisted_3$e, [createVNode(Coin, {
                size: "small"
            })])]), createBaseVNode("div", _hoisted_4$e, [createBaseVNode("div", {
                class: normalizeClass(["button", {
                    loading: o.value
                }]),
                onClick: l,
                disabled: o.value
            }, [o.value ? (openBlock(),
                createElementBlock("div", _hoisted_7$e)) : (openBlock(),
                createElementBlock("div", _hoisted_6$e, "Yes, sell all items"))], 10, _hoisted_5$e), createBaseVNode("div", {
                class: "button2",
                onClick: n
            }, a[1] || (a[1] = [createBaseVNode("div", {
                class: "label3"
            }, "No, back", -1)]))])], 2)])) : createCommentVNode("", !0)
    }
}
    , ModalSellAll = _export_sfc$1(_sfc_main$g, [["__scopeId", "data-v-dec51503"]])
    , OpenStory_vue_vue_type_style_index_0_scoped_34d2e600_lang = ""
    , _hoisted_1$f = {
    class: "inventory-section"
}
    , _hoisted_2$e = {
    class: "inventory-header"
}
    , _hoisted_3$d = {
    class: "buttons-profile-container"
}
    , _hoisted_4$d = {
    class: "label"
}
    , _hoisted_5$d = {
    key: 0,
    class: "error-message-container"
}
    , _hoisted_6$d = {
    class: "error-message-content"
}
    , _hoisted_7$d = {
    key: 1,
    class: "success-message-container"
}
    , _hoisted_8$c = {
    class: "success-message-content"
}
    , _hoisted_9$c = {
    key: 2,
    class: "loading-state"
}
    , _hoisted_10$b = {
    key: 3,
    class: "error-state"
}
    , _hoisted_11$b = {
    class: "error-message"
}
    , _hoisted_12$b = {
    key: 4,
    class: "empty-state"
}
    , _hoisted_13$b = {
    key: 5,
    class: "inventory-grid"
}
    , _hoisted_14$a = ["src", "alt"]
    , _hoisted_15$9 = {
    class: "item-price-tag"
}
    , _hoisted_16$7 = {
    class: "coin-wrapper"
}
    , _hoisted_17$6 = {
    class: "price-value"
}
    , _hoisted_18$5 = ["onClick"]
    , _hoisted_19$5 = {
    key: 0,
    class: "loading-spinner-small"
}
    , _hoisted_20$3 = ["src", "alt"]
    , _hoisted_21$3 = {
    key: 6,
    class: "pagination-loading"
}
    , _hoisted_22$3 = {
    key: 7,
    class: "load-more-container"
}
    , _hoisted_23$1 = {
    key: 8,
    class: "end-of-list"
}
    , _sfc_main$f = {
    __name: "OpenStory",
    setup(e) {
        const t = useRouter()
            , a = inject("userStore")
            , s = inject("webSocket", ref(null))
            , i = inject("registerWsHandler", null)
            , r = inject("unregisterWsHandler", null)
            , o = ref("")
            , n = ref(new Map);
        let l = 0;
        const c = ref([])
            , d = ref(!1)
            , h = ref(null)
            , p = ref(!0)
            , u = ref(0)
            , m = ref(!1);
        ref(!1);
        const f = ref(0)
            , v = ref(0)
            , g = ref(!1)
            , y = ref(null)
            , _ = ref("")
            , b = ref(!1)
            , k = async () => {
                try {
                    const e = await axios$1.get("/api/get_all_skins_to_sell.php", {
                        withCredentials: !0
                    });
                    e.data && void 0 !== e.data.count ? (f.value = e.data.count,
                        v.value = e.data.total_amount) : (f.value = 0,
                        v.value = 0)
                } catch (e) {
                    f.value = 0,
                        v.value = 0
                }
            }
            , w = () => {
                f.value > 0 && v.value > 0 ? m.value = !0 : (h.value = "You don't have any items to sell",
                    setTimeout(( () => {
                            h.value = null
                        }
                    ), 3e3))
            }
            , B = () => {
                m.value = !1
            }
            , C = e => {
                e.success ? (o.value = `Successfully sold ${e.itemCount} items for ${e.totalPrice} TON!`,
                    f.value = 0,
                    v.value = 0,
                    setTimeout(( () => {
                            o.value = ""
                        }
                    ), 5e3),
                    c.value = c.value.map((e => 0 === e.status ? {
                        ...e,
                        status: 1
                    } : e))) : (h.value = e.error || "Failed to sell items",
                    setTimeout(( () => {
                            h.value = null
                        }
                    ), 5e3))
            }
            , x = e => {
                if (!e)
                    return;
                const t = e.id
                    , a = e.status
                    , s = e.message || "";
                if (!t || void 0 === a)
                    return;
                const i = t;
                let r = null
                    , o = -1;
                if (o = c.value.findIndex((e => e.id === i)),
                -1 !== o && (r = c.value[o]),
                !r && n.value.has(i)) {
                    const e = n.value.get(i);
                    o = c.value.findIndex((t => t.id === e)),
                    -1 !== o && (r = c.value[o])
                }
                if (!r && s) {
                    let e = null;
                    const t = s.match(/['"]([^'"]+)['"]/);
                    if (t && t[1])
                        e = t[1];
                    else {
                        const t = s.match(/Gift with title ['']([^'']+)['']/i);
                        t && t[1] && (e = t[1])
                    }
                    e && (o = c.value.findIndex((t => t.name === e || t.title === e)),
                    -1 !== o && (r = c.value[o],
                        n.value.set(i, r.id)))
                }
                if (r) {
                    const e = r.status;
                    r.status = a,
                    4 === e && 0 === a && (_.value = s,
                        b.value = !0)
                } else
                    0 === a && s && (_.value = s,
                        b.value = !0)
            }
            , S = async (e, t, a) => {
                try {
                    if (!e || !t)
                        return {
                            success: !1,
                            error: "Missing required parameters"
                        };
                    let r = "";
                    switch (a) {
                        case 0:
                            r = "reset to available";
                            break;
                        case 1:
                            r = "sold";
                            break;
                        case 2:
                            r = "received";
                            break;
                        case 4:
                            r = "being sent";
                            break;
                        default:
                            r = "updated"
                    }
                    const o = {
                        id: t,
                        status: a,
                        message: `Your item has been ${r}`,
                        timestamp: Date.now()
                    };
                    if (s.value && s.value.readyState === WebSocket.OPEN)
                        try {
                            const t = {
                                event: "inventory_update",
                                userId: e,
                                data: o
                            };
                            return s.value.send(JSON.stringify(t)),
                                {
                                    success: !0,
                                    method: "websocket"
                                }
                        } catch (i) {}
                } catch (r) {
                    return {
                        success: !1,
                        error: r.message
                    }
                }
            }
            , E = () => {
                u.value = 0 === u.value ? 1 : 0,
                    localStorage.setItem("showAvailableFilter", u.value.toString()),
                    l = 0,
                    c.value = [],
                    V()
            }
            , V = async () => {
                if (!d.value) {
                    d.value = !0,
                        h.value = null;
                    try {
                        let e = "/api/load_open_story.php";
                        const t = [];
                        1 === u.value && t.push("showavailable=1"),
                        l > 0 && t.push(`page=${l}`),
                        t.length > 0 && (e += `?${t.join("&")}`);
                        const a = await axios$1.get(e, {
                            withCredentials: !0
                        });
                        if (Array.isArray(a.data)) {
                            const e = a.data;
                            c.value = [...c.value, ...e],
                                l += 18,
                                p.value = e.length >= 18
                        } else
                            h.value = "Failed to load items: Invalid response format"
                    } catch (e) {
                        h.value = "Failed to load items. Please try again."
                    } finally {
                        d.value = !1
                    }
                }
            }
            , N = () => {
                l = 0,
                    c.value = [],
                    p.value = !0,
                    u.value = 0,
                    V()
            }
            , P = e => {
                switch (e) {
                    case 0:
                    default:
                        return "Information";
                    case 1:
                        return "Sold";
                    case 2:
                        return "Received";
                    case 3:
                        return "Upgraded";
                    case 4:
                        return "Sending..."
                }
            }
            , A = e => {
                switch (e) {
                    case 0:
                    default:
                        return "#FFFFFF";
                    case 1:
                        return "#0075FF";
                    case 2:
                        return "#23C265";
                    case 3:
                        return "#FF8400";
                    case 4:
                        return "#FFA500"
                }
            }
            , $ = e => {
                switch (e) {
                    case 1:
                        return "/images/actions/sold.svg";
                    case 2:
                        return "/images/actions/received.svg";
                    case 3:
                        return "/images/actions/upgraded.svg";
                    default:
                        return ""
                }
            }
            , T = () => {
                g.value = !1
            }
            , M = async e => {
                var t;
                g.value = !1;
                try {
                    const s = (null == (t = e.originalData) ? void 0 : t.id) || e.id;
                    if (!s)
                        throw new Error("Item ID not found");
                    const i = await axios$1.get(`/api/change_drop_status.php?id=${s}&status=sell`, {
                        withCredentials: !0
                    });
                    if (i.data.error)
                        h.value = i.data.error;
                    else if (!0 === i.data.status && i.data.price) {
                        const e = parseFloat(i.data.price);
                        isNaN(e) || a.addToBalance(e);
                        const t = c.value.find((e => e.id === s));
                        t && (t.status = 1,
                        a.state.user.id && S(a.state.user.id, s, 1)),
                            k()
                    }
                } catch (s) {
                    h.value = s.message || "Error selling item"
                }
            }
            , D = async e => {
                var t;
                g.value = !1;
                try {
                    const a = e.id || (null == (t = e.originalData) ? void 0 : t.id);
                    if (!a)
                        throw new Error("Frontend item ID not found");
                    if (!("true" === localStorage.getItem("withdraw_confirmed2")))
                        return _.value = "To withdraw items, you need to confirm your account.",
                            b.value = !0,
                            void (y.value = e);
                    await I(e, a)
                } catch (a) {
                    h.value = a.message || "Error withdrawing item"
                }
            }
            , I = async (e, t) => {
                try {
                    const e = await axios$1.get(`/api/change_drop_status.php?id=${t}&status=withdraw`, {
                        withCredentials: !0
                    });
                    if (e.data.error)
                        _.value = e.data.error,
                            b.value = !0;
                    else if (!0 === e.data.status) {
                        const s = e.data.id || t;
                        n.value.set(String(s), t);
                        const i = c.value.find((e => e.id === t));
                        i && (i.status = 4,
                            i.backendId = s,
                        a.state.user.id && S(a.state.user.id, s, 4)),
                            k()
                    }
                } catch (s) {
                    _.value = s.message || "Error withdrawing item",
                        b.value = !0
                }
            }
            , F = () => {
                const e = "weeaave";
                try {
                    window.Telegram && window.Telegram.WebApp && window.Telegram.WebApp.openTelegramLink ? window.Telegram.WebApp.openTelegramLink(`https://t.me/${e}`) : window.open(`https://t.me/${e}`, "_blank")
                } catch (t) {
                    window.open(`https://t.me/${e}`, "_blank")
                }
            }
            , L = async () => {
                var e;
                if (localStorage.setItem("withdraw_confirmed2", "true"),
                    y.value) {
                    const t = y.value.id || (null == (e = y.value.originalData) ? void 0 : e.id);
                    t && await I(y.value, t)
                }
            }
            , R = () => {
                b.value = !1,
                    _.value = ""
            }
            , O = () => {
                t.push("/")
            }
        ;
        return onMounted(( () => {
                const e = localStorage.getItem("showAvailableFilter");
                u.value = null !== e ? parseInt(e) : 0,
                    k(),
                    V(),
                i && i("inventory_update", x),
                    s.value
            }
        )),
            onUnmounted(( () => {
                    r && r("inventory_update")
                }
            )),
            (e, t) => (openBlock(),
                createElementBlock("div", _hoisted_1$f, [createBaseVNode("div", _hoisted_2$e, [t[3] || (t[3] = createBaseVNode("div", {
                    class: "section-title"
                }, "Inventory:", -1)), createBaseVNode("div", _hoisted_3$d, [createBaseVNode("div", {
                    class: "button",
                    onClick: E
                }, [createBaseVNode("div", _hoisted_4$d, toDisplayString(1 === u.value ? "Show all" : "Show available"), 1)]), f.value > 0 && v.value > 0 ? (openBlock(),
                    createElementBlock("div", {
                        key: 0,
                        class: "button",
                        onClick: w
                    }, t[2] || (t[2] = [createBaseVNode("div", {
                        class: "label"
                    }, "Sell all", -1)]))) : createCommentVNode("", !0)])]), h.value ? (openBlock(),
                    createElementBlock("div", _hoisted_5$d, [createBaseVNode("div", _hoisted_6$d, toDisplayString(h.value), 1), createBaseVNode("button", {
                        class: "error-close",
                        onClick: t[0] || (t[0] = e => h.value = null)
                    }, "×")])) : createCommentVNode("", !0), o.value ? (openBlock(),
                    createElementBlock("div", _hoisted_7$d, [createBaseVNode("div", _hoisted_8$c, toDisplayString(o.value), 1), createBaseVNode("button", {
                        class: "success-close",
                        onClick: t[1] || (t[1] = e => o.value = null)
                    }, "×")])) : createCommentVNode("", !0), d.value && 0 === c.value.length ? (openBlock(),
                    createElementBlock("div", _hoisted_9$c, t[4] || (t[4] = [createBaseVNode("div", {
                        class: "loading-spinner"
                    }, null, -1), createBaseVNode("div", {
                        class: "loading-text"
                    }, "Loading your inventory...", -1)]))) : h.value && 0 === c.value.length ? (openBlock(),
                    createElementBlock("div", _hoisted_10$b, [createBaseVNode("div", _hoisted_11$b, toDisplayString(h.value), 1), createBaseVNode("button", {
                        class: "retry-button",
                        onClick: N
                    }, t[5] || (t[5] = [createBaseVNode("div", {
                        class: "button-label"
                    }, "Try Again", -1)]))])) : d.value || 0 !== c.value.length ? (openBlock(),
                    createElementBlock("div", _hoisted_13$b, [(openBlock(!0),
                        createElementBlock(Fragment, null, renderList(c.value, (e => (openBlock(),
                            createElementBlock("div", {
                                key: e.id,
                                class: normalizeClass(["inventory-item", {
                                    black_backdrop: e.is_black
                                }])
                            }, [createBaseVNode("img", {
                                class: "item-image",
                                src: e.img,
                                alt: e.name
                            }, null, 8, _hoisted_14$a), createBaseVNode("div", _hoisted_15$9, [createBaseVNode("div", _hoisted_16$7, [createVNode(Coin, {
                                size: "small"
                            })]), createBaseVNode("div", _hoisted_17$6, toDisplayString(e.price), 1)]), createBaseVNode("div", {
                                class: normalizeClass(["item-status", {
                                    "status-button": 0 === e.status,
                                    "status-sending": 4 === e.status
                                }]),
                                onClick: t => 0 === e.status ? (e => {
                                        y.value = {
                                            id: e.id,
                                            name: e.name,
                                            image: e.img,
                                            price: e.price,
                                            description: `This is a ${e.name} item from your inventory.`
                                        },
                                            g.value = !0
                                    }
                                )(e) : null,
                                style: normalizeStyle({
                                    cursor: 0 === e.status ? "pointer" : "default"
                                })
                            }, [4 === e.status ? (openBlock(),
                                createElementBlock("div", _hoisted_19$5)) : $(e.status) ? (openBlock(),
                                createElementBlock("img", {
                                    key: 1,
                                    class: "status-icon",
                                    src: $(e.status),
                                    alt: P(e.status) + " Icon"
                                }, null, 8, _hoisted_20$3)) : createCommentVNode("", !0), createBaseVNode("div", {
                                class: "status-text",
                                style: normalizeStyle({
                                    color: A(e.status)
                                })
                            }, toDisplayString(P(e.status)), 5)], 14, _hoisted_18$5)], 2)))), 128))])) : (openBlock(),
                    createElementBlock("div", _hoisted_12$b, [t[7] || (t[7] = createBaseVNode("div", {
                        class: "empty-state-message"
                    }, "You haven't opened any cases yet", -1)), createBaseVNode("button", {
                        class: "open-cases-button",
                        onClick: O
                    }, t[6] || (t[6] = [createBaseVNode("div", {
                        class: "button-label"
                    }, "Open Cases", -1)]))])), d.value && c.value.length > 0 ? (openBlock(),
                    createElementBlock("div", _hoisted_21$3, t[8] || (t[8] = [createBaseVNode("div", {
                        class: "loading-spinner"
                    }, null, -1), createBaseVNode("div", {
                        class: "loading-text"
                    }, "Loading more items...", -1)]))) : createCommentVNode("", !0), !d.value && p.value && c.value.length > 0 ? (openBlock(),
                    createElementBlock("div", _hoisted_22$3, [createBaseVNode("button", {
                        class: "load-more-button",
                        onClick: V
                    }, t[9] || (t[9] = [createBaseVNode("div", {
                        class: "button-label"
                    }, "Load More", -1)]))])) : createCommentVNode("", !0), !p.value && c.value.length > 0 ? (openBlock(),
                    createElementBlock("div", _hoisted_23$1, " You've reached the end of your inventory ")) : createCommentVNode("", !0), createVNode(ModalDropAction, {
                    "is-open": g.value,
                    item: y.value,
                    onClose: T,
                    onSell: M,
                    onGet: D
                }, null, 8, ["is-open", "item"]), createVNode(WithdrawModal, {
                    "is-open": b.value,
                    "error-message": _.value,
                    onClose: R,
                    onOpenBot: F,
                    onConfirmWithdraw: L
                }, null, 8, ["is-open", "error-message"]), createVNode(ModalSellAll, {
                    "is-open": m.value,
                    "item-count": f.value,
                    "total-price": v.value,
                    onClose: B,
                    onSellComplete: C
                }, null, 8, ["is-open", "item-count", "total-price"])]))
    }
}
    , OpenStory = _export_sfc$1(_sfc_main$f, [["__scopeId", "data-v-34d2e600"]])
    , ProfilePage_vue_vue_type_style_index_0_scoped_47cb848d_lang = ""
    , _hoisted_1$e = {
    class: "profile-page"
}
    , _hoisted_2$d = {
    class: "profile-container"
}
    , _hoisted_3$c = {
    class: "profile-section"
}
    , _hoisted_4$c = {
    class: "avatars"
}
    , _hoisted_5$c = ["src"]
    , _hoisted_6$c = {
    key: 1,
    class: "profile-avatar",
    src: "/images/effects/profile.svg",
    alt: "User Avatar"
}
    , _hoisted_7$c = {
    class: "profile-info"
}
    , _hoisted_8$b = {
    class: "profile-name"
}
    , _hoisted_9$b = {
    class: "profile-id"
}
    , _hoisted_10$a = {
    key: 0,
    class: "wallet-error alert"
}
    , _hoisted_11$a = {
    class: "balance-section"
}
    , _hoisted_12$a = {
    class: "balance-info"
}
    , _hoisted_13$a = {
    class: "balance-display"
}
    , _hoisted_14$9 = {
    class: "balance-amount"
}
    , _hoisted_15$8 = {
    class: "coin-small"
}
    , _hoisted_16$6 = {
    class: "balance-actions"
}
    , _hoisted_17$5 = {
    key: 0,
    class: "balance-coin-animation"
}
    , _hoisted_18$4 = {
    class: "wallet-section"
}
    , _hoisted_19$4 = {
    key: 0,
    class: "wallet-connected"
}
    , _hoisted_20$2 = {
    class: "wallet-info"
}
    , _hoisted_21$2 = {
    class: "wallet-address"
}
    , _hoisted_22$2 = {
    class: "free-case-banner"
}
    , _sfc_main$e = {
    __name: "ProfilePage",
    setup(e) {
        const t = useRouter()
            , a = useRoute()
            , s = inject("userStore")
            , {tonConnectUI: i} = useTonConnectUI()
            , r = useTonWallet()
            , o = useTonAddress()
            , n = ref(!0)
            , l = ref(null)
            , c = ref(!1)
            , d = ref(!1)
            , h = ref(!1)
            , p = ref([])
            , u = computed(( () => s.state.user.walletAddress ? m(s.state.user.walletAddress) : o.value ? m(o.value) : null))
            , m = e => e ? e.length <= 12 ? e : `${e.substring(0, 5)}...${e.substring(e.length - 4)}` : ""
            , f = computed(( () => !(!s.state.user.walletAddress && !o.value)));
        watch(( () => o.value), (async e => {
                if (e && !s.state.user.walletAddress)
                    try {
                        await v(e)
                    } catch (t) {
                        l.value = t.message || "Failed to save wallet address"
                    }
            }
        ));
        const v = async e => {
                try {
                    const t = await axios$1.post("/api/update_wallet.php", {
                        wallet_address: e
                    }, {
                        withCredentials: !0
                    });
                    return t.data.success && s.connectWallet(e),
                        t.data
                } catch (t) {
                    throw t
                }
            }
            , g = async () => {
                if (!f.value)
                    try {
                        if (l.value = null,
                        i && r.value && o.value)
                            return void (await v(o.value));
                        i ? await i.openModal() : l.value = "TON Connect UI is not available"
                    } catch (e) {
                        l.value = "Failed to connect wallet: " + (e.message || "Unknown error")
                    }
            }
            , y = async () => {
                try {
                    if (i && r.value)
                        try {
                            await i.disconnect()
                        } catch (e) {}
                    const t = await axios$1.post("/api/update_wallet.php", {
                        disconnect: !0
                    }, {
                        withCredentials: !0
                    });
                    if (!t.data.success)
                        throw new Error(t.data.message || "Failed to disconnect wallet");
                    s.disconnectWallet()
                } catch (t) {
                    l.value = "Failed to disconnect wallet: " + (t.message || "Unknown error")
                }
            }
            , _ = () => {
                f.value ? c.value = !0 : l.value = "Please connect a TON wallet first to make deposits."
            }
            , b = () => {
                c.value = !1
            }
            , k = async e => {
                if (e && !(e <= 0))
                    try {
                        const t = Math.min(8, e);
                        p.value = (e => {
                                const t = [];
                                for (let a = 0; a < e; a++)
                                    t.push({
                                        id: a,
                                        left: 30 * Math.random() + 10,
                                        bottom: 20 * Math.random(),
                                        delay: .15 * Math.random(),
                                        size: 10 * Math.random() + 35
                                    });
                                return t
                            }
                        )(t),
                            h.value = !0,
                            setTimeout(( () => {
                                    h.value = !1,
                                        p.value = []
                                }
                            ), 800)
                    } catch (t) {
                        l.value = "Deposit failed: " + t.message
                    }
            }
        ;
        onMounted((async () => {
                if (n.value = !0,
                r.value && o.value && !s.state.user.walletAddress)
                    try {
                        await v(o.value)
                    } catch (e) {}
                n.value = !1,
                "true" === a.query.openDeposit && (c.value = !0,
                    t.replace({
                        path: a.path
                    }))
            }
        ));
        const w = computed(( () => a.path));
        return (e, a) => (openBlock(),
            createElementBlock("div", _hoisted_1$e, [createBaseVNode("div", _hoisted_2$d, [createBaseVNode("div", _hoisted_3$c, [createBaseVNode("div", _hoisted_4$c, [unref(s).state.user.photoUrl ? (openBlock(),
                createElementBlock("img", {
                    key: 0,
                    class: "profile-avatar",
                    src: unref(s).state.user.photoUrl,
                    alt: "User Avatar"
                }, null, 8, _hoisted_5$c)) : (openBlock(),
                createElementBlock("img", _hoisted_6$c)), createBaseVNode("div", {
                class: "settings-button",
                onClick: a[0] || (a[0] = e => d.value = !0)
            }, a[5] || (a[5] = [createBaseVNode("div", {
                class: "vuesax-bold-setting-2"
            }, [createBaseVNode("img", {
                class: "vuesax-bold-setting-22",
                src: "/images/effects/settings_profile.svg"
            })], -1)]))]), createBaseVNode("div", _hoisted_7$c, [createBaseVNode("div", _hoisted_8$b, toDisplayString(unref(s).displayName), 1), createBaseVNode("div", _hoisted_9$b, toDisplayString(unref(s).telegramId || "#User"), 1)])]), l.value ? (openBlock(),
                createElementBlock("div", _hoisted_10$a, [createTextVNode(toDisplayString(l.value) + " ", 1), createBaseVNode("button", {
                    class: "close-error",
                    onClick: a[1] || (a[1] = e => l.value = null)
                }, "×")])) : createCommentVNode("", !0), createBaseVNode("div", _hoisted_11$a, [createBaseVNode("div", _hoisted_12$a, [a[6] || (a[6] = createBaseVNode("div", {
                class: "label-small"
            }, "Balance", -1)), createBaseVNode("div", _hoisted_13$a, [createBaseVNode("div", _hoisted_14$9, toDisplayString(unref(s).formattedBalance), 1), createBaseVNode("div", _hoisted_15$8, [createVNode(Coin, {
                size: "small"
            })])])]), createBaseVNode("div", _hoisted_16$6, [createCommentVNode("", !0), createBaseVNode("button", {
                class: "deposit-button",
                onClick: _
            }, a[8] || (a[8] = [createBaseVNode("div", {
                class: "button-label"
            }, "Deposit", -1)]))]), h.value ? (openBlock(),
                createElementBlock("div", _hoisted_17$5, [(openBlock(!0),
                    createElementBlock(Fragment, null, renderList(p.value, (e => (openBlock(),
                        createElementBlock("div", {
                            key: e.id,
                            class: "balance-animated-coin",
                            style: normalizeStyle({
                                left: `${e.left}%`,
                                bottom: `${e.bottom}%`,
                                width: `${e.size}px`,
                                height: `${e.size}px`,
                                animationDelay: `${e.delay}s`
                            })
                        }, [createVNode(Coin, {
                            size: "small"
                        })], 4)))), 128))])) : createCommentVNode("", !0)]), createBaseVNode("div", _hoisted_18$4, [f.value ? (openBlock(),
                createElementBlock("div", _hoisted_19$4, [createBaseVNode("div", _hoisted_20$2, [a[9] || (a[9] = createBaseVNode("div", {
                    class: "label-small"
                }, "Connected wallet:", -1)), createBaseVNode("div", _hoisted_21$2, toDisplayString(u.value), 1)]), createBaseVNode("button", {
                    class: "disconnect-wallet-button",
                    onClick: y
                }, a[10] || (a[10] = [createBaseVNode("div", {
                    class: "button-label"
                }, "Disconnect", -1)]))])) : (openBlock(),
                createElementBlock("button", {
                    key: 1,
                    class: "connect-wallet-button",
                    onClick: g
                }, a[11] || (a[11] = [createBaseVNode("div", {
                    class: "button-label"
                }, "Connect TON Wallet", -1)])))]), createBaseVNode("div", _hoisted_22$2, [a[13] || (a[13] = createStaticVNode('<div class="lightning-icon" data-v-47cb848d><img class="lightning-svg" src="/images/effects/Lightning.png?1" data-v-47cb848d></div><div class="banner-content" data-v-47cb848d><div class="coin-wrapper" data-v-47cb848d><img class="coin-svg" src="/images/effects/invite_user.svg" data-v-47cb848d></div><div class="banner-text" data-v-47cb848d>Invite Friends</div></div>', 2)), createBaseVNode("button", {
                class: "telegram-button",
                onClick: a[2] || (a[2] = e => {
                        return a = "/invite",
                            void (w.value !== a && t.push(a));
                        var a
                    }
                )
            }, a[12] || (a[12] = [createBaseVNode("div", {
                class: "button-label_ref"
            }, "Invite", -1)]))]), createVNode(OpenStory)]), createVNode(ModalChoosePS, {
                "is-open": c.value,
                "current-balance": unref(s).state.user.balance,
                "wallet-address": unref(s).state.user.walletAddress || unref(o),
                onClose: b,
                onDeposit: k,
                onOpen: a[3] || (a[3] = e => c.value = !0)
            }, null, 8, ["is-open", "current-balance", "wallet-address"]), createVNode(ModalSettings, {
                "is-open": d.value,
                onClose: a[4] || (a[4] = e => d.value = !1)
            }, null, 8, ["is-open"])]))
    }
}
    , ProfilePage = _export_sfc$1(_sfc_main$e, [["__scopeId", "data-v-47cb848d"]])
    , Circle2_vue_vue_type_style_index_0_scoped_380f65b1_lang = ""
    , _sfc_main$d = {
    name: "CircleComponent",
    components: {
        Coin: Coin
    },
    props: {
        percentage: {
            type: Number,
            default: 0
        },
        betAmount: {
            type: Number,
            default: 0
        },
        desiredPrize: {
            type: Number,
            default: 0
        },
        isAnimating: {
            type: Boolean,
            default: !1
        },
        selectedItemImage: {
            type: String,
            default: null
        },
        upgradeResult: {
            type: Boolean,
            default: null
        }
    },
    data: () => ({
        displayedPercentage: 0,
        animationFrameId: null,
        arrowDegrees: 0,
        arrowTransition: 0,
        gameState: "idle",
        actionCompleted: !1
    }),
    computed: {
        formattedBetAmount() {
            return this.betAmount.toFixed(2)
        },
        formattedDesiredPrize() {
            return this.desiredPrize.toFixed(2)
        },
        formattedPercentage() {
            const e = this.displayedPercentage.toFixed(3);
            return e.endsWith(".000") ? e.slice(0, -4) : e.endsWith("00") ? e.slice(0, -2) : e.endsWith("0") ? e.slice(0, -1) : e
        },
        circleCircumference: () => 2 * Math.PI * 126,
        strokeDashOffset() {
            return this.circleCircumference - this.circleCircumference / 100 * (this.displayedPercentage || 0)
        },
        arrowGradient() {
            return "win" === this.gameState ? "url(#arrow-gradient-green)" : "lose" === this.gameState ? "url(#arrow-gradient-red)" : "url(#arrow-gradient-blue)"
        },
        arrowStyles() {
            return {
                transform: `rotate(${this.arrowDegrees}deg)`,
                transition: `transform ${this.arrowTransition}s`
            }
        },
        arcStrokeColor() {
            return "win" === this.gameState ? "#33EA00" : "lose" === this.gameState ? "#EA0017" : "#0098EA"
        },
        arcFilter() {
            return "win" === this.gameState ? "url(#glow-green)" : "lose" === this.gameState ? "url(#glow-red)" : "url(#glow-blue)"
        }
    },
    watch: {
        percentage: {
            immediate: !0,
            handler(e) {
                this.animatePercentage(e)
            }
        },
        isAnimating(e) {
            e && !this.actionCompleted ? this.startUpgradeAnimation() : e || this.resetAnimationState()
        }
    },
    methods: {
        calculateDegreeAngle() {
            return 3.6 * this.displayedPercentage
        },
        randomInRange: (e, t) => Math.random() * (t - e) + e,
        startUpgradeAnimation() {
            this.actionCompleted = !0,
                this.gameState = "animating";
            const e = this.upgradeResult
                , t = 3.6 * (this.displayedPercentage || 0)
                , a = 29 / (2 * Math.PI * 126) * 360;
            let s;
            if (e) {
                if (t <= 2 * a + 8)
                    s = t / 2;
                else {
                    const e = .1 * t
                        , a = .8 * t;
                    s = this.randomInRange(e, a)
                }
                s >= t && (s = t / 2)
            } else {
                if (t >= 360 - 2 * a - 8)
                    s = t + (360 - t) / 2;
                else {
                    const e = t + a + 8
                        , i = 360 - a - 8;
                    s = this.randomInRange(e, i)
                }
                s < t && (s = t + 2 * a + 8,
                s > 360 && (s = (t + 360) / 2))
            }
            this.arrowTransition = 0,
                this.arrowDegrees = 0,
                setTimeout(( () => {
                        this.arrowTransition = 7,
                            this.arrowDegrees = s + 1440,
                            setTimeout(( () => {
                                    e ? (this.$refs.circlePlate.src = "/images/effects/circle_plate_green.svg",
                                        this.gameState = "win") : (this.$refs.circlePlate.src = "/images/effects/circle_plate_red.svg",
                                        this.gameState = "lose"),
                                        this.$emit("upgrade-result", e)
                                }
                            ), 7400)
                    }
                ), 100)
        },
        resetAnimationState() {
            this.arrowTransition = 0,
                this.arrowDegrees = 0,
                this.gameState = "idle",
                this.actionCompleted = !1,
            this.$refs.circlePlate && (this.$refs.circlePlate.src = "/images/effects/circle_plate.svg")
        },
        animatePercentage(e) {
            this.animationFrameId && cancelAnimationFrame(this.animationFrameId),
            0 === this.displayedPercentage && e > 0 && (this.displayedPercentage = 0);
            const t = performance.now()
                , a = this.displayedPercentage
                , s = e - a
                , i = Math.min(Math.max(20 * Math.abs(s), 300), 1500)
                , r = o => {
                    const n = o - t
                        , l = Math.min(n / i, 1)
                        , c = l < .5 ? 2 * l * l : (4 - 2 * l) * l - 1;
                    this.displayedPercentage = a + s * c,
                        l < 1 ? this.animationFrameId = requestAnimationFrame(r) : this.displayedPercentage = e
                }
            ;
            this.animationFrameId = requestAnimationFrame(r)
        }
    },
    beforeUnmount() {
        this.animationFrameId && cancelAnimationFrame(this.animationFrameId)
    },
    mounted() {
        this.displayedPercentage = this.percentage;
        (new Image).src = "/images/effects/circle_plate_green.svg";
        (new Image).src = "/images/effects/circle_plate_red.svg"
    }
}
    , _hoisted_1$d = {
    class: "circle-container"
}
    , _hoisted_2$c = {
    class: "circle-info-panel"
}
    , _hoisted_3$b = {
    class: "info-column"
}
    , _hoisted_4$b = {
    class: "hint"
}
    , _hoisted_5$b = {
    class: "coin"
}
    , _hoisted_6$b = {
    class: "value"
}
    , _hoisted_7$b = {
    class: "info-column right"
}
    , _hoisted_8$a = {
    class: "hint"
}
    , _hoisted_9$a = {
    class: "coin"
}
    , _hoisted_10$9 = {
    class: "value"
}
    , _hoisted_11$9 = {
    class: "progress-container"
}
    , _hoisted_12$9 = {
    src: "/images/effects/circle_plate.svg",
    class: "circle-bg",
    alt: "Circle plate",
    ref: "circlePlate"
}
    , _hoisted_13$9 = {
    class: "progress-circle",
    width: "264",
    height: "264",
    viewBox: "0 0 264 264"
}
    , _hoisted_14$8 = ["stroke", "filter", "stroke-dasharray", "stroke-dashoffset"]
    , _hoisted_15$7 = {
    class: "center-content"
}
    , _hoisted_16$5 = {
    class: "percentage-value"
}
    , _hoisted_17$4 = {
    class: "arrow-wrapper"
}
    , _hoisted_18$3 = {
    xmlns: "http://www.w3.org/2000/svg",
    width: "29",
    height: "26",
    viewBox: "0 0 29 26",
    fill: "none",
    class: "arrow-indicator"
}
    , _hoisted_19$3 = ["fill"];
function _sfc_render$9(e, t, a, s, i, r) {
    const o = resolveComponent("Coin");
    return openBlock(),
        createElementBlock("div", _hoisted_1$d, [createBaseVNode("div", _hoisted_2$c, [createBaseVNode("div", _hoisted_3$b, [t[0] || (t[0] = createBaseVNode("div", {
            class: "label"
        }, "Bet Amount:", -1)), createBaseVNode("div", _hoisted_4$b, [createBaseVNode("div", _hoisted_5$b, [createVNode(o, {
            size: "small"
        })]), createBaseVNode("div", _hoisted_6$b, toDisplayString(r.formattedBetAmount), 1)])]), createBaseVNode("div", _hoisted_7$b, [t[1] || (t[1] = createBaseVNode("div", {
            class: "label"
        }, "Desired prize:", -1)), createBaseVNode("div", _hoisted_8$a, [createBaseVNode("div", _hoisted_9$a, [createVNode(o, {
            size: "small"
        })]), createBaseVNode("div", _hoisted_10$9, toDisplayString(r.formattedDesiredPrize), 1)])])]), createBaseVNode("div", _hoisted_11$9, [createBaseVNode("img", _hoisted_12$9, null, 512), t[4] || (t[4] = createBaseVNode("img", {
            src: "/images/effects/circle_plate_green.svg",
            class: "circle-bg-preload",
            alt: "Green plate"
        }, null, -1)), t[5] || (t[5] = createBaseVNode("img", {
            src: "/images/effects/circle_plate_red.svg",
            class: "circle-bg-preload",
            alt: "Red plate"
        }, null, -1)), createBaseVNode("div", {
            class: normalizeClass(["circle-border", {
                animating: a.isAnimating,
                win: "win" === i.gameState,
                lose: "lose" === i.gameState
            }])
        }, null, 2), (openBlock(),
            createElementBlock("svg", _hoisted_13$9, [t[2] || (t[2] = createStaticVNode('<defs data-v-380f65b1><filter id="glow-blue" x="-50%" y="-50%" width="200%" height="200%" data-v-380f65b1><feGaussianBlur stdDeviation="6" result="blur" data-v-380f65b1></feGaussianBlur><feFlood flood-color="#0098EA" flood-opacity="0.5" result="glow-color" data-v-380f65b1></feFlood><feComposite in="glow-color" in2="blur" operator="in" result="glow-blur" data-v-380f65b1></feComposite><feMerge data-v-380f65b1><feMergeNode in="glow-blur" data-v-380f65b1></feMergeNode><feMergeNode in="SourceGraphic" data-v-380f65b1></feMergeNode></feMerge></filter><filter id="glow-green" x="-50%" y="-50%" width="200%" height="200%" data-v-380f65b1><feGaussianBlur stdDeviation="6" result="blur" data-v-380f65b1></feGaussianBlur><feFlood flood-color="#33EA00" flood-opacity="0.5" result="glow-color" data-v-380f65b1></feFlood><feComposite in="glow-color" in2="blur" operator="in" result="glow-blur" data-v-380f65b1></feComposite><feMerge data-v-380f65b1><feMergeNode in="glow-blur" data-v-380f65b1></feMergeNode><feMergeNode in="SourceGraphic" data-v-380f65b1></feMergeNode></feMerge></filter><filter id="glow-red" x="-50%" y="-50%" width="200%" height="200%" data-v-380f65b1><feGaussianBlur stdDeviation="6" result="blur" data-v-380f65b1></feGaussianBlur><feFlood flood-color="#EA0017" flood-opacity="0.5" result="glow-color" data-v-380f65b1></feFlood><feComposite in="glow-color" in2="blur" operator="in" result="glow-blur" data-v-380f65b1></feComposite><feMerge data-v-380f65b1><feMergeNode in="glow-blur" data-v-380f65b1></feMergeNode><feMergeNode in="SourceGraphic" data-v-380f65b1></feMergeNode></feMerge></filter><radialGradient id="arrow-gradient-blue" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(16.6538 6.31449) rotate(101.92) scale(27.4896 65.1506)" data-v-380f65b1><stop stop-color="#0098EA" data-v-380f65b1></stop><stop offset="1" stop-color="#86C5FE" data-v-380f65b1></stop></radialGradient><radialGradient id="arrow-gradient-green" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(16.6538 6.31449) rotate(101.92) scale(27.4896 65.1506)" data-v-380f65b1><stop stop-color="rgba(51, 234, 0, 0.99)" data-v-380f65b1></stop><stop offset="1" stop-color="rgba(145, 254, 134, 0.99)" data-v-380f65b1></stop></radialGradient><radialGradient id="arrow-gradient-red" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(16.6538 6.31449) rotate(101.92) scale(27.4896 65.1506)" data-v-380f65b1><stop stop-color="rgba(234, 0, 23, 0.99)" data-v-380f65b1></stop><stop offset="1" stop-color="rgba(254, 136, 134, 0.99)" data-v-380f65b1></stop></radialGradient></defs><circle cx="132" cy="132" r="126" fill="none" stroke="#131824" stroke-width="10" stroke-linecap="round" data-v-380f65b1></circle>', 2)), i.displayedPercentage > 0 ? (openBlock(),
                createElementBlock("circle", {
                    key: 0,
                    cx: "132",
                    cy: "132",
                    r: "126",
                    fill: "none",
                    stroke: r.arcStrokeColor,
                    "stroke-width": "10",
                    class: normalizeClass(["progress-arc", {
                        animating: a.isAnimating,
                        win: "win" === i.gameState,
                        lose: "lose" === i.gameState
                    }]),
                    "stroke-linecap": "round",
                    filter: r.arcFilter,
                    "stroke-dasharray": `${r.circleCircumference},20000`,
                    "stroke-dashoffset": r.strokeDashOffset,
                    transform: "rotate(-90,132,132)"
                }, null, 10, _hoisted_14$8)) : createCommentVNode("", !0)])), createBaseVNode("div", _hoisted_15$7, [a.selectedItemImage ? (openBlock(),
            createElementBlock("div", {
                key: 0,
                class: "item-image",
                style: normalizeStyle({
                    backgroundImage: `url(${a.selectedItemImage})`
                })
            }, null, 4)) : createCommentVNode("", !0), createBaseVNode("div", {
            class: normalizeClass(["percentage-display", {
                "with-image": a.selectedItemImage,
                win: "win" === i.gameState,
                lose: "lose" === i.gameState
            }])
        }, [createBaseVNode("span", _hoisted_16$5, toDisplayString(r.formattedPercentage), 1), t[3] || (t[3] = createBaseVNode("span", {
            class: "percentage-symbol"
        }, "%", -1))], 2)]), createBaseVNode("div", _hoisted_17$4, [createBaseVNode("div", {
            class: normalizeClass(["dial-arrow-wrap", {
                win: "win" === i.gameState,
                lose: "lose" === i.gameState
            }]),
            style: normalizeStyle(r.arrowStyles)
        }, [(openBlock(),
            createElementBlock("svg", _hoisted_18$3, [createBaseVNode("path", {
                d: "M8.36172 7.71428C11.111 2.95238 12.4857 0.571429 14.5476 0.571429C16.6096 0.571428 17.9842 2.95238 20.7335 7.71428L24.8574 14.8571C27.6067 19.619 28.9814 22 27.9504 23.7857C26.9194 25.5714 24.1701 25.5714 18.6716 25.5714H10.4237C4.92511 25.5714 2.17583 25.5714 1.14485 23.7857C0.113863 22 1.48851 19.619 4.23779 14.8571L8.36172 7.71428Z",
                fill: r.arrowGradient,
                "fill-opacity": "0.99"
            }, null, 8, _hoisted_19$3)]))], 6)])])])
}
const Circle = _export_sfc$1(_sfc_main$d, [["render", _sfc_render$9], ["__scopeId", "data-v-380f65b1"]])
    , Items_vue_vue_type_style_index_0_scoped_10f5bf62_lang = ""
    , _sfc_main$c = {
    name: "ItemsComponent",
    components: {
        Coin: Coin
    },
    props: {
        isAnimating: {
            type: Boolean,
            default: !1
        }
    },
    emits: ["update-percentage", "start-animation", "update-bet", "update-prize", "update-selected-image"],
    data: () => ({
        multiplierOptions: [{
            label: "x1.5",
            value: 1.5
        }, {
            label: "x2",
            value: 2
        }, {
            label: "x3",
            value: 3
        }, {
            label: "x5",
            value: 5
        }, {
            label: "x10",
            value: 10
        }, {
            label: "x20",
            value: 20
        }],
        selectedMultiplier: null,
        activeTab: "inventory",
        selectedInventoryItems: [],
        selectedDesiredItem: null,
        inventoryItems: [],
        desiredItems: [],
        isLoading: !0,
        isUpgrading: !1,
        errorMessage: null
    }),
    computed: {
        displayedItems() {
            return "inventory" === this.activeTab ? this.inventoryItems : this.desiredItems
        },
        canUpgrade() {
            return this.selectedInventoryItems.length > 0 && null !== this.selectedDesiredItem
        },
        inventoryItemPrice() {
            return 0 === this.selectedInventoryItems.length ? 0 : this.selectedInventoryItems.reduce(( (e, t) => e + this.inventoryItems[t].price), 0)
        },
        desiredItemPrice() {
            return null !== this.selectedDesiredItem ? this.desiredItems[this.selectedDesiredItem].price : 0
        },
        selectedItemImage() {
            return null !== this.selectedDesiredItem ? this.desiredItems[this.selectedDesiredItem].image : null
        },
        currentPercentage() {
            if (!this.canUpgrade)
                return 0;
            const e = this.inventoryItemPrice
                , t = this.desiredItemPrice;
            if (0 === e || 0 === t)
                return 0;
            let a = 90 / (t / e);
            return a = Math.min(a, 75),
                a = Math.max(a, .001),
                a
        },
        calculatedPrize() {
            return this.desiredItemPrice
        }
    },
    methods: {
        formatPrice: e => e.toFixed(2),
        findClosestDesiredItem(e) {
            const t = [...this.desiredItems].sort(( (e, t) => e.price - t.price))
                , a = t.find((t => t.price >= e));
            return !a && t.length > 0 ? t[t.length - 1] : a
        },
        async fetchInventoryItems() {
            try {
                const e = await axios$1.get("/api/load_open_story.php?showavailable=1", {
                    withCredentials: !0
                });
                this.inventoryItems = e.data.map((e => ({
                    id: e.id,
                    name: e.name,
                    image: e.img,
                    price: parseFloat(e.price),
                    is_black: e.is_black,
                    status: e.status
                })))
            } catch (e) {
                this.errorMessage = "Failed to load inventory items. Please try again."
            }
        },
        async fetchDesiredItems() {
            try {
                const e = await axios$1.get("/api/upgrade_list.php", {
                    withCredentials: !0
                });
                this.desiredItems = e.data.map((e => ({
                    id: e.id || e.name,
                    name: e.name,
                    image: e.img,
                    price: parseFloat(e.price),
                    is_black: e.is_black
                })))
            } catch (e) {
                this.errorMessage = "Failed to load desired items. Please try again."
            }
        },
        selectMultiplier(e) {
            if (!this.isAnimating && (this.selectedMultiplier = e,
            this.selectedInventoryItems.length > 0 && this.desiredItems.length > 0)) {
                const t = this.inventoryItemPrice;
                let a;
                a = t * e;
                const s = this.findClosestDesiredItem(a);
                if (s) {
                    const e = this.desiredItems.findIndex((e => e.id === s.id && e.price === s.price));
                    this.setActiveTab("desired"),
                        this.selectedDesiredItem = e,
                        this.updateValues()
                }
            }
        },
        setActiveTab(e) {
            this.isAnimating || (this.activeTab = e,
                this.updateValues())
        },
        selectItem(e) {
            if (!this.isAnimating) {
                if ("inventory" === this.activeTab) {
                    const t = this.selectedInventoryItems.indexOf(e);
                    -1 === t ? this.selectedInventoryItems.push(e) : this.selectedInventoryItems.splice(t, 1)
                } else
                    this.selectedDesiredItem = this.selectedDesiredItem === e ? null : e;
                this.updateValues()
            }
        },
        updateValues() {
            this.$emit("update-percentage", this.currentPercentage),
                this.$emit("update-bet", this.inventoryItemPrice),
                this.$emit("update-prize", this.calculatedPrize),
                this.$emit("update-selected-image", this.selectedItemImage)
        },
        async performUpgrade() {
            var e, t;
            if (!this.canUpgrade || this.isUpgrading || this.isAnimating)
                return;
            this.errorMessage = null,
                this.isUpgrading = !0;
            const a = this.selectedInventoryItems.map((e => this.inventoryItems[e]))
                , s = this.desiredItems[this.selectedDesiredItem];
            try {
                const e = await axios$1.post("/api/upgrade.php", {
                    in: a.map((e => ({
                        id: e.id,
                        name: e.name,
                        price: e.price
                    }))),
                    out: {
                        id: s.id,
                        name: s.name,
                        price: s.price
                    }
                }, {
                    withCredentials: !0
                });
                "good" === e.data.status ? this.$emit("start-animation", !0, a, e.data) : (this.errorMessage = e.data.error || "Failed to perform upgrade",
                    this.isUpgrading = !1)
            } catch (i) {
                this.errorMessage = (null == (t = null == (e = i.response) ? void 0 : e.data) ? void 0 : t.error) || "Failed to perform upgrade",
                    this.isUpgrading = !1
            }
        },
        async refreshInventory() {
            this.isLoading = !0;
            try {
                await this.fetchInventoryItems(),
                    this.selectedInventoryItems = [],
                    this.selectedDesiredItem = null,
                    this.selectedMultiplier = null,
                    this.activeTab = "inventory",
                    this.errorMessage = null,
                    this.isUpgrading = !1,
                    this.updateValues()
            } catch (e) {
                this.errorMessage = "Failed to refresh inventory. Please reload the page."
            } finally {
                this.isLoading = !1
            }
        }
    },
    watch: {
        canUpgrade: {
            immediate: !0,
            handler() {
                this.updateValues()
            }
        },
        selectedDesiredItem: {
            handler() {
                this.updateValues()
            }
        }
    },
    async mounted() {
        try {
            await Promise.all([this.fetchInventoryItems(), this.fetchDesiredItems()])
        } catch (e) {
            this.errorMessage = "Failed to load items. Please try again."
        } finally {
            this.isLoading = !1
        }
        this.updateValues()
    }
}
    , _hoisted_1$c = {
    class: "items-container"
}
    , _hoisted_2$b = {
    key: 0,
    class: "error-message"
}
    , _hoisted_3$a = {
    class: "tabs"
}
    , _hoisted_4$a = ["onClick"]
    , _hoisted_5$a = {
    class: "text"
}
    , _hoisted_6$a = {
    key: 0,
    class: "button-loader"
}
    , _hoisted_7$a = {
    key: 1,
    class: "label"
}
    , _hoisted_8$9 = {
    class: "tabs2"
}
    , _hoisted_9$9 = {
    key: 1,
    class: "loading"
}
    , _hoisted_10$8 = {
    key: 2,
    class: "items-grid"
}
    , _hoisted_11$8 = ["onClick"]
    , _hoisted_12$8 = ["src"]
    , _hoisted_13$8 = {
    class: "hint"
}
    , _hoisted_14$7 = {
    class: "coin"
}
    , _hoisted_15$6 = {
    class: "title"
}
    , _hoisted_16$4 = {
    key: 0,
    class: "checkmark"
}
    , _hoisted_17$3 = {
    key: 1,
    class: "checkmark"
};
function _sfc_render$8(e, t, a, s, i, r) {
    const o = resolveComponent("Coin");
    return openBlock(),
        createElementBlock("div", _hoisted_1$c, [i.errorMessage ? (openBlock(),
            createElementBlock("div", _hoisted_2$b, [createTextVNode(toDisplayString(i.errorMessage) + " ", 1), createBaseVNode("span", {
                class: "error-close",
                onClick: t[0] || (t[0] = e => i.errorMessage = null)
            }, "×")])) : createCommentVNode("", !0), createBaseVNode("div", _hoisted_3$a, [(openBlock(!0),
            createElementBlock(Fragment, null, renderList(i.multiplierOptions, ( (e, t) => (openBlock(),
                createElementBlock("div", {
                    key: t,
                    class: normalizeClass(["tab-segment", {
                        active: i.selectedMultiplier === e.value,
                        disabled: a.isAnimating
                    }]),
                    onClick: t => r.selectMultiplier(e.value)
                }, [createBaseVNode("div", _hoisted_5$a, toDisplayString(e.label), 1)], 10, _hoisted_4$a)))), 128))]), createBaseVNode("div", {
            class: normalizeClass(["button", {
                "button-active": r.canUpgrade && !i.isUpgrading && !a.isAnimating,
                "button-disabled": i.isUpgrading || a.isAnimating
            }]),
            onClick: t[1] || (t[1] = (...e) => r.performUpgrade && r.performUpgrade(...e))
        }, [i.isUpgrading ? (openBlock(),
            createElementBlock("div", _hoisted_6$a)) : (openBlock(),
            createElementBlock("div", _hoisted_7$a, "Upgrade"))], 2), createBaseVNode("div", _hoisted_8$9, [createBaseVNode("div", {
            class: normalizeClass(["tab-segment", {
                active: "inventory" === i.activeTab,
                disabled: a.isAnimating
            }]),
            onClick: t[2] || (t[2] = e => r.setActiveTab("inventory"))
        }, t[4] || (t[4] = [createBaseVNode("div", {
            class: "text"
        }, "Your inventory", -1)]), 2), createBaseVNode("div", {
            class: normalizeClass(["tab-segment", {
                active: "desired" === i.activeTab,
                disabled: a.isAnimating
            }]),
            onClick: t[3] || (t[3] = e => r.setActiveTab("desired"))
        }, t[5] || (t[5] = [createBaseVNode("div", {
            class: "text"
        }, "Desired gift", -1)]), 2)]), i.isLoading ? (openBlock(),
            createElementBlock("div", _hoisted_9$9, t[6] || (t[6] = [createBaseVNode("div", {
                class: "loading-spinner"
            }, null, -1), createBaseVNode("div", {
                class: "loading-text"
            }, "Loading items...", -1)]))) : (openBlock(),
            createElementBlock("div", _hoisted_10$8, [(openBlock(!0),
                createElementBlock(Fragment, null, renderList(r.displayedItems, ( (e, s) => (openBlock(),
                    createElementBlock("div", {
                        key: s,
                        class: normalizeClass(["item-tab", {
                            selected: "inventory" === i.activeTab && i.selectedInventoryItems.includes(s) || "desired" === i.activeTab && i.selectedDesiredItem === s,
                            faded: "desired" === i.activeTab && null !== i.selectedDesiredItem && i.selectedDesiredItem !== s,
                            black_backdrop: !0 === e.is_black,
                            disabled: a.isAnimating
                        }]),
                        onClick: e => r.selectItem(s)
                    }, [createBaseVNode("img", {
                        src: e.image,
                        alt: "Item",
                        class: "item-image"
                    }, null, 8, _hoisted_12$8), createBaseVNode("div", _hoisted_13$8, [createBaseVNode("div", _hoisted_14$7, [createVNode(o, {
                        size: "small"
                    })]), createBaseVNode("div", _hoisted_15$6, toDisplayString(r.formatPrice(e.price)), 1)]), "inventory" === i.activeTab && i.selectedInventoryItems.includes(s) ? (openBlock(),
                        createElementBlock("div", _hoisted_16$4, t[7] || (t[7] = [createBaseVNode("svg", {
                            xmlns: "http://www.w3.org/2000/svg",
                            width: "16",
                            height: "16",
                            viewBox: "0 0 16 16",
                            fill: "none"
                        }, [createBaseVNode("path", {
                            d: "M4.66634 8.00016L7.96617 11.3L15.0378 4.229M1.36621 8.03369L4.66604 11.3335M11.737 4.26253L8.2015 7.79807",
                            stroke: "#0098EA",
                            "stroke-linecap": "round",
                            "stroke-linejoin": "round"
                        })], -1)]))) : createCommentVNode("", !0), "desired" === i.activeTab && i.selectedDesiredItem === s ? (openBlock(),
                        createElementBlock("div", _hoisted_17$3, t[8] || (t[8] = [createBaseVNode("svg", {
                            xmlns: "http://www.w3.org/2000/svg",
                            width: "16",
                            height: "16",
                            viewBox: "0 0 16 16",
                            fill: "none"
                        }, [createBaseVNode("path", {
                            d: "M4.66634 8.00016L7.96617 11.3L15.0378 4.229M1.36621 8.03369L4.66604 11.3335M11.737 4.26253L8.2015 7.79807",
                            stroke: "#0098EA",
                            "stroke-linecap": "round",
                            "stroke-linejoin": "round"
                        })], -1)]))) : createCommentVNode("", !0)], 10, _hoisted_11$8)))), 128))]))])
}
const Items = _export_sfc$1(_sfc_main$c, [["render", _sfc_render$8], ["__scopeId", "data-v-10f5bf62"]])
    , ModalUpgrade_vue_vue_type_style_index_0_scoped_acd98d1a_lang = ""
    , _hoisted_1$b = {
    class: "modal"
}
    , _hoisted_2$a = {
    key: 0,
    class: "win-container"
}
    , _hoisted_3$9 = {
    class: "prize-showcase"
}
    , _hoisted_4$9 = {
    class: "lights-container"
}
    , _hoisted_5$9 = ["src"]
    , _hoisted_6$9 = {
    key: 0,
    class: "prize-placeholder"
}
    , _hoisted_7$9 = ["src"]
    , _hoisted_8$8 = {
    key: 1,
    class: "prize-image error-image",
    src: "/images/placeholder.png",
    alt: "Prize Item Placeholder"
}
    , _hoisted_9$8 = {
    key: 2,
    class: "coins-container"
}
    , _hoisted_10$7 = {
    class: "text"
}
    , _hoisted_11$7 = {
    class: "item-name"
}
    , _hoisted_12$7 = {
    class: "hint"
}
    , _hoisted_13$7 = {
    class: "coin-wrapper"
}
    , _hoisted_14$6 = {
    class: "price"
}
    , _hoisted_15$5 = {
    key: 0,
    class: "api-error"
}
    , _hoisted_16$3 = {
    class: "action-buttons"
}
    , _hoisted_17$2 = ["disabled"]
    , _hoisted_18$2 = ["disabled"]
    , _hoisted_19$2 = {
    class: "price-tag"
}
    , _hoisted_20$1 = {
    class: "price-value"
}
    , _hoisted_21$1 = {
    class: "coin-small"
}
    , _hoisted_22$1 = {
    key: 1,
    class: "unlucky-container"
}
    , _sfc_main$b = {
    __name: "ModalUpgrade",
    props: {
        isOpen: {
            type: Boolean,
            default: !1
        },
        isWin: {
            type: Boolean,
            default: !1
        },
        prize: {
            type: Object,
            default: () => null
        },
        isBlackCase: {
            type: Boolean,
            default: !1
        }
    },
    emits: ["close", "reset"],
    setup(e, {emit: t}) {
        const a = e
            , s = inject("userStore")
            , i = t
            , r = ref(!1)
            , o = ref(!1)
            , n = ref(!1)
            , l = ref(!1)
            , c = ref([])
            , d = ref("")
            , h = () => {
                r.value || o.value || (r.value = !0,
                    setTimeout(( () => {
                            r.value = !1,
                                i("reset"),
                                i("close")
                        }
                    ), 1500))
            }
            , p = async () => {
                if (!r.value && !o.value)
                    if (a.prize && a.prize.id)
                        try {
                            o.value = !0,
                                d.value = "";
                            const e = 15;
                            c.value = Array(e).fill().map(( (e, t) => ({
                                id: t,
                                left: Math.floor(80 * Math.random()) + 10 + "%",
                                delay: .5 * Math.random(),
                                size: Math.floor(10 * Math.random()) + 16 + "px",
                                speed: .5 * Math.random() + 1.2 + "s"
                            })));
                            const t = await axios$1.get(`/api/change_drop_status.php?id=${a.prize.id}&status=sell`, {
                                withCredentials: !0
                            });
                            if (t.data.error)
                                return d.value = t.data.error || "Error selling item",
                                    void (o.value = !1);
                            if (!0 === t.data.status && t.data.price) {
                                const e = parseFloat(t.data.price);
                                s && !isNaN(e) && s.addToBalance(e)
                            }
                            setTimeout(( () => {
                                    o.value = !1,
                                        i("reset"),
                                        i("close")
                                }
                            ), 1500)
                        } catch (e) {
                            d.value = e.message || "Error selling item. Please try again.",
                                o.value = !1
                        }
                    else
                        d.value = "No valid prize to sell"
            }
            , u = () => {
                i("reset"),
                    i("close")
            }
            , m = () => {
                i("reset"),
                    i("close")
            }
        ;
        return (t, a) => (openBlock(),
            createBlock(Transition, {
                name: "modal-fade"
            }, {
                default: withCtx(( () => {
                        var t, s, i, f;
                        return [e.isOpen ? (openBlock(),
                            createElementBlock("div", {
                                key: 0,
                                class: "modal-overlay",
                                onClick: withModifiers(m, ["self"])
                            }, [createBaseVNode("div", _hoisted_1$b, [e.isWin ? (openBlock(),
                                createElementBlock("div", _hoisted_2$a, [createBaseVNode("div", _hoisted_3$9, [createBaseVNode("div", _hoisted_4$9, [createBaseVNode("img", {
                                    class: normalizeClass(["lights", {
                                        "black-lights": e.isBlackCase
                                    }]),
                                    src: e.isBlackCase ? "/images/effects/black_backdrop.svg" : "/images/effects/lights.png",
                                    alt: "Background lights"
                                }, null, 10, _hoisted_5$9), a[2] || (a[2] = createBaseVNode("img", {
                                    class: "stars stars-animation",
                                    src: "/images/effects/stars.png",
                                    alt: "Stars"
                                }, null, -1))]), n.value || l.value ? createCommentVNode("", !0) : (openBlock(),
                                    createElementBlock("div", _hoisted_6$9, a[3] || (a[3] = [createBaseVNode("div", {
                                        class: "loading-spinner"
                                    }, null, -1)]))), createBaseVNode("img", {
                                    class: normalizeClass(["prize-image", {
                                        "keep-it-animation": r.value,
                                        "quick-sell-animation": o.value,
                                        loaded: n.value,
                                        hidden: !n.value && !l.value
                                    }]),
                                    src: (null == (t = e.prize) ? void 0 : t.img) || "/images/placeholder.png",
                                    alt: "Prize Item",
                                    onLoad: a[0] || (a[0] = e => n.value = !0),
                                    onError: a[1] || (a[1] = e => l.value = !0)
                                }, null, 42, _hoisted_7$9), l.value ? (openBlock(),
                                    createElementBlock("img", _hoisted_8$8)) : createCommentVNode("", !0), o.value ? (openBlock(),
                                    createElementBlock("div", _hoisted_9$8, [(openBlock(!0),
                                        createElementBlock(Fragment, null, renderList(c.value, (e => (openBlock(),
                                            createElementBlock("div", {
                                                key: e.id,
                                                class: "flying-coin",
                                                style: normalizeStyle({
                                                    left: e.left,
                                                    animationDelay: e.delay + "s",
                                                    width: e.size,
                                                    height: e.size,
                                                    animationDuration: e.speed
                                                })
                                            }, [createVNode(Coin, {
                                                size: "small"
                                            })], 4)))), 128))])) : createCommentVNode("", !0)]), createBaseVNode("div", _hoisted_10$7, [createBaseVNode("div", _hoisted_11$7, toDisplayString((null == (s = e.prize) ? void 0 : s.name) || "Prize Item"), 1), createBaseVNode("div", _hoisted_12$7, [createBaseVNode("div", _hoisted_13$7, [createVNode(Coin, {
                                    size: "small"
                                })]), createBaseVNode("div", _hoisted_14$6, toDisplayString((null == (i = e.prize) ? void 0 : i.price) || "0"), 1)])]), d.value ? (openBlock(),
                                    createElementBlock("div", _hoisted_15$5, toDisplayString(d.value), 1)) : createCommentVNode("", !0), createBaseVNode("div", _hoisted_16$3, [createBaseVNode("button", {
                                    class: "spin-button",
                                    onClick: h,
                                    disabled: r.value || o.value
                                }, a[4] || (a[4] = [createBaseVNode("div", {
                                    class: "button-label"
                                }, "Keep it", -1)]), 8, _hoisted_17$2), createBaseVNode("button", {
                                    class: "quick-spin-button",
                                    onClick: p,
                                    disabled: r.value || o.value
                                }, [a[5] || (a[5] = createBaseVNode("div", {
                                    class: "button-label"
                                }, "Quick Sell", -1)), createBaseVNode("div", _hoisted_19$2, [createBaseVNode("div", _hoisted_20$1, toDisplayString((null == (f = e.prize) ? void 0 : f.price) || "0"), 1), createBaseVNode("div", _hoisted_21$1, [createVNode(Coin, {
                                    size: "small"
                                })])])], 8, _hoisted_18$2)])])) : (openBlock(),
                                createElementBlock("div", _hoisted_22$1, [a[7] || (a[7] = createBaseVNode("img", {
                                    class: "unlucky-image",
                                    src: "/images/effects/unlucky.png",
                                    alt: "Unlucky"
                                }, null, -1)), a[8] || (a[8] = createBaseVNode("div", {
                                    class: "unlucky-text"
                                }, [createTextVNode(" It was not possible to improve the gift. "), createBaseVNode("br"), createTextVNode(" Don't be disappointed, you will be lucky next time. ")], -1)), createBaseVNode("div", {
                                    class: "action-buttons"
                                }, [createBaseVNode("button", {
                                    class: "spin-button full-width-button",
                                    onClick: u
                                }, a[6] || (a[6] = [createBaseVNode("div", {
                                    class: "button-label"
                                }, "Try Again", -1)]))])])), createBaseVNode("button", {
                                class: "close-button",
                                onClick: m
                            }, a[9] || (a[9] = [createBaseVNode("svg", {
                                width: "24",
                                height: "24",
                                viewBox: "0 0 24 24",
                                fill: "none",
                                xmlns: "http://www.w3.org/2000/svg"
                            }, [createBaseVNode("path", {
                                d: "M18 6L6 18M6 6L18 18",
                                stroke: "white",
                                "stroke-width": "2",
                                "stroke-linecap": "round",
                                "stroke-linejoin": "round"
                            })], -1)]))])])) : createCommentVNode("", !0)]
                    }
                )),
                _: 1
            }))
    }
}
    , ModalUpgrade = _export_sfc$1(_sfc_main$b, [["__scopeId", "data-v-acd98d1a"]])
    , Upgrades_vue_vue_type_style_index_0_scoped_e0719e7a_lang = ""
    , _sfc_main$a = defineComponent({
    name: "UpgradesPage",
    components: {
        UserHeader: UserHeader,
        Circle: Circle,
        LiveDrop: LiveDrop,
        Items: Items,
        ModalUpgrade: ModalUpgrade
    },
    setup() {
        const e = ref(0)
            , t = ref(0)
            , a = ref(0)
            , s = ref(!1)
            , i = ref(null)
            , r = ref([])
            , o = ref(null)
            , n = ref(!1)
            , l = ref(!1)
            , c = ref(null)
            , d = ref(!1)
            , h = ref(null);
        return {
            percentage: e,
            betAmount: t,
            desiredPrize: a,
            isAnimating: s,
            selectedItemImage: i,
            selectedItems: r,
            showResultModal: n,
            upgradeWin: l,
            winningPrize: c,
            isBlackCase: d,
            upgradeResult: o,
            itemsComponent: h,
            updatePercentage: t => {
                e.value = t
            }
            ,
            updateBetAmount: e => {
                t.value = e
            }
            ,
            updateDesiredPrize: e => {
                a.value = e
            }
            ,
            updateSelectedImage: e => {
                i.value = e
            }
            ,
            startAnimation: (e, t=[], a=null) => {
                e ? (r.value = [...t],
                    s.value = !0,
                a && (l.value = a.is_win,
                    o.value = a.is_win,
                a.is_win && a.win && a.win.length > 0 && (c.value = a.win[0],
                    d.value = !0 === a.win[0].is_black))) : (s.value = !1,
                    o.value = null)
            }
            ,
            handleUpgradeResult: e => {
                setTimeout(( () => {
                        n.value = !0
                    }
                ), 2e3),
                    setTimeout(( () => {
                            s.value = !1
                        }
                    ), 3e3)
            }
            ,
            closeModal: () => {
                n.value = !1
            }
            ,
            resetUpgrade: () => {
                s.value = !1,
                    r.value = [],
                    n.value = !1,
                    l.value = !1,
                    o.value = null,
                    c.value = null,
                    d.value = !1,
                h.value && h.value.refreshInventory()
            }
        }
    }
})
    , _hoisted_1$a = {
    class: "upgrade-page"
}
    , _hoisted_2$9 = {
    class: "upgrade-content"
};
function _sfc_render$7(e, t, a, s, i, r) {
    const o = resolveComponent("UserHeader")
        , n = resolveComponent("LiveDrop")
        , l = resolveComponent("Circle")
        , c = resolveComponent("Items")
        , d = resolveComponent("ModalUpgrade");
    return openBlock(),
        createElementBlock("div", _hoisted_1$a, [createVNode(o), createVNode(n), createBaseVNode("div", _hoisted_2$9, [createVNode(l, {
            percentage: e.percentage,
            "bet-amount": e.betAmount,
            "desired-prize": e.desiredPrize,
            "is-animating": e.isAnimating,
            "selected-item-image": e.selectedItemImage,
            "upgrade-result": e.upgradeResult,
            onUpgradeResult: e.handleUpgradeResult
        }, null, 8, ["percentage", "bet-amount", "desired-prize", "is-animating", "selected-item-image", "upgrade-result", "onUpgradeResult"]), t[0] || (t[0] = createBaseVNode("div", {
            class: "section-title"
        }, "Choose a gift for upgrade", -1)), createVNode(c, {
            ref: "itemsComponent",
            "is-animating": e.isAnimating,
            onUpdatePercentage: e.updatePercentage,
            onUpdateBet: e.updateBetAmount,
            onUpdatePrize: e.updateDesiredPrize,
            onUpdateSelectedImage: e.updateSelectedImage,
            onStartAnimation: e.startAnimation
        }, null, 8, ["is-animating", "onUpdatePercentage", "onUpdateBet", "onUpdatePrize", "onUpdateSelectedImage", "onStartAnimation"]), createVNode(d, {
            "is-open": e.showResultModal,
            "is-win": e.upgradeWin,
            prize: e.winningPrize,
            "is-black-case": e.isBlackCase,
            onClose: e.closeModal,
            onReset: e.resetUpgrade
        }, null, 8, ["is-open", "is-win", "prize", "is-black-case", "onClose", "onReset"])])])
}
const UpgradesPage = _export_sfc$1(_sfc_main$a, [["render", _sfc_render$7], ["__scopeId", "data-v-e0719e7a"]])
    , ModalBet_vue_vue_type_style_index_0_scoped_a4c94f6a_lang = ""
    , _sfc_main$9 = defineComponent({
    name: "ModalBet",
    components: {
        Coin: Coin
    },
    props: {
        isOpen: {
            type: Boolean,
            default: !1
        }
    },
    emits: ["close", "open-cases", "make-bet"],
    setup(e, {emit: t}) {
        const a = ref([])
            , s = ref([])
            , i = ref(!0)
            , r = ref(null)
            , o = ref(null)
            , n = ref(!0)
            , l = ref(!1);
        let c = 0;
        const d = computed(( () => s.value.reduce(( (e, t) => e + a.value[t].price), 0)))
            , h = async (e=!0) => {
                e ? (i.value = !0,
                    c = 0,
                    a.value = [],
                    n.value = !0) : l.value = !0,
                    r.value = null;
                try {
                    let e = "/api/load_open_story.php?showavailable=1";
                    c > 0 && (e += `&page=${c}`);
                    const t = await axios$1.get(e);
                    if (Array.isArray(t.data)) {
                        const e = t.data.map((e => ({
                            id: e.id,
                            id_gen: e.id,
                            name: e.name,
                            img: e.img,
                            price: parseFloat(e.price),
                            is_black: !0 === e.is_black,
                            status: e.status
                        }))).filter((e => 0 === e.status));
                        a.value = [...a.value, ...e],
                            c += 18,
                            n.value = e.length >= 18
                    } else
                        r.value = "Failed to load items: Invalid response format"
                } catch (t) {
                    r.value = "Failed to load inventory. Please try again."
                } finally {
                    i.value = !1,
                        l.value = !1
                }
            }
            , p = e => {
                if (!Array.isArray(e) || 0 === e.length)
                    return;
                const t = e.map((e => String(e).toLowerCase()));
                a.value = a.value.filter((e => !t.includes(String(e.id_gen).toLowerCase()))),
                    s.value = s.value.filter((e => {
                            var s;
                            return !t.includes(String(null == (s = a.value[e]) ? void 0 : s.id_gen).toLowerCase())
                        }
                    ))
            }
            , u = () => {
                t("close")
            }
            , m = e => {
                o.value = e,
                    setTimeout(( () => {
                            o.value = null
                        }
                    ), 5e3)
            }
            , f = () => {
                o.value = null
            }
        ;
        return watch(( () => e.isOpen), (e => {
                e ? (h(!0),
                    f()) : (s.value = [],
                    f())
            }
        ), {
            immediate: !0
        }),
            {
                inventoryItems: a,
                selectedItems: s,
                isLoading: i,
                isLoadingMore: l,
                hasMore: n,
                error: r,
                betError: o,
                totalPrice: d,
                toggleItemSelection: e => {
                    const t = s.value.indexOf(e);
                    -1 === t ? s.value.push(e) : s.value.splice(t, 1)
                }
                ,
                selectAllItems: () => {
                    0 !== a.value.length && (s.value.length === a.value.length ? s.value = [] : s.value = Array.from({
                        length: a.value.length
                    }, ( (e, t) => t)))
                }
                ,
                formatPrice: e => e.toFixed(2),
                closeModal: u,
                openCases: () => {
                    t("open-cases"),
                        u()
                }
                ,
                makeBet: () => {
                    if (0 === s.value.length)
                        return;
                    f();
                    const e = s.value.map((e => a.value[e]))
                        , i = e.filter((e => e && e.id));
                    0 !== i.length ? (i.length,
                        e.length,
                        t("make-bet", {
                            items: i,
                            totalPrice: i.reduce(( (e, t) => e + t.price), 0),
                            itemIds: i.map((e => e.id)),
                            onSuccess: () => {
                                p(i.map((e => e.id))),
                                    u()
                            }
                            ,
                            onError: e => {
                                m(e)
                            }
                        })) : m("No valid items selected")
                }
                ,
                removeItemsFromInventory: p,
                showBetError: m,
                clearBetError: f,
                loadMoreItems: async () => {
                    !l.value && n.value && await h(!1)
                }
            }
    }
})
    , _hoisted_1$9 = {
    class: "modal"
}
    , _hoisted_2$8 = {
    class: "error-content"
}
    , _hoisted_3$8 = {
    class: "error-message"
}
    , _hoisted_4$8 = {
    class: "frame-2087328998"
}
    , _hoisted_5$8 = {
    class: "frame-2087328927"
}
    , _hoisted_6$8 = {
    key: 0,
    class: "frame-2087328992"
}
    , _hoisted_7$8 = ["onClick"]
    , _hoisted_8$7 = ["src", "alt"]
    , _hoisted_9$7 = {
    class: "hint"
}
    , _hoisted_10$6 = {
    class: "coin"
}
    , _hoisted_11$6 = {
    class: "title"
}
    , _hoisted_12$6 = {
    key: 0,
    class: "checkmark",
    xmlns: "http://www.w3.org/2000/svg",
    width: "16",
    height: "16",
    viewBox: "0 0 16 16",
    fill: "none"
}
    , _hoisted_13$6 = {
    key: 1,
    class: "frame-2087328435"
}
    , _hoisted_14$5 = {
    key: 2,
    class: "pagination-loading"
}
    , _hoisted_15$4 = {
    key: 3,
    class: "load-more-container"
}
    , _hoisted_16$2 = {
    key: 4,
    class: "end-of-list"
}
    , _hoisted_17$1 = {
    key: 0,
    class: "tab-segment"
}
    , _hoisted_18$1 = {
    class: "text"
}
    , _hoisted_19$1 = {
    class: "coin2"
};
function _sfc_render$6(e, t, a, s, i, r) {
    const o = resolveComponent("Coin");
    return openBlock(),
        createBlock(Transition, {
            name: "modal-fade"
        }, {
            default: withCtx(( () => [e.isOpen ? (openBlock(),
                createElementBlock("div", {
                    key: 0,
                    class: "modal-overlay",
                    onClick: t[7] || (t[7] = withModifiers(( (...t) => e.closeModal && e.closeModal(...t)), ["self"]))
                }, [createBaseVNode("div", _hoisted_1$9, [t[20] || (t[20] = createBaseVNode("div", {
                    class: "frame-2087328895"
                }, [createBaseVNode("div", {
                    class: "make-a-bet"
                }, "Make a bet"), createBaseVNode("div", {
                    class: "choose-one-or-more-gifts-from-your-inventory"
                }, " Choose one or more gifts from your inventory ")], -1)), createBaseVNode("div", {
                    class: "icon",
                    onClick: t[0] || (t[0] = (...t) => e.closeModal && e.closeModal(...t))
                }, t[8] || (t[8] = [createBaseVNode("svg", {
                    width: "24",
                    height: "24",
                    viewBox: "0 0 24 24",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, [createBaseVNode("path", {
                    d: "M18 6L6 18M6 6L18 18",
                    stroke: "white",
                    "stroke-width": "2",
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round"
                })], -1)])), createVNode(Transition, {
                    name: "error-fade"
                }, {
                    default: withCtx(( () => [e.betError ? (openBlock(),
                        createElementBlock("div", {
                            key: 0,
                            class: "error-banner",
                            onClick: t[2] || (t[2] = (...t) => e.clearBetError && e.clearBetError(...t))
                        }, [createBaseVNode("div", _hoisted_2$8, [t[10] || (t[10] = createBaseVNode("div", {
                            class: "error-icon"
                        }, [createBaseVNode("svg", {
                            width: "20",
                            height: "20",
                            viewBox: "0 0 20 20",
                            fill: "none",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, [createBaseVNode("path", {
                            d: "M10 18C14.4183 18 18 14.4183 18 10C18 5.58172 14.4183 2 10 2C5.58172 2 2 5.58172 2 10C2 14.4183 5.58172 18 10 18Z",
                            stroke: "currentColor",
                            "stroke-width": "1.5",
                            "stroke-linecap": "round",
                            "stroke-linejoin": "round"
                        }), createBaseVNode("path", {
                            d: "M10 6V10",
                            stroke: "currentColor",
                            "stroke-width": "1.5",
                            "stroke-linecap": "round",
                            "stroke-linejoin": "round"
                        }), createBaseVNode("path", {
                            d: "M10 14H10.01",
                            stroke: "currentColor",
                            "stroke-width": "1.5",
                            "stroke-linecap": "round",
                            "stroke-linejoin": "round"
                        })])], -1)), createBaseVNode("div", _hoisted_3$8, toDisplayString(e.betError), 1), createBaseVNode("div", {
                            class: "error-close",
                            onClick: t[1] || (t[1] = withModifiers(( (...t) => e.clearBetError && e.clearBetError(...t)), ["stop"]))
                        }, t[9] || (t[9] = [createBaseVNode("svg", {
                            width: "16",
                            height: "16",
                            viewBox: "0 0 16 16",
                            fill: "none",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, [createBaseVNode("path", {
                            d: "M12 4L4 12M4 4L12 12",
                            stroke: "currentColor",
                            "stroke-width": "1.5",
                            "stroke-linecap": "round",
                            "stroke-linejoin": "round"
                        })], -1)]))])])) : createCommentVNode("", !0)])),
                    _: 1
                }), createBaseVNode("div", _hoisted_4$8, [createBaseVNode("div", _hoisted_5$8, [t[12] || (t[12] = createBaseVNode("div", {
                    class: "inventory"
                }, "Inventory:", -1)), createBaseVNode("div", {
                    class: normalizeClass(["frame-2087328950", {
                        disabled: 0 === e.inventoryItems.length
                    }])
                }, [createBaseVNode("div", {
                    class: normalizeClass(["button select-all-button", {
                        disabled: 0 === e.inventoryItems.length
                    }]),
                    onClick: t[3] || (t[3] = (...t) => e.selectAllItems && e.selectAllItems(...t))
                }, t[11] || (t[11] = [createBaseVNode("div", {
                    class: "label"
                }, "Select all", -1)]), 2)], 2)]), e.inventoryItems.length > 0 ? (openBlock(),
                    createElementBlock("div", _hoisted_6$8, [(openBlock(!0),
                        createElementBlock(Fragment, null, renderList(e.inventoryItems, ( (a, s) => (openBlock(),
                            createElementBlock("div", {
                                key: a.id,
                                class: normalizeClass(["deposit", {
                                    selected: e.selectedItems.includes(s),
                                    black_backdrop: a.is_black
                                }]),
                                onClick: t => e.toggleItemSelection(s)
                            }, [createBaseVNode("img", {
                                class: "ezgif-8597-d-9-f-70-a-1286-1",
                                src: a.img,
                                alt: a.name
                            }, null, 8, _hoisted_8$7), createBaseVNode("div", _hoisted_9$7, [createBaseVNode("div", _hoisted_10$6, [createVNode(o, {
                                size: "small"
                            })]), createBaseVNode("div", _hoisted_11$6, toDisplayString(e.formatPrice(a.price)), 1)]), e.selectedItems.includes(s) ? (openBlock(),
                                createElementBlock("svg", _hoisted_12$6, t[13] || (t[13] = [createBaseVNode("path", {
                                    d: "M4.66634 8.00016L7.96617 11.3L15.0378 4.229M1.36621 8.03369L4.66604 11.3335M11.737 4.26253L8.2015 7.79807",
                                    stroke: "#0098EA",
                                    "stroke-linecap": "round",
                                    "stroke-linejoin": "round"
                                }, null, -1)]))) : createCommentVNode("", !0)], 10, _hoisted_7$8)))), 128))])) : (openBlock(),
                    createElementBlock("div", _hoisted_13$6, [t[15] || (t[15] = createBaseVNode("div", {
                        class: "iconex-glass-box-2"
                    }, [createBaseVNode("img", {
                        class: "box-2",
                        src: "/images/effects/jackpot-box.png"
                    })], -1)), t[16] || (t[16] = createBaseVNode("div", {
                        class: "label2"
                    }, "Your inventory is empty.", -1)), createBaseVNode("div", {
                        class: "button_mainpage",
                        onClick: t[4] || (t[4] = (...t) => e.openCases && e.openCases(...t))
                    }, t[14] || (t[14] = [createBaseVNode("div", {
                        class: "label"
                    }, "Open cases", -1)]))])), e.isLoadingMore && e.inventoryItems.length > 0 ? (openBlock(),
                    createElementBlock("div", _hoisted_14$5, t[17] || (t[17] = [createBaseVNode("div", {
                        class: "loading-spinner"
                    }, null, -1), createBaseVNode("div", {
                        class: "loading-text"
                    }, "Loading more items...", -1)]))) : createCommentVNode("", !0), !e.isLoadingMore && e.hasMore && e.inventoryItems.length > 0 ? (openBlock(),
                    createElementBlock("div", _hoisted_15$4, [createBaseVNode("button", {
                        class: "load-more-button",
                        onClick: t[5] || (t[5] = (...t) => e.loadMoreItems && e.loadMoreItems(...t))
                    }, t[18] || (t[18] = [createBaseVNode("div", {
                        class: "button-label"
                    }, "Load More", -1)]))])) : createCommentVNode("", !0), !e.hasMore && e.inventoryItems.length > 0 ? (openBlock(),
                    createElementBlock("div", _hoisted_16$2, " You've reached the end of your inventory ")) : createCommentVNode("", !0)]), e.inventoryItems.length > 0 ? (openBlock(),
                    createElementBlock("div", {
                        key: 0,
                        class: normalizeClass(["button2 bet-button", {
                            "button-active": e.selectedItems.length > 0,
                            "button-disabled": 0 === e.selectedItems.length
                        }]),
                        onClick: t[6] || (t[6] = (...t) => e.makeBet && e.makeBet(...t))
                    }, [t[19] || (t[19] = createBaseVNode("div", {
                        class: "label"
                    }, "Make a bet", -1)), e.selectedItems.length > 0 ? (openBlock(),
                        createElementBlock("div", _hoisted_17$1, [createBaseVNode("div", _hoisted_18$1, toDisplayString(e.selectedItems.length) + " gifts worth " + toDisplayString(e.formatPrice(e.totalPrice)), 1), createBaseVNode("div", _hoisted_19$1, [createVNode(o, {
                            size: "small"
                        })])])) : createCommentVNode("", !0)], 2)) : createCommentVNode("", !0)])])) : createCommentVNode("", !0)])),
            _: 1
        })
}
const ModalBet = _export_sfc$1(_sfc_main$9, [["render", _sfc_render$6], ["__scopeId", "data-v-a4c94f6a"]])
    , BetList_vue_vue_type_style_index_0_scoped_cb018db1_lang = ""
    , _sfc_main$8 = defineComponent({
    name: "BetList",
    props: {
        bets: {
            type: Array,
            default: () => []
        },
        totalTickets: {
            type: Number,
            default: 0
        },
        showNextGameMessage: {
            type: Boolean,
            default: !1
        },
        nextGameCountdown: {
            type: Number,
            default: 5
        }
    },
    emits: ["open-bet-modal"],
    setup: (e, {emit: t}) => ({
        colorClasses: [{
            main: "color-red",
            light: "bg-red-light",
            dark: "bg-red",
            text: "text-red"
        }, {
            main: "color-yellow",
            light: "bg-yellow-light",
            dark: "bg-yellow",
            text: "text-yellow"
        }, {
            main: "color-green",
            light: "bg-green-light",
            dark: "bg-green",
            text: "text-green"
        }, {
            main: "color-blue",
            light: "bg-blue-light",
            dark: "bg-blue",
            text: "text-blue"
        }, {
            main: "color-purple",
            light: "bg-purple-light",
            dark: "bg-purple",
            text: "text-purple"
        }, {
            main: "color-orange",
            light: "bg-orange-light",
            dark: "bg-orange",
            text: "text-orange"
        }],
        formatPrice: e => parseFloat(e).toFixed(2),
        formatPercent: e => {
            if (null == e)
                return "0.00%";
            return `${(("string" == typeof e ? parseFloat(e) : e) || 0).toFixed(2)}%`
        }
        ,
        formatCountdown: e => Math.max(0, e).toFixed(2),
        formatUserName: e => {
            if (!e)
                return "User";
            let t = "";
            e.first_name && ("string" == typeof e.first_name ? t = e.first_name : "Buffer" === e.first_name.type && Array.isArray(e.first_name.data) && (t = String.fromCharCode(...e.first_name.data)));
            let a = "";
            return e.last_name && ("string" == typeof e.last_name ? a = e.last_name : "Buffer" === e.last_name.type && Array.isArray(e.last_name.data) && e.last_name.data.length > 0 && (a = String.fromCharCode(...e.last_name.data))),
                a ? `${t} ${a}` : t
        }
        ,
        openBetModal: (e, a) => {
            t("open-bet-modal", e, a)
        }
    })
})
    , _hoisted_1$8 = {
    class: "bet-list"
}
    , _hoisted_2$7 = {
    key: 0,
    class: "empty-list"
}
    , _hoisted_3$7 = {
    key: 1,
    class: "frame-2087328981"
}
    , _hoisted_4$7 = {
    class: "frame-2087328435"
}
    , _hoisted_5$7 = {
    class: "label"
}
    , _hoisted_6$7 = {
    key: 2,
    class: "bet-items"
}
    , _hoisted_7$7 = ["onClick"]
    , _hoisted_8$6 = {
    class: "bet-user"
}
    , _hoisted_9$6 = ["src"]
    , _hoisted_10$5 = {
    class: "user-info"
}
    , _hoisted_11$5 = {
    class: "user-name"
}
    , _hoisted_12$5 = {
    class: "bet-details"
}
    , _hoisted_13$5 = {
    class: "bet-amount"
}
    , _hoisted_14$4 = {
    class: "gift-count"
}
    , _hoisted_15$3 = {
    class: "bet-stats"
}
    , _hoisted_16$1 = {
    class: "chance-text"
};
function _sfc_render$5(e, t, a, s, i, r) {
    return openBlock(),
        createElementBlock("div", _hoisted_1$8, [0 === e.bets.length ? (openBlock(),
            createElementBlock("div", _hoisted_2$7, t[0] || (t[0] = [createBaseVNode("div", {
                class: "users-icon"
            }, [createBaseVNode("img", {
                class: "users-icon",
                src: "/images/effects/jackpot_users.png",
                alt: "Users"
            })], -1), createBaseVNode("div", {
                class: "waiting-message"
            }, " No bids yet. Waiting for a minimum of two users to start the game. ", -1)]))) : e.showNextGameMessage ? (openBlock(),
            createElementBlock("div", _hoisted_3$7, [createBaseVNode("div", _hoisted_4$7, [t[1] || (t[1] = createBaseVNode("div", {
                class: "label"
            }, "Next Game:", -1)), t[2] || (t[2] = createBaseVNode("div", {
                class: "iconex-glass-loading"
            }, [createBaseVNode("img", {
                class: "loading",
                src: "/images/effects/big_loading.png",
                alt: "Loading"
            })], -1)), createBaseVNode("div", _hoisted_5$7, toDisplayString(e.formatCountdown(e.nextGameCountdown)) + "s", 1)])])) : (openBlock(),
            createElementBlock("div", _hoisted_6$7, [(openBlock(!0),
                createElementBlock(Fragment, null, renderList(e.bets, ( (a, s) => {
                        var i;
                        return openBlock(),
                            createElementBlock("div", {
                                key: a.uid,
                                class: normalizeClass(["bet-item", e.colorClasses[s % e.colorClasses.length].main]),
                                onClick: t => e.openBetModal(a, s)
                            }, [createBaseVNode("div", _hoisted_8$6, [createBaseVNode("img", {
                                class: "user-avatar",
                                src: (null == (i = a.user) ? void 0 : i.photo_url) || "/images/effects/default_avatar.png",
                                alt: "User Avatar"
                            }, null, 8, _hoisted_9$6), createBaseVNode("div", _hoisted_10$5, [createBaseVNode("div", _hoisted_11$5, toDisplayString(e.formatUserName(a.user)), 1), createBaseVNode("div", _hoisted_12$5, [createBaseVNode("div", _hoisted_13$5, toDisplayString(e.formatPrice(a.total_amount)), 1), t[3] || (t[3] = createBaseVNode("div", {
                                class: "coin"
                            }, [createBaseVNode("img", {
                                src: "/images/effects/ton_small.svg",
                                alt: "Coin"
                            })], -1)), t[4] || (t[4] = createBaseVNode("div", {
                                class: "separator"
                            }, "•", -1)), createBaseVNode("div", _hoisted_14$4, toDisplayString(a.count) + " gifts", 1)])])]), createBaseVNode("div", _hoisted_15$3, [createBaseVNode("div", {
                                class: normalizeClass(["ticket-range", e.colorClasses[s % e.colorClasses.length].light])
                            }, [createBaseVNode("div", {
                                class: normalizeClass(["range-text", e.colorClasses[s % e.colorClasses.length].text])
                            }, "#" + toDisplayString(a.ticketStart || 1) + "-" + toDisplayString(a.ticketEnd || 1), 3)], 2), createBaseVNode("div", {
                                class: normalizeClass(["win-chance", e.colorClasses[s % e.colorClasses.length].dark])
                            }, [createBaseVNode("div", _hoisted_16$1, toDisplayString(e.formatPercent(a.winChance)), 1)], 2)])], 10, _hoisted_7$7)
                    }
                )), 128))]))])
}
const BetList = _export_sfc$1(_sfc_main$8, [["render", _sfc_render$5], ["__scopeId", "data-v-cb018db1"]])
    , ModalRules_vue_vue_type_style_index_0_scoped_34367add_lang = ""
    , _sfc_main$7 = defineComponent({
    name: "ModalRules",
    props: {
        isOpen: {
            type: Boolean,
            default: !1
        }
    },
    emits: ["close"],
    setup: (e, {emit: t}) => ({
        closeModal: () => {
            t("close")
        }
    })
})
    , _hoisted_1$7 = {
    class: "modal"
};
function _sfc_render$4(e, t, a, s, i, r) {
    return openBlock(),
        createBlock(Transition, {
            name: "modal-fade"
        }, {
            default: withCtx(( () => [e.isOpen ? (openBlock(),
                createElementBlock("div", {
                    key: 0,
                    class: "modal-overlay",
                    onClick: t[1] || (t[1] = withModifiers(( (...t) => e.closeModal && e.closeModal(...t)), ["self"]))
                }, [createBaseVNode("div", _hoisted_1$7, [createBaseVNode("div", {
                    class: "icon",
                    onClick: t[0] || (t[0] = (...t) => e.closeModal && e.closeModal(...t))
                }, t[2] || (t[2] = [createBaseVNode("svg", {
                    width: "24",
                    height: "24",
                    viewBox: "0 0 24 24",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, [createBaseVNode("path", {
                    d: "M18 6L6 18M6 6L18 18",
                    stroke: "white",
                    "stroke-width": "2",
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round"
                })], -1)])), t[3] || (t[3] = createBaseVNode("div", {
                    class: "rules-jackpot"
                }, "Rules Jackpot", -1)), t[4] || (t[4] = createBaseVNode("div", {
                    class: "frame-2087329017"
                }, [createBaseVNode("div", {
                    class: "frame-2087329015"
                }, [createBaseVNode("div", {
                    class: "_12"
                }, ' Select one or more gifts from your inventory and click "Make a bet" '), createBaseVNode("div", {
                    class: "img"
                }, [createBaseVNode("img", {
                    class: "animated-sticker-ezgif-com-gif-maker-1",
                    src: "/images/effects/jackpot_rules1-min.png",
                    alt: "Select gifts"
                })])]), createBaseVNode("div", {
                    class: "frame-2087329016"
                }, [createBaseVNode("div", {
                    class: "_12"
                }, " The game will start as soon as there are at least 2 players "), createBaseVNode("div", {
                    class: "img"
                }, [createBaseVNode("img", {
                    class: "animated-sticker-ezgif-com-gif-maker-12",
                    src: "/images/effects/jackpot_rules2-min.png",
                    alt: "Wait for game"
                })])]), createBaseVNode("div", {
                    class: "frame-20873290172"
                }, [createBaseVNode("div", {
                    class: "_12"
                }, "Take all gifts placed by other users for yourself"), createBaseVNode("div", {
                    class: "img2"
                }, [createBaseVNode("img", {
                    class: "bearruleimg",
                    src: "/images/effects/jackpot_rules3-min.png",
                    alt: "Prizes"
                })])]), createBaseVNode("div", {
                    class: "frame-2087329018"
                }, [createBaseVNode("div", {
                    class: "_122"
                }, " The game is free for all users, our commission is 0% "), createBaseVNode("div", {
                    class: "img"
                }, [createBaseVNode("img", {
                    class: "chat-gpt-image-15-2025-18-56-13-1",
                    src: "/images/effects/jackpot_rules4-min.png",
                    alt: "Free game"
                })])])], -1))])])) : createCommentVNode("", !0)])),
            _: 1
        })
}
const ModalRules = _export_sfc$1(_sfc_main$7, [["render", _sfc_render$4], ["__scopeId", "data-v-34367add"]])
    , ModalBetUser_vue_vue_type_style_index_0_scoped_0fa5bc6c_lang = ""
    , _sfc_main$6 = defineComponent({
    name: "ModalBetUser",
    props: {
        isOpen: {
            type: Boolean,
            default: !1
        },
        userId: {
            type: [Number, String],
            default: null
        },
        betData: {
            type: Object,
            default: () => ({})
        },
        colorIndex: {
            type: Number,
            default: 0
        },
        socket: {
            type: Object,
            default: null
        }
    },
    emits: ["close"],
    setup(e, {emit: t}) {
        const a = ref([])
            , s = computed(( () => {
                    var t;
                    return (null == (t = e.betData) ? void 0 : t.user) || {}
                }
            ))
            , i = computed(( () => {
                    const t = ["color-red", "color-yellow", "color-green", "color-blue", "color-purple", "color-orange"];
                    return t[e.colorIndex % t.length]
                }
            ))
            , r = computed(( () => {
                    const t = ["bg-red-light", "bg-yellow-light", "bg-green-light", "bg-blue-light", "bg-purple-light", "bg-orange-light"];
                    return t[e.colorIndex % t.length]
                }
            ))
            , o = computed(( () => {
                    const t = ["bg-red", "bg-yellow", "bg-green", "bg-blue", "bg-purple", "bg-orange"];
                    return t[e.colorIndex % t.length]
                }
            ))
            , n = computed(( () => {
                    const t = ["text-red", "text-yellow", "text-green", "text-blue", "text-purple", "text-orange"];
                    return t[e.colorIndex % t.length]
                }
            ))
            , l = () => {
                e.socket && e.socket.readyState === WebSocket.OPEN && e.userId && e.socket.send(JSON.stringify({
                    type: "get_user_bet_details",
                    userId: e.userId
                }))
            }
            , c = t => {
                try {
                    const s = JSON.parse(t.data);
                    "user_bet_details" === s.type && s.userId === e.userId && (a.value = s.items || [])
                } catch (s) {}
            }
            , d = () => {
                e.socket && e.socket.addEventListener("message", c)
            }
            , h = () => {
                var t, s;
                if (e.betData && e.betData.itemDetails && e.betData.itemDetails.length > 0)
                    a.value = e.betData.itemDetails;
                else if (0 === a.value.length) {
                    const i = (null == (t = e.betData) ? void 0 : t.count) || 5
                        , r = [];
                    for (let t = 0; t < i; t++)
                        r.push({
                            id: `mock-${t}`,
                            price: ((null == (s = e.betData) ? void 0 : s.total_amount) || 100) / i,
                            name: `Item ${t + 1}`,
                            image: "/images/effects/default_item.png",
                            is_black: !1
                        });
                    a.value = r
                }
            }
        ;
        return watch(( () => e.isOpen), (t => {
                t ? (l(),
                    d(),
                    h()) : e.socket && e.socket.removeEventListener("message", c)
            }
        )),
            watch(( () => e.betData), (t => {
                    t && e.isOpen && h()
                }
            ), {
                deep: !0
            }),
        e.isOpen && (l(),
            d(),
            h()),
            {
                itemDetails: a,
                userData: s,
                colorClass: i,
                rangeColorClass: r,
                chanceColorClass: o,
                textColorClass: n,
                formatPrice: e => parseFloat(e || 0).toFixed(2),
                formatPercent: e => `${(e || 0).toFixed(2)}%`,
                formatUserName: e => {
                    if (!e)
                        return "User";
                    let t = "";
                    e.first_name && ("string" == typeof e.first_name ? t = e.first_name : "Buffer" === e.first_name.type && Array.isArray(e.first_name.data) && (t = String.fromCharCode(...e.first_name.data)));
                    let a = "";
                    return e.last_name && ("string" == typeof e.last_name ? a = e.last_name : "Buffer" === e.last_name.type && Array.isArray(e.last_name.data) && e.last_name.data.length > 0 && (a = String.fromCharCode(...e.last_name.data))),
                        a ? `${t} ${a}` : t
                }
                ,
                close: () => {
                    t("close")
                }
            }
    }
})
    , _hoisted_1$6 = {
    class: "modal"
}
    , _hoisted_2$6 = {
    class: "modal-content"
}
    , _hoisted_3$6 = {
    class: "bet-user"
}
    , _hoisted_4$6 = ["src"]
    , _hoisted_5$6 = {
    class: "user-info"
}
    , _hoisted_6$6 = {
    class: "user-name"
}
    , _hoisted_7$6 = {
    class: "bet-details"
}
    , _hoisted_8$5 = {
    class: "bet-amount"
}
    , _hoisted_9$5 = {
    class: "gift-count"
}
    , _hoisted_10$4 = {
    class: "bet-stats"
}
    , _hoisted_11$4 = {
    class: "chance-text"
}
    , _hoisted_12$4 = {
    class: "items-grid"
}
    , _hoisted_13$4 = ["src"]
    , _hoisted_14$3 = {
    class: "item-price"
}
    , _hoisted_15$2 = {
    class: "price-value"
};
function _sfc_render$3(e, t, a, s, i, r) {
    return openBlock(),
        createBlock(Transition, {
            name: "modal-fade"
        }, {
            default: withCtx(( () => {
                    var a, s, i, r, o, n;
                    return [e.isOpen ? (openBlock(),
                        createElementBlock("div", {
                            key: 0,
                            class: "modal-overlay",
                            onClick: t[1] || (t[1] = withModifiers(( (...t) => e.close && e.close(...t)), ["self"]))
                        }, [createBaseVNode("div", _hoisted_1$6, [t[6] || (t[6] = createBaseVNode("div", {
                            class: "modal-header"
                        }, [createBaseVNode("div", {
                            class: "modal-title"
                        }, "Bet Player")], -1)), createBaseVNode("div", {
                            class: "modal-close",
                            onClick: t[0] || (t[0] = (...t) => e.close && e.close(...t))
                        }, t[2] || (t[2] = [createBaseVNode("svg", {
                            width: "24",
                            height: "24",
                            viewBox: "0 0 24 24",
                            fill: "none",
                            xmlns: "http://www.w3.org/2000/svg"
                        }, [createBaseVNode("path", {
                            d: "M18 6L6 18M6 6L18 18",
                            stroke: "white",
                            "stroke-width": "2",
                            "stroke-linecap": "round",
                            "stroke-linejoin": "round"
                        })], -1)])), createBaseVNode("div", _hoisted_2$6, [createBaseVNode("div", {
                            class: normalizeClass(["jackpot-bet", e.colorClass])
                        }, [createBaseVNode("div", _hoisted_3$6, [createBaseVNode("img", {
                            class: "user-avatar",
                            src: (null == (a = e.userData) ? void 0 : a.photo_url) || "/images/effects/default_avatar.png",
                            alt: "User Avatar"
                        }, null, 8, _hoisted_4$6), createBaseVNode("div", _hoisted_5$6, [createBaseVNode("div", _hoisted_6$6, toDisplayString(e.formatUserName(e.userData)), 1), createBaseVNode("div", _hoisted_7$6, [createBaseVNode("div", _hoisted_8$5, toDisplayString(e.formatPrice(null == (s = e.betData) ? void 0 : s.total_amount)), 1), t[3] || (t[3] = createBaseVNode("div", {
                            class: "coin"
                        }, [createBaseVNode("img", {
                            src: "/images/effects/ton_small.svg",
                            alt: "Coin"
                        })], -1)), t[4] || (t[4] = createBaseVNode("div", {
                            class: "separator"
                        }, "•", -1)), createBaseVNode("div", _hoisted_9$5, toDisplayString((null == (i = e.betData) ? void 0 : i.count) || 0) + " gifts", 1)])])]), createBaseVNode("div", _hoisted_10$4, [createBaseVNode("div", {
                            class: normalizeClass(["ticket-range", e.rangeColorClass])
                        }, [createBaseVNode("div", {
                            class: normalizeClass(["range-text", e.textColorClass])
                        }, "#" + toDisplayString((null == (r = e.betData) ? void 0 : r.ticketStart) || 0) + "-" + toDisplayString((null == (o = e.betData) ? void 0 : o.ticketEnd) || 0), 3)], 2), createBaseVNode("div", {
                            class: normalizeClass(["win-chance", e.chanceColorClass])
                        }, [createBaseVNode("div", _hoisted_11$4, toDisplayString(e.formatPercent(null == (n = e.betData) ? void 0 : n.winChance)), 1)], 2)])], 2), createBaseVNode("div", _hoisted_12$4, [(openBlock(!0),
                            createElementBlock(Fragment, null, renderList(e.itemDetails, ( (a, s) => (openBlock(),
                                createElementBlock("div", {
                                    key: s,
                                    class: normalizeClass(["item-card", {
                                        black_backdrop: a.is_black
                                    }])
                                }, [createBaseVNode("img", {
                                    class: "item-image",
                                    src: a.image,
                                    alt: "Item"
                                }, null, 8, _hoisted_13$4), createBaseVNode("div", _hoisted_14$3, [t[5] || (t[5] = createBaseVNode("div", {
                                    class: "coin"
                                }, [createBaseVNode("img", {
                                    src: "/images/effects/ton_small.svg",
                                    alt: "Coin"
                                })], -1)), createBaseVNode("div", _hoisted_15$2, toDisplayString(e.formatPrice(a.price)), 1)])], 2)))), 128))])])])])) : createCommentVNode("", !0)]
                }
            )),
            _: 1
        })
}
const ModalBetUser = _export_sfc$1(_sfc_main$6, [["render", _sfc_render$3], ["__scopeId", "data-v-0fa5bc6c"]])
    , AvatarRoulette_vue_vue_type_style_index_0_scoped_68dfefc1_lang = ""
    , _hoisted_1$5 = {
    key: 0,
    class: "avatar-roulette-wrapper"
}
    , _hoisted_2$5 = {
    class: "frame-2087329003"
}
    , _hoisted_3$5 = ["data-real-index"]
    , _hoisted_4$5 = ["src", "alt"]
    , _hoisted_5$5 = {
    key: 0,
    class: "debug-number"
}
    , _hoisted_6$5 = {
    key: 0,
    class: "debug-uid"
}
    , _hoisted_7$5 = {
    key: 1,
    class: "debug-pos"
}
    , AVATAR_WIDTH = 84
    , BRIGHT_ZONE_RADIUS = 35
    , _sfc_main$5 = {
    __name: "AvatarRoulette",
    props: {
        bets: {
            type: Array,
            required: !0,
            default: () => []
        },
        winnerUid: {
            type: Number,
            default: null
        },
        winnerTicket: {
            type: String,
            default: null
        },
        preferTicketWinner: {
            type: Boolean,
            default: !1
        },
        isSpinning: {
            type: Boolean,
            default: !1
        },
        animationDuration: {
            type: Number,
            default: 14
        },
        backendRoulette: {
            type: Object,
            default: null
        },
        showWinnerHighlight: {
            type: Boolean,
            default: !1
        }
    },
    emits: ["spinComplete"],
    setup(e, {expose: t, emit: a}) {
        const s = e
            , i = a
            , r = ref(!1)
            , o = ref(0)
            , n = ref(0)
            , l = ref(0)
            , c = ref(!1)
            , d = ref(null)
            , h = ref([])
            , p = ref([])
            , u = ref(!1)
            , m = ref(null);
        let f = null
            , v = null
            , g = null
            , y = 0;
        const _ = ["#ff2b2b", "#ffb52b", "#109b30", "#2b91ff", "#ff2bed", "#ff722b"]
            , b = computed(( () => {
                    if (!s.bets || 0 === s.bets.length)
                        return [];
                    if (void 0 !== s.bets[0].ticketStart)
                        return s.bets.map(( (e, t) => {
                                var a;
                                return {
                                    uid: e.uid,
                                    name: V(e.user),
                                    photo_url: null == (a = e.user) ? void 0 : a.photo_url,
                                    color: _[t % _.length],
                                    ticket: `#${e.ticketStart}-${e.ticketEnd}`,
                                    ticketStart: e.ticketStart,
                                    ticketEnd: e.ticketEnd,
                                    bet_amount: e.total_amount || 0,
                                    items_count: e.count || 0,
                                    chance: e.winChance || 0
                                }
                            }
                        ));
                    const e = s.bets.reduce(( (e, t) => e + (t.total_amount || t.amount || 0)), 0);
                    let t = 1;
                    return s.bets.map(( (a, s) => {
                            var i, r;
                            const o = a.total_amount || a.amount || 0
                                , n = e > 0 ? o / e * 100 : 50
                                , l = Math.round(n)
                                , c = t + l - 1
                                , d = t === c ? `#${t}` : `#${t}-${c}`
                                , h = {
                                uid: a.uid,
                                name: V(a.user),
                                photo_url: null == (i = a.user) ? void 0 : i.photo_url,
                                color: _[s % _.length],
                                ticket: d,
                                ticketStart: t,
                                ticketEnd: c,
                                bet_amount: o,
                                items_count: a.count || (null == (r = a.items) ? void 0 : r.length) || 0,
                                chance: n
                            };
                            return t = c + 1,
                                h
                        }
                    ))
                }
            ))
            , k = computed(( () => {
                    if (s.backendRoulette && s.backendRoulette.avatarsWithData && s.backendRoulette.avatarsWithData.length > 0) {
                        for (let e = 135; e <= 145; e++)
                            if (e >= 0 && e < s.backendRoulette.avatarsWithData.length) {
                                s.backendRoulette.avatarsWithData[e]
                            }
                        for (let e = 385; e <= 395; e++)
                            if (e >= 0 && e < s.backendRoulette.avatarsWithData.length) {
                                s.backendRoulette.avatarsWithData[e]
                            }
                        return s.backendRoulette.avatarsWithData
                    }
                    return []
                }
            ))
            , w = e => {
                if (!e || !b.value)
                    return null;
                const t = "string" == typeof e ? parseInt(e.replace("#", "")) : e;
                for (const a of b.value)
                    if (a.ticketStart && a.ticketEnd && t >= a.ticketStart && t <= a.ticketEnd)
                        return a;
                return null
            }
            , B = computed(( () => {
                    if (!b.value || 0 === b.value.length)
                        return null;
                    let e = null;
                    if (s.preferTicketWinner && s.winnerTicket && (e = w(s.winnerTicket)),
                    !e && s.winnerUid && (e = b.value.find((e => e && e.uid === s.winnerUid))),
                    e || !s.winnerTicket || s.preferTicketWinner || (e = w(s.winnerTicket)),
                    e && s.winnerTicket) {
                        const t = "string" == typeof s.winnerTicket ? parseInt(s.winnerTicket.replace("#", "")) : s.winnerTicket;
                        if (!(t >= e.ticketStart && t <= e.ticketEnd)) {
                            const t = w(s.winnerTicket);
                            t && (t.uid,
                                e.uid)
                        }
                    }
                    return e || null
                }
            ))
            , C = () => {
                const e = k.value.length;
                if (0 === e)
                    return 0;
                const t = n.value
                    , a = Math.floor(t / AVATAR_WIDTH);
                if ((c.value || u.value) && a >= 139 && a <= 141)
                    for (let s = a - 1; s <= a + 1; s++)
                        k.value[s];
                return Math.min(Math.max(0, a), e - 1)
            }
            , x = () => {
                var e;
                if (!d.value || !h.value || 0 === h.value.length)
                    return;
                const t = []
                    , a = null == (e = d.value.parentElement) ? void 0 : e.getBoundingClientRect();
                if (!a)
                    return;
                const s = a.left + a.width / 2
                    , i = Math.min(h.value.length, k.value.length);
                for (let r = 0; r < i; r++) {
                    const e = h.value[r];
                    if (e) {
                        const a = e.getBoundingClientRect()
                            , i = a.left + a.width / 2;
                        Math.abs(i - s) <= BRIGHT_ZONE_RADIUS && t.push(r)
                    }
                }
                t.join(",") !== p.value.join(",") && (p.value = [...t])
            }
            , S = () => {
                var e;
                const t = C()
                    , a = k.value[t];
                for (let s = -3; s <= 3; s++) {
                    const e = t + s;
                    if (e >= 0 && e < k.value.length) {
                        k.value[e]
                    }
                }
                if (h.value && h.value[t]) {
                    h.value[t].getBoundingClientRect()
                }
                a && (a.uid,
                    s.winnerUid);
                for (let s = -4; s <= 4; s++) {
                    const e = t + s;
                    if (e >= 0 && e < k.value.length) {
                        k.value[e]
                    }
                }
                if (d.value) {
                    d.value.getBoundingClientRect();
                    const a = null == (e = d.value.parentElement) ? void 0 : e.getBoundingClientRect();
                    if (a) {
                        const e = a.left + a.width / 2;
                        let s = null
                            , i = -1
                            , r = 1 / 0;
                        if (h.value.forEach(( (t, a) => {
                                if (t && a < k.value.length) {
                                    const o = t.getBoundingClientRect()
                                        , n = o.left + o.width / 2
                                        , l = Math.abs(n - e);
                                    l < r && (r = l,
                                        s = t,
                                        i = a)
                                }
                            }
                        )),
                        s && -1 !== i) {
                            k.value[i];
                            if (i !== t)
                                if (i >= 388 && i <= 392)
                                    ;
                                else {
                                    const e = (i - t) * AVATAR_WIDTH;
                                    n.value
                                }
                        }
                    }
                }
                x();
                if (k.value[390] && k.value[390].uid === s.winnerUid)
                    m.value = 390;
                else
                    for (let i = 388; i <= 392; i++)
                        if (k.value[i] && k.value[i].uid === s.winnerUid) {
                            m.value = i;
                            break
                        }
                for (let i = 388; i <= 392; i++) {
                    const e = k.value[i];
                    e && (e.uid,
                        s.winnerUid)
                }
                const r = t >= 388 && t <= 392 ? t : 140;
                k.value[r];
                i("spinComplete", B.value)
            }
            , E = e => {
                if (!c.value)
                    return;
                f || (f = e,
                    y = e);
                const t = e - f;
                let a = Math.min(t / (1e3 * s.animationDuration), 1);
                t > 1e3 * s.animationDuration + 1e3 && (a = 1);
                const i = (r = a) < .5 ? 4 * r * r * r : (r - 1) * (2 * r - 2) * (2 * r - 2) + 1;
                var r;
                const d = l.value + (o.value - l.value) * i;
                if (n.value = d,
                e - y > 30 && (x(),
                    y = e),
                a < 1)
                    v = requestAnimationFrame(E);
                else {
                    c.value = !1,
                        n.value = o.value,
                        x();
                    const e = C()
                        , t = 140;
                    if (e !== t) {
                        const a = (t - e) * AVATAR_WIDTH;
                        n.value += a
                    }
                    const a = k.value[e];
                    for (let s = -2; s <= 2; s++) {
                        const t = (e + s + k.value.length) % k.value.length;
                        k.value[t]
                    }
                    a && (a.uid,
                        s.winnerUid),
                        setTimeout(( () => {
                                S()
                            }
                        ), 500)
                }
            }
            , V = e => {
                if (!e)
                    return "Unknown";
                return `${e.first_name || ""} ${e.last_name || ""}`.trim() || "User"
            }
            , N = () => {
                if (c.value)
                    return;
                if (P(),
                !k.value || 0 === k.value.length)
                    return void i("spinComplete", null);
                r.value = !0;
                const e = 140
                    , t = 20 * AVATAR_WIDTH;
                l.value = t,
                    n.value = t;
                if (o.value = 140 * AVATAR_WIDTH + AVATAR_WIDTH / 2,
                e < k.value.length && k.value[140]) {
                    if (k.value[140].uid !== s.winnerUid) {
                        let e = !1;
                        for (let t = 130; t <= 150; t++)
                            if (k.value[t]) {
                                k.value[t].uid === s.winnerUid && !e && (e = !0)
                            }
                    }
                }
                f = null,
                    p.value = [],
                    nextTick(( () => {
                            setTimeout(( () => {
                                    x();
                                    const e = {};
                                    k.value.forEach(( (t, a) => {
                                            const s = t.uid;
                                            e[s] || (e[s] = []),
                                                e[s].push(a)
                                        }
                                    )),
                                        Object.entries(e).forEach(( ([e,t]) => {
                                                s.winnerUid
                                            }
                                        )),
                                        c.value = !0,
                                        v = requestAnimationFrame(E),
                                        g = setTimeout(( () => {
                                                c.value && (c.value = !1,
                                                    i("spinComplete", B.value))
                                            }
                                        ), 1e3 * (s.animationDuration + 1))
                                }
                            ), 100)
                        }
                    ))
            }
            , P = () => {
                g && (clearTimeout(g),
                    g = null),
                v && (cancelAnimationFrame(v),
                    v = null)
            }
        ;
        watch(( () => s.isSpinning), (e => {
                e && !c.value && N()
            }
        )),
            watch(( () => s.showWinnerHighlight), (e => {
                    if (e && null !== m.value) {
                        k.value[m.value] && nextTick(( () => {
                                if (h.value && h.value[m.value]) {
                                    h.value[m.value]
                                }
                            }
                        ))
                    }
                }
            )),
            watch(n, ( () => {
                    c.value || x()
                }
            ));
        const A = () => {
                if (document.hidden && c.value)
                    ;
                else if (!document.hidden && c.value) {
                    if (Date.now() - f > 1e3 * s.animationDuration) {
                        c.value = !1,
                            n.value = o.value;
                        Math.floor(o.value / AVATAR_WIDTH);
                        x(),
                            setTimeout(( () => S()), 100)
                    }
                }
            }
        ;
        return onMounted(( () => {
                document.addEventListener("visibilitychange", A)
            }
        )),
            onBeforeUnmount(( () => {
                    P(),
                        document.removeEventListener("visibilitychange", A)
                }
            )),
            t({
                startSpin: N,
                resetRoulette: () => {
                    P(),
                        c.value = !1,
                        n.value = 0,
                        o.value = 0,
                        l.value = 0,
                        p.value = [],
                        f = null,
                        y = 0,
                        r.value = !1,
                        m.value = null
                }
                ,
                showInstantResult: () => {
                    let e = 0;
                    const t = () => {
                            if (!k.value || 0 === k.value.length)
                                return e++,
                                    e < 20 ? void setTimeout(t, 50) : void 0;
                            c.value = !1,
                                P();
                            const a = 140 * AVATAR_WIDTH + AVATAR_WIDTH / 2;
                            n.value = a,
                                o.value = a,
                                r.value = !0;
                            m.value = 390;
                            const i = k.value[390];
                            if (i && i.uid === s.winnerUid)
                                ;
                            else
                                for (let e = 388; e <= 392; e++)
                                    if (k.value[e] && k.value[e].uid === s.winnerUid) {
                                        m.value = e;
                                        break
                                    }
                            nextTick(( () => {
                                    x()
                                }
                            ))
                        }
                    ;
                    t()
                }
            }),
            (e, t) => r.value && k.value.length > 0 ? (openBlock(),
                createElementBlock("div", _hoisted_1$5, [createBaseVNode("div", _hoisted_2$5, [createBaseVNode("div", {
                    class: "frame-2087329001",
                    ref_key: "itemsContainer",
                    ref: d,
                    style: normalizeStyle({
                        transform: `translate(-50%, -50%) translateX(-${n.value}px)`
                    })
                }, [(openBlock(!0),
                    createElementBlock(Fragment, null, renderList(k.value, ( (e, t) => (openBlock(),
                        createElementBlock("div", {
                            key: `avatar-${t}`,
                            ref_for: !0,
                            ref_key: "avatarElements",
                            ref: h,
                            class: normalizeClass(["avatars", {
                                "avatar-bright": p.value.includes(t),
                                "avatar-winner-glow": s.showWinnerHighlight && t === m.value
                            }]),
                            style: normalizeStyle({
                                borderColor: e.color || "transparent",
                                "--winner-color": e.color || "#ff2b2b"
                            }),
                            "data-real-index": t
                        }, [createBaseVNode("img", {
                            src: e.url || e,
                            alt: `Avatar ${t}`
                        }, null, 8, _hoisted_4$5), u.value ? (openBlock(),
                            createElementBlock("div", _hoisted_5$5, [createTextVNode(toDisplayString(t) + " ", 1), e.uid ? (openBlock(),
                                createElementBlock("span", _hoisted_6$5, toDisplayString(e.uid), 1)) : createCommentVNode("", !0), void 0 !== e.position ? (openBlock(),
                                createElementBlock("span", _hoisted_7$5, "P:" + toDisplayString(e.position), 1)) : createCommentVNode("", !0)])) : createCommentVNode("", !0)], 14, _hoisted_3$5)))), 128))], 4), t[0] || (t[0] = createStaticVNode('<img src="/images/effects/Union.svg" class="union union-top" alt="" data-v-68dfefc1><img src="/images/effects/Union.svg" class="union union-bottom" alt="" data-v-68dfefc1><div class="center-indicator" data-v-68dfefc1><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" data-v-68dfefc1><path d="M12 3L7 8H17L12 3Z" fill="#FFD700" stroke="#FFA500" stroke-width="1" data-v-68dfefc1></path></svg></div>', 3))])])) : createCommentVNode("", !0)
    }
}
    , AvatarRoulette = _export_sfc$1(_sfc_main$5, [["__scopeId", "data-v-68dfefc1"]])
    , WinnerInfo_vue_vue_type_style_index_0_scoped_3349e7d0_lang = ""
    , _hoisted_1$4 = {
    key: 0,
    class: "winner-info-wrapper"
}
    , _hoisted_2$4 = {
    class: "frame-2087329006"
}
    , _hoisted_3$4 = {
    class: "button"
}
    , _hoisted_4$4 = {
    class: "label"
}
    , _hoisted_5$4 = {
    class: "button2"
}
    , _hoisted_6$4 = {
    class: "label"
}
    , _hoisted_7$4 = {
    class: "button3"
}
    , _hoisted_8$4 = {
    class: "frame-2087329007"
}
    , _hoisted_9$4 = {
    class: "label"
}
    , _sfc_main$4 = {
    __name: "WinnerInfo",
    props: {
        winner: {
            type: Object,
            default: null
        },
        totalAmount: {
            type: Number,
            default: 0
        },
        totalTickets: {
            type: Number,
            default: 0
        },
        show: {
            type: Boolean,
            default: !1
        }
    },
    setup(e) {
        const t = e
            , a = ref(!1)
            , s = computed(( () => t.winner ? void 0 !== t.winner.win_chance ? parseFloat(t.winner.win_chance) : void 0 !== t.winner.winChance ? parseFloat(t.winner.winChance) : t.totalAmount && 0 !== t.totalAmount ? t.winner.total_amount / t.totalAmount * 100 : 0 : 0))
            , i = computed(( () => {
                var e;
                return (null == (e = t.winner) ? void 0 : e.total_amount) || 0
            }
        ))
            , r = computed(( () => {
                var e;
                return (null == (e = t.winner) ? void 0 : e.winning_ticket) ? t.winner.winning_ticket : "1"
            }
        ));
        return watch(( () => t.show), (e => {
                a.value = e
            }
        )),
            (e, t) => {
                return a.value ? (openBlock(),
                    createElementBlock("div", _hoisted_1$4, [createBaseVNode("div", _hoisted_2$4, [createBaseVNode("div", _hoisted_3$4, [t[0] || (t[0] = createBaseVNode("div", {
                        class: "_12"
                    }, "Chance:", -1)), createBaseVNode("div", _hoisted_4$4, toDisplayString(s.value.toFixed(2)) + "%", 1)]), createBaseVNode("div", _hoisted_5$4, [t[1] || (t[1] = createBaseVNode("div", {
                        class: "_12"
                    }, "Ticket:", -1)), createBaseVNode("div", _hoisted_6$4, "#" + toDisplayString(r.value), 1)]), createBaseVNode("div", _hoisted_7$4, [t[3] || (t[3] = createBaseVNode("div", {
                        class: "_12"
                    }, "Bet:", -1)), createBaseVNode("div", _hoisted_8$4, [createBaseVNode("div", _hoisted_9$4, toDisplayString((o = i.value,
                        parseFloat(o || 0).toFixed(2))), 1), t[2] || (t[2] = createBaseVNode("div", {
                        class: "coin"
                    }, [createBaseVNode("img", {
                        class: "group-2087328823",
                        src: "/images/effects/ton_small.svg",
                        alt: "TON"
                    })], -1))])])])])) : createCommentVNode("", !0);
                var o
            }
    }
}
    , WinnerInfo = _export_sfc$1(_sfc_main$4, [["__scopeId", "data-v-3349e7d0"]])
    , ModalHistoryGames_vue_vue_type_style_index_0_scoped_62d5d4f6_lang = ""
    , _sfc_main$3 = {
    name: "ModalHistoryGames",
    props: {
        visible: {
            type: Boolean,
            default: !1
        }
    },
    data: () => ({
        games: []
    }),
    watch: {
        visible(e) {
            e && this.loadHistory()
        }
    },
    methods: {
        close() {
            this.$emit("close")
        },
        loadHistory() {
            window.socket && window.socket.readyState === WebSocket.OPEN && window.socket.send(JSON.stringify({
                type: "get_history"
            }))
        },
        formatMoney: e => e.toFixed(2),
        openGameDetails(e) {
            this.$emit("open-game-details", e)
        },
        parseGameData(e) {
            const t = [];
            e.forEach((e => {
                    const a = JSON.parse(e.all_bets)
                        , s = a.find((t => t.user_id === e.winner_userid));
                    if (s) {
                        const i = a.reduce(( (e, t) => e + t.total_amount), 0);
                        a.reduce(( (e, t) => e + t.user_items.length), 0),
                            t.push({
                                id: e.id,
                                winnerAvatar: s.user_avatar,
                                winnerName: s.user_name,
                                winnerBet: s.total_amount,
                                itemsCount: s.user_items.length,
                                totalPool: i,
                                playersCount: a.length,
                                allBets: a
                            })
                    }
                }
            )),
                this.games = t
        }
    },
    mounted() {
        window.addEventListener("websocket-history", (e => {
                this.parseGameData(e.detail)
            }
        ))
    },
    beforeDestroy() {
        window.removeEventListener("websocket-history")
    }
}
    , _hoisted_1$3 = {
    class: "modal-history-header"
}
    , _hoisted_2$3 = {
    class: "modal-history-content"
}
    , _hoisted_3$3 = {
    class: "game-info"
}
    , _hoisted_4$3 = {
    class: "winner-info"
}
    , _hoisted_5$3 = ["src", "alt"]
    , _hoisted_6$3 = {
    class: "winner-details"
}
    , _hoisted_7$3 = {
    class: "winner-name"
}
    , _hoisted_8$3 = {
    class: "winner-stats"
}
    , _hoisted_9$3 = {
    class: "winner-bet"
}
    , _hoisted_10$3 = {
    class: "items-count"
}
    , _hoisted_11$3 = {
    class: "game-stats"
}
    , _hoisted_12$3 = {
    class: "stat-badge"
}
    , _hoisted_13$3 = {
    class: "stat-value"
}
    , _hoisted_14$2 = ["onClick"];
function _sfc_render$2(e, t, a, s, i, r) {
    return openBlock(),
        createBlock(Transition, {
            name: "modal-history-fade"
        }, {
            default: withCtx(( () => [a.visible ? (openBlock(),
                createElementBlock("div", {
                    key: 0,
                    class: "modal-history-overlay",
                    onClick: t[2] || (t[2] = (...e) => r.close && r.close(...e))
                }, [createBaseVNode("div", {
                    class: "modal-history",
                    onClick: t[1] || (t[1] = withModifiers(( () => {}
                    ), ["stop"]))
                }, [createBaseVNode("div", _hoisted_1$3, [t[4] || (t[4] = createBaseVNode("h2", {
                    class: "modal-history-title"
                }, "History", -1)), createBaseVNode("div", {
                    class: "modal-history-close",
                    onClick: t[0] || (t[0] = (...e) => r.close && r.close(...e))
                }, t[3] || (t[3] = [createBaseVNode("svg", {
                    width: "24",
                    height: "24",
                    viewBox: "0 0 24 24",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, [createBaseVNode("path", {
                    d: "M18 6L6 18M6 6L18 18",
                    stroke: "white",
                    "stroke-width": "2",
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round"
                })], -1)]))]), createBaseVNode("div", _hoisted_2$3, [(openBlock(!0),
                    createElementBlock(Fragment, null, renderList(i.games, (e => (openBlock(),
                        createElementBlock("div", {
                            class: "game-history-item",
                            key: e.id
                        }, [createBaseVNode("div", _hoisted_3$3, [createBaseVNode("div", _hoisted_4$3, [createBaseVNode("img", {
                            src: e.winnerAvatar,
                            alt: e.winnerName,
                            class: "winner-avatar"
                        }, null, 8, _hoisted_5$3), createBaseVNode("div", _hoisted_6$3, [createBaseVNode("div", _hoisted_7$3, toDisplayString(e.winnerName), 1), createBaseVNode("div", _hoisted_8$3, [createBaseVNode("span", _hoisted_9$3, toDisplayString(r.formatMoney(e.winnerBet)), 1), t[5] || (t[5] = createBaseVNode("img", {
                            src: "/images/effects/ton_small.svg",
                            alt: "Coin",
                            class: "coin-icon"
                        }, null, -1)), t[6] || (t[6] = createBaseVNode("span", {
                            class: "separator"
                        }, "•", -1)), createBaseVNode("span", _hoisted_10$3, toDisplayString(e.itemsCount) + " gifts", 1)])])]), createBaseVNode("div", _hoisted_11$3, [createBaseVNode("div", _hoisted_12$3, [t[7] || (t[7] = createBaseVNode("span", {
                            class: "stat-label"
                        }, "Total:", -1)), createBaseVNode("span", _hoisted_13$3, toDisplayString(r.formatMoney(e.totalPool)), 1), t[8] || (t[8] = createBaseVNode("img", {
                            src: "/images/effects/ton_small.svg",
                            alt: "Coin",
                            class: "coin-icon-small"
                        }, null, -1))]), createBaseVNode("div", {
                            class: "view-details",
                            onClick: t => r.openGameDetails(e.id)
                        }, t[9] || (t[9] = [createBaseVNode("img", {
                            src: "/images/effects/jackpot_view.svg",
                            alt: "View"
                        }, null, -1)]), 8, _hoisted_14$2)])])])))), 128))])])])) : createCommentVNode("", !0)])),
            _: 1
        })
}
const ModalHistoryGames = _export_sfc$1(_sfc_main$3, [["render", _sfc_render$2], ["__scopeId", "data-v-62d5d4f6"]])
    , ModalHistoryId_vue_vue_type_style_index_0_scoped_fa7121af_lang = ""
    , _sfc_main$2 = {
    name: "ModalHistoryId",
    props: {
        visible: {
            type: Boolean,
            default: !1
        },
        gameId: {
            type: Number,
            default: null
        }
    },
    data: () => ({
        gameData: {
            winnerUserId: null,
            winnerTicket: null,
            allBets: [],
            itemsAmount: 0,
            itemsCount: 0,
            winRoulette: [],
            totalPool: 0
        },
        colorClasses: [{
            main: "color-red",
            light: "bg-red-light",
            dark: "bg-red",
            text: "text-red"
        }, {
            main: "color-yellow",
            light: "bg-yellow-light",
            dark: "bg-yellow",
            text: "text-yellow"
        }, {
            main: "color-green",
            light: "bg-green-light",
            dark: "bg-green",
            text: "text-green"
        }, {
            main: "color-blue",
            light: "bg-blue-light",
            dark: "bg-blue",
            text: "text-blue"
        }, {
            main: "color-purple",
            light: "bg-purple-light",
            dark: "bg-purple",
            text: "text-purple"
        }, {
            main: "color-orange",
            light: "bg-orange-light",
            dark: "bg-orange",
            text: "text-orange"
        }]
    }),
    computed: {
        rouletteAvatars() {
            return this.gameData.winRoulette || []
        },
        winnerBet() {
            const e = this.gameData.allBets.find((e => e.user_id === this.gameData.winnerUserId));
            return e ? e.total_amount : 0
        },
        winnerChance() {
            const e = this.gameData.allBets.find((e => e.user_id === this.gameData.winnerUserId));
            return e ? e.winChance : 0
        }
    },
    watch: {
        visible(e) {
            e && this.gameId && this.loadGameDetails()
        }
    },
    methods: {
        close() {
            this.$emit("close")
        },
        goBack() {
            this.$emit("go-back")
        },
        loadGameDetails() {
            window.socket && window.socket.readyState === WebSocket.OPEN && window.socket.send(JSON.stringify({
                type: "get_game_details",
                gameId: this.gameId
            }))
        },
        formatPrice: e => parseFloat(e || 0).toFixed(2),
        formatPercent(e) {
            if (null == e)
                return "0.00%";
            return `${(("string" == typeof e ? parseFloat(e) : e) || 0).toFixed(2)}%`
        },
        getRouletteBorderColor(e) {
            const t = this.gameData.allBets.findIndex((t => t.user_id === e));
            if (-1 === t)
                return "#ff2b2b";
            const a = ["#ff2b2b", "#ffb52b", "#109b30", "#2b91ff", "#ff2bed", "#ff722b"];
            return a[t % a.length]
        },
        calculateTicketRanges() {
            let e = 1;
            this.gameData.allBets.forEach((t => {
                    const a = Math.round(t.total_amount / this.gameData.totalPool * 1e4);
                    t.ticketStart = e,
                        t.ticketEnd = e + a - 1,
                        t.winChance = a / 1e4 * 100,
                        e += a
                }
            ))
        },
        parseGameDetails(e) {
            this.gameData = {
                winnerUserId: e.winner_userid,
                winnerTicket: e.winner_ticket,
                allBets: JSON.parse(e.all_bets || "[]"),
                itemsAmount: e.items_amount,
                itemsCount: e.items_count,
                winRoulette: JSON.parse(e.win_roulette || "[]"),
                totalPool: e.items_amount
            },
                this.calculateTicketRanges()
        }
    },
    mounted() {
        window.addEventListener("websocket-game-details", (e => {
                this.parseGameDetails(e.detail)
            }
        ))
    },
    beforeDestroy() {
        window.removeEventListener("websocket-game-details")
    }
}
    , _hoisted_1$2 = {
    class: "modal-header"
}
    , _hoisted_2$2 = {
    class: "game-details"
}
    , _hoisted_3$2 = {
    class: "winner-section"
}
    , _hoisted_4$2 = {
    class: "winner-header"
}
    , _hoisted_5$2 = {
    class: "winner-stats"
}
    , _hoisted_6$2 = {
    class: "stat-item"
}
    , _hoisted_7$2 = {
    class: "stat-label"
}
    , _hoisted_8$2 = {
    class: "stat-item"
}
    , _hoisted_9$2 = {
    class: "stat-value"
}
    , _hoisted_10$2 = {
    class: "value-text"
}
    , _hoisted_11$2 = {
    class: "roulette-section"
}
    , _hoisted_12$2 = {
    class: "frame-2087329003"
}
    , _hoisted_13$2 = {
    class: "frame-2087329001"
}
    , _hoisted_14$1 = ["src", "alt"]
    , _hoisted_15$1 = {
    class: "winner-info"
}
    , _hoisted_16 = {
    class: "winner-detail-item"
}
    , _hoisted_17 = {
    class: "detail-value"
}
    , _hoisted_18 = {
    class: "winner-detail-item"
}
    , _hoisted_19 = {
    class: "detail-value"
}
    , _hoisted_20 = {
    class: "winner-detail-item"
}
    , _hoisted_21 = {
    class: "detail-value"
}
    , _hoisted_22 = {
    class: "bet-amount"
}
    , _hoisted_23 = {
    class: "bets-section"
}
    , _hoisted_24 = {
    class: "bet-user"
}
    , _hoisted_25 = ["src", "alt"]
    , _hoisted_26 = {
    class: "user-info"
}
    , _hoisted_27 = {
    class: "user-name"
}
    , _hoisted_28 = {
    class: "bet-details"
}
    , _hoisted_29 = {
    class: "bet-amount"
}
    , _hoisted_30 = {
    class: "gift-count"
}
    , _hoisted_31 = {
    class: "bet-stats"
}
    , _hoisted_32 = {
    class: "chance-text"
};
function _sfc_render$1(e, t, a, s, i, r) {
    return openBlock(),
        createBlock(Transition, {
            name: "modal-history-id-fade"
        }, {
            default: withCtx(( () => [a.visible ? (openBlock(),
                createElementBlock("div", {
                    key: 0,
                    class: "modal-history-id-overlay",
                    onClick: t[3] || (t[3] = (...e) => r.close && r.close(...e))
                }, [createBaseVNode("div", {
                    class: "modal-history-id",
                    onClick: t[2] || (t[2] = withModifiers(( () => {}
                    ), ["stop"]))
                }, [createBaseVNode("div", _hoisted_1$2, [createBaseVNode("div", {
                    class: "back-button",
                    onClick: t[0] || (t[0] = (...e) => r.goBack && r.goBack(...e))
                }, t[4] || (t[4] = [createBaseVNode("svg", {
                    width: "20",
                    height: "20",
                    viewBox: "0 0 20 20",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, [createBaseVNode("path", {
                    d: "M2.5 10.0007L6.66667 14.1673M2.5 10.0007L6.66667 5.83398M2.5 10.0007H17.5",
                    stroke: "white",
                    "stroke-width": "2",
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round"
                })], -1)])), t[6] || (t[6] = createBaseVNode("div", {
                    class: "modal-title"
                }, "History", -1)), createBaseVNode("div", {
                    class: "close-button",
                    onClick: t[1] || (t[1] = (...e) => r.close && r.close(...e))
                }, t[5] || (t[5] = [createBaseVNode("svg", {
                    width: "24",
                    height: "24",
                    viewBox: "0 0 24 24",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, [createBaseVNode("path", {
                    d: "M18 6L6 18M6 6L18 18",
                    stroke: "white",
                    "stroke-width": "2",
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round"
                })], -1)]))]), createBaseVNode("div", _hoisted_2$2, [createBaseVNode("div", _hoisted_3$2, [createBaseVNode("div", _hoisted_4$2, [createBaseVNode("div", _hoisted_5$2, [createBaseVNode("div", _hoisted_6$2, [t[7] || (t[7] = createBaseVNode("div", {
                    class: "stat-icon"
                }, [createBaseVNode("img", {
                    src: "/images/effects/jackpot_prizes.png",
                    alt: "Prizes"
                })], -1)), createBaseVNode("div", _hoisted_7$2, toDisplayString(i.gameData.itemsCount || 0), 1)]), t[10] || (t[10] = createBaseVNode("div", {
                    class: "stat-item"
                }, [createBaseVNode("div", {
                    class: "stat-icon"
                }, [createBaseVNode("img", {
                    src: "/images/effects/jackpot_winner.png",
                    alt: "Winner"
                })]), createBaseVNode("div", {
                    class: "stat-label"
                }, "Winner")], -1)), createBaseVNode("div", _hoisted_8$2, [t[9] || (t[9] = createBaseVNode("div", {
                    class: "stat-icon"
                }, [createBaseVNode("img", {
                    src: "/images/effects/balance_jackpot.png",
                    alt: "Balance"
                })], -1)), createBaseVNode("div", _hoisted_9$2, [createBaseVNode("div", _hoisted_10$2, toDisplayString(r.formatPrice(i.gameData.totalPool)), 1), t[8] || (t[8] = createBaseVNode("div", {
                    class: "coin-icon"
                }, [createBaseVNode("img", {
                    src: "/images/effects/ton_small.svg",
                    alt: "Coin"
                })], -1))])])])]), createBaseVNode("div", _hoisted_11$2, [createBaseVNode("div", _hoisted_12$2, [createBaseVNode("div", _hoisted_13$2, [(openBlock(!0),
                    createElementBlock(Fragment, null, renderList(r.rouletteAvatars, ( (e, t) => (openBlock(),
                        createElementBlock("div", {
                            key: `${e.uid}_${t}`,
                            class: normalizeClass(["avatars", {
                                "avatar-bright": 0 === e.position
                            }]),
                            style: normalizeStyle({
                                opacity: 0 === e.position ? 1 : .15,
                                borderColor: r.getRouletteBorderColor(e.uid)
                            })
                        }, [createBaseVNode("img", {
                            src: e.photo_url,
                            alt: e.name
                        }, null, 8, _hoisted_14$1)], 6)))), 128))]), t[11] || (t[11] = createBaseVNode("img", {
                    src: "/images/effects/Union.svg",
                    class: "union union-top",
                    alt: ""
                }, null, -1)), t[12] || (t[12] = createBaseVNode("img", {
                    src: "/images/effects/Union.svg",
                    class: "union union-bottom",
                    alt: ""
                }, null, -1))])]), createBaseVNode("div", _hoisted_15$1, [createBaseVNode("div", _hoisted_16, [t[13] || (t[13] = createBaseVNode("div", {
                    class: "detail-label"
                }, "Chance:", -1)), createBaseVNode("div", _hoisted_17, toDisplayString(r.formatPercent(r.winnerChance)), 1)]), createBaseVNode("div", _hoisted_18, [t[14] || (t[14] = createBaseVNode("div", {
                    class: "detail-label"
                }, "Ticket:", -1)), createBaseVNode("div", _hoisted_19, "#" + toDisplayString(i.gameData.winnerTicket), 1)]), createBaseVNode("div", _hoisted_20, [t[16] || (t[16] = createBaseVNode("div", {
                    class: "detail-label"
                }, "Bet:", -1)), createBaseVNode("div", _hoisted_21, [createBaseVNode("div", _hoisted_22, toDisplayString(r.formatPrice(r.winnerBet)), 1), t[15] || (t[15] = createBaseVNode("div", {
                    class: "coin-icon"
                }, [createBaseVNode("img", {
                    src: "/images/effects/ton_small.svg",
                    alt: "Coin"
                })], -1))])])])]), createBaseVNode("div", _hoisted_23, [(openBlock(!0),
                    createElementBlock(Fragment, null, renderList(i.gameData.allBets, ( (e, a) => (openBlock(),
                        createElementBlock("div", {
                            key: e.user_id,
                            class: normalizeClass(["bet-item", i.colorClasses[a % i.colorClasses.length].main])
                        }, [createBaseVNode("div", _hoisted_24, [createBaseVNode("img", {
                            class: "user-avatar",
                            src: e.user_avatar,
                            alt: e.user_name
                        }, null, 8, _hoisted_25), createBaseVNode("div", _hoisted_26, [createBaseVNode("div", _hoisted_27, toDisplayString(e.user_name), 1), createBaseVNode("div", _hoisted_28, [createBaseVNode("div", _hoisted_29, toDisplayString(r.formatPrice(e.total_amount)), 1), t[17] || (t[17] = createBaseVNode("div", {
                            class: "coin"
                        }, [createBaseVNode("img", {
                            src: "/images/effects/ton_small.svg",
                            alt: "Coin"
                        })], -1)), t[18] || (t[18] = createBaseVNode("div", {
                            class: "separator"
                        }, "•", -1)), createBaseVNode("div", _hoisted_30, toDisplayString(e.user_items.length) + " gifts", 1)])])]), createBaseVNode("div", _hoisted_31, [createBaseVNode("div", {
                            class: normalizeClass(["ticket-range", i.colorClasses[a % i.colorClasses.length].light])
                        }, [createBaseVNode("div", {
                            class: normalizeClass(["range-text", i.colorClasses[a % i.colorClasses.length].text])
                        }, "#" + toDisplayString(e.ticketStart) + "-" + toDisplayString(e.ticketEnd), 3)], 2), createBaseVNode("div", {
                            class: normalizeClass(["win-chance", i.colorClasses[a % i.colorClasses.length].dark])
                        }, [createBaseVNode("div", _hoisted_32, toDisplayString(r.formatPercent(e.winChance)), 1)], 2)])], 2)))), 128))])])])])) : createCommentVNode("", !0)])),
            _: 1
        })
}
const ModalHistoryId = _export_sfc$1(_sfc_main$2, [["render", _sfc_render$1], ["__scopeId", "data-v-fa7121af"]])
    , ModalWinnerGifts_vue_vue_type_style_index_0_scoped_cd5f38e3_lang = ""
    , _hoisted_1$1 = {
    class: "modal"
}
    , _hoisted_2$1 = {
    class: "frame-2087328871"
}
    , _hoisted_3$1 = {
    class: "carousel-container"
}
    , _hoisted_4$1 = ["src", "alt"]
    , _hoisted_5$1 = {
    class: "frame-2087329002"
}
    , _hoisted_6$1 = {
    class: "frame-2087328995"
}
    , _hoisted_7$1 = {
    class: "label"
}
    , _hoisted_8$1 = {
    class: "frame-2087328997"
}
    , _hoisted_9$1 = {
    class: "frame-2087328873"
}
    , _hoisted_10$1 = {
    class: "label"
}
    , _hoisted_11$1 = {
    class: "frame-2087328197"
}
    , _hoisted_12$1 = {
    class: "tab-segment"
}
    , _hoisted_13$1 = {
    class: "text"
}
    , _sfc_main$1 = {
    __name: "ModalWinnerGifts",
    props: {
        gifts: {
            type: Array,
            required: !0
        },
        totalValue: {
            type: Number,
            required: !0
        },
        isVisible: {
            type: Boolean,
            default: !1
        }
    },
    emits: ["close", "keep-gifts", "sell-gifts"],
    setup(e, {expose: t, emit: a}) {
        const s = e
            , i = a
            , r = ref(0)
            , o = ref(null)
            , n = ref(null)
            , l = computed(( () => s.gifts && 0 !== s.gifts.length ? [...s.gifts, ...s.gifts, ...s.gifts, ...s.gifts, ...s.gifts] : []))
            , c = () => {
                const e = 1e3 / 60;
                let t = 0;
                const a = i => {
                        if (i - t >= e) {
                            r.value -= 2;
                            const e = 120 * s.gifts.length;
                            Math.abs(r.value) >= e && (r.value = 0),
                                t = i
                        }
                        o.value = requestAnimationFrame(a)
                    }
                ;
                o.value = requestAnimationFrame(a)
            }
            , d = () => {
                o.value && (cancelAnimationFrame(o.value),
                    o.value = null)
            }
            , h = () => {
                p(),
                    n.value = setTimeout(( () => {
                            m()
                        }
                    ), 1e4)
            }
            , p = () => {
                n.value && (clearTimeout(n.value),
                    n.value = null)
            }
            , u = computed(( () => {
                    var e;
                    return (null == (e = s.gifts) ? void 0 : e.length) || 0
                }
            ))
            , m = () => {
                p(),
                    i("close")
            }
            , f = () => {
                i("keep-gifts"),
                    m()
            }
            , v = () => {
                i("sell-gifts"),
                    m()
            }
        ;
        onMounted(( () => {
                s.isVisible && (setTimeout(( () => {
                        c()
                    }
                ), 100),
                    h())
            }
        )),
            onUnmounted(( () => {
                    d(),
                        p()
                }
            )),
            watch(( () => s.isVisible), (e => {
                    e ? (setTimeout(( () => {
                            c()
                        }
                    ), 100),
                        h()) : (d(),
                        p())
                }
            ));
        const g = computed(( () => e => {
                const t = 120 * e + r.value + 60
                    , a = Math.abs(t - 184.5)
                    , s = Math.min(a / 184.5, 1)
                    , i = Math.pow(1 - s, 2.5)
                    , o = .4 + .9 * i
                    , n = .3 + .7 * Math.pow(1 - s, 1.8)
                    , l = 35 * s;
                return {
                    transform: `\n        perspective(800px) \n        translateZ(${50 * i}px) \n        translateY(${-10 * Math.sin(s * Math.PI)}px) \n        rotateY(${t < 184.5 ? l : -l}deg) \n        scale(${o})\n      `,
                    opacity: n,
                    zIndex: Math.round(20 * i),
                    filter: `brightness(${.7 + .5 * i}) saturate(${.8 + .4 * i})`
                }
            }
        ))
            , y = e => e && e.image ? e.image.startsWith("images/") ? "/" + e.image : e.image : "/images/placeholder.png";
        return t({
            getItemStyle: g,
            getGiftImagePath: y
        }),
            (t, a) => e.isVisible ? (openBlock(),
                createElementBlock("div", {
                    key: 0,
                    class: "modal-overlay",
                    onClick: withModifiers(m, ["self"])
                }, [createBaseVNode("div", _hoisted_1$1, [createBaseVNode("div", {
                    class: "icon",
                    onClick: m
                }, a[0] || (a[0] = [createBaseVNode("svg", {
                    class: "close",
                    width: "24",
                    height: "24",
                    viewBox: "0 0 24 24",
                    fill: "none"
                }, [createBaseVNode("path", {
                    d: "M18 6L6 18M6 6l12 12",
                    stroke: "#ffffff",
                    "stroke-width": "2",
                    "stroke-linecap": "round"
                })], -1)])), createBaseVNode("div", _hoisted_2$1, [a[1] || (a[1] = createBaseVNode("img", {
                    class: "lights",
                    src: "/images/effects/lights.png",
                    alt: "Background lights"
                }, null, -1)), a[2] || (a[2] = createBaseVNode("img", {
                    class: "stars",
                    src: "/images/effects/stars.png",
                    alt: "Stars"
                }, null, -1)), createBaseVNode("div", _hoisted_3$1, [createBaseVNode("div", {
                    class: "carousel-track",
                    style: normalizeStyle({
                        transform: `translateX(${r.value}px)`
                    })
                }, [(openBlock(!0),
                    createElementBlock(Fragment, null, renderList(l.value, ( (e, t) => (openBlock(),
                        createElementBlock("div", {
                            key: `gift-${t}`,
                            class: "carousel-item",
                            style: normalizeStyle(g.value(t))
                        }, [createBaseVNode("img", {
                            src: y(e),
                            alt: e.name || "Gift",
                            class: "gift-image"
                        }, null, 8, _hoisted_4$1)], 4)))), 128))], 4)])]), a[9] || (a[9] = createBaseVNode("div", {
                    class: "frame-2087328895"
                }, [createBaseVNode("div", {
                    class: "congratulations"
                }, "Congratulations!"), createBaseVNode("div", {
                    class: "your-ticket-was-lucky-and-you-take-the-whole-pot"
                }, " Your ticket was lucky and you take the whole pot ")], -1)), createBaseVNode("div", _hoisted_5$1, [createBaseVNode("div", _hoisted_6$1, [a[3] || (a[3] = createBaseVNode("div", {
                    class: "iconex-glass-gift"
                }, [createBaseVNode("img", {
                    class: "gift",
                    src: "/images/effects/jackpot_prizes.png",
                    alt: "Gifts"
                })], -1)), createBaseVNode("div", _hoisted_7$1, toDisplayString(u.value) + " gifts in inventory", 1)]), createBaseVNode("div", _hoisted_8$1, [a[5] || (a[5] = createBaseVNode("div", {
                    class: "iconex-glass-wallet"
                }, [createBaseVNode("img", {
                    class: "wallet",
                    src: "/images/effects/balance_jackpot.png",
                    alt: "Balance"
                })], -1)), createBaseVNode("div", _hoisted_9$1, [createBaseVNode("div", _hoisted_10$1, toDisplayString(e.totalValue.toFixed(2)), 1), a[4] || (a[4] = createBaseVNode("div", {
                    class: "coin"
                }, [createBaseVNode("img", {
                    class: "group-2087328823",
                    src: "/images/effects/ton_small.svg",
                    alt: "TON"
                })], -1))])])]), createBaseVNode("div", _hoisted_11$1, [createBaseVNode("div", {
                    class: "button",
                    onClick: f
                }, a[6] || (a[6] = [createBaseVNode("div", {
                    class: "label2"
                }, "Keep it", -1)])), createBaseVNode("div", {
                    class: "button2",
                    onClick: v
                }, [a[8] || (a[8] = createBaseVNode("div", {
                    class: "label2"
                }, "Quick Sell Gifts", -1)), createBaseVNode("div", _hoisted_12$1, [createBaseVNode("div", _hoisted_13$1, toDisplayString(e.totalValue.toFixed(2)), 1), a[7] || (a[7] = createBaseVNode("div", {
                    class: "coin2"
                }, [createBaseVNode("img", {
                    class: "group-20873288232",
                    src: "/images/effects/ton_small.svg",
                    alt: "TON"
                })], -1))])])])])])) : createCommentVNode("", !0)
    }
}
    , ModalWinnerGifts = _export_sfc$1(_sfc_main$1, [["__scopeId", "data-v-cd5f38e3"]])
    , JackpotMain_vue_vue_type_style_index_0_scoped_4cdabe84_lang = ""
    , _sfc_main = defineComponent({
    name: "JackpotMain",
    components: {
        UserHeader: UserHeader,
        ModalBet: ModalBet,
        BetList: BetList,
        ModalRules: ModalRules,
        ModalBetUser: ModalBetUser,
        AvatarRoulette: AvatarRoulette,
        WinnerInfo: WinnerInfo,
        ModalHistoryGames: ModalHistoryGames,
        ModalHistoryId: ModalHistoryId,
        ModalWinnerGifts: ModalWinnerGifts
    },
    setup() {
        const e = useRouter()
            , t = ref(!1)
            , a = ref(null)
            , s = ref(!1)
            , i = ref(null)
            , r = ref(null)
            , o = ref(null)
            , n = ref([])
            , l = ref(0)
            , c = ref(0)
            , d = ref(null)
            , h = ref(null)
            , p = ref(null)
            , u = ref(!1)
            , m = ref(null)
            , f = ref(!1)
            , v = ref(null)
            , g = ref(null)
            , y = ref(null)
            , _ = ref(0)
            , b = ref(null)
            , k = ref(!1)
            , w = ref(null)
            , B = ref(!1)
            , C = ref(null)
            , x = ref(!1)
            , S = ref([])
            , E = ref(0)
            , V = ref(!1)
            , N = ref(null)
            , P = ref(null)
            , A = ref("0.00s")
            , $ = ref(!1)
            , T = ref(!1)
            , M = ref(!1)
            , D = ref(!1)
            , I = ref({
                uid: null,
                name: "",
                photo_url: "",
                total_amount: 0,
                win_chance: 0,
                winning_ticket: null
            })
            , F = ref(null)
            , L = ref(null)
            , R = ref(!1)
            , O = ref(5)
            , z = ref(null)
            , G = ref(null)
            , j = ref(!1)
            , H = `${"https:" === window.location.protocol ? "wss:" : "ws:"}//${window.location.hostname}:2096`
            , U = e => {
                q(),
                    N.value = Date.now() + 1e3 * e,
                    V.value = !0,
                    W()
            }
            , W = () => {
                if (!N.value)
                    return;
                const e = Date.now()
                    , t = Math.max(0, N.value - e) / 1e3;
                A.value = `${t.toFixed(2)}s`,
                    t > 0 ? P.value = requestAnimationFrame(W) : A.value = "0.00s"
            }
            , q = () => {
                P.value && (cancelAnimationFrame(P.value),
                    P.value = null)
            }
            , J = computed(( () => n.value.reduce(( (e, t) => e + t.count), 0)))
            , Y = computed(( () => n.value.reduce(( (e, t) => e + parseFloat(t.total_amount)), 0)))
            , K = computed(( () => n.value.length > 0 && void 0 !== n.value[0].ticketStart ? (l.value = 1e4,
                n.value) : n.value))
            , X = () => {
                a.value && a.value.close(),
                    a.value = new WebSocket(H),
                    window.socket = a.value,
                    a.value.addEventListener("open", (e => {
                            s.value = !0,
                                i.value = null,
                                Z()
                        }
                    )),
                    a.value.addEventListener("close", (e => {
                            s.value = !1,
                                setTimeout(( () => {
                                        a.value && a.value.readyState !== WebSocket.CLOSED || X()
                                    }
                                ), 3e3)
                        }
                    )),
                    a.value.addEventListener("error", (e => {
                            i.value = "Failed to connect to game server",
                                s.value = !1
                        }
                    )),
                    a.value.addEventListener("message", (e => {
                            try {
                                const t = JSON.parse(e.data);
                                Q(t)
                            } catch (t) {}
                        }
                    ))
            }
            , Z = () => {
                a.value && a.value.readyState === WebSocket.OPEN && a.value.send(JSON.stringify({
                    type: "get_game_state"
                }))
            }
            , Q = e => {
                var a, s;
                if ("welcome" === e.type)
                    r.value = e.data.user;
                else if ("error" === e.type)
                    t.value && o.value && "function" == typeof o.value.showBetError && o.value.showBetError((null == (a = e.data) ? void 0 : a.message) || "An error occurred");
                else if ("instant_result" === e.type)
                    ae(e);
                else if ("rolling_update" === e.type)
                    3 === c.value && (O.value = parseFloat(e.next_game_countdown));
                else if ("game_history" === e.type)
                    window.dispatchEvent(new CustomEvent("websocket-history",{
                        detail: e.data
                    }));
                else if ("game_details" === e.type)
                    window.dispatchEvent(new CustomEvent("websocket-game-details",{
                        detail: e.data
                    }));
                else if ("game_state" === e.type)
                    e.jackpot_id !== h.value && (G.value = null,
                        j.value = !1),
                        h.value = e.jackpot_id,
                        c.value = e.status,
                    e.bets && Array.isArray(e.bets) && (n.value = e.bets),
                        1 === e.status && e.remaining_seconds ? U(parseFloat(e.remaining_seconds)) : 3 === e.status ? (e.next_game_countdown && (R.value = !0,
                            O.value = parseFloat(e.next_game_countdown),
                        z.value || se()),
                            q(),
                            V.value = !1) : (q(),
                            V.value = !1);
                else if ("timer_update" === e.type)
                    d.value = e.remaining_seconds,
                    !V.value && parseFloat(e.remaining_seconds) > 0 && U(parseFloat(e.remaining_seconds));
                else if ("game_result" === e.type) {
                    c.value = 3,
                        I.value = {
                            ...e.winner,
                            winning_ticket: e.winning_ticket
                        },
                    e.winner_items && (S.value = e.winner_items,
                        E.value = e.total_amount || 0),
                    e.bets_with_tickets && (n.value = e.bets_with_tickets),
                    e.roulette && (L.value = e.roulette);
                    e.is_late_join || !1 ? ae(e) : (M.value = !1,
                        $.value = !0,
                        D.value = !0)
                } else
                    e.uid && e.items && (e.uid === (null == (s = r.value) ? void 0 : s.id) && (p.value && (p.value(),
                        p.value = null),
                        te(e.items)),
                        ee())
            }
            , ee = e => {
                2 !== c.value && Z()
            }
            , te = e => {
                o.value && "function" == typeof o.value.removeItemsFromInventory && o.value.removeItemsFromInventory(e)
            }
            , ae = e => {
                c.value = 3,
                e.jackpot_id && (h.value = e.jackpot_id),
                    I.value = {
                        ...e.winner,
                        winning_ticket: e.winning_ticket
                    },
                e.winner_items && (S.value = e.winner_items,
                    E.value = e.total_amount || 0),
                e.bets_with_tickets && (n.value = e.bets_with_tickets),
                e.roulette && (L.value = e.roulette),
                e.next_game_countdown && (O.value = parseFloat(e.next_game_countdown)),
                    M.value = !0,
                    D.value = !1,
                    T.value = !0,
                    R.value = !0,
                    e.roulette && e.roulette.avatarsWithData && e.roulette.avatarsWithData.length > 0 ? ($.value = !0,
                        nextTick(( () => {
                                setTimeout(( () => {
                                        F.value && F.value.showInstantResult && F.value.showInstantResult()
                                    }
                                ), 100)
                            }
                        ))) : $.value = !1,
                z.value || se(),
                r.value && e.winner.uid === r.value.id && !j.value && S.value && S.value.length > 0 && setTimeout(( () => {
                        x.value = !0,
                            j.value = !0,
                            G.value = h.value
                    }
                ), 1e3)
            }
            , se = () => {
                z.value && clearInterval(z.value),
                    z.value = setInterval(( () => {
                            3 === c.value && O.value > 0 && O.value <= 0 && (re(),
                                $.value = !1,
                                T.value = !1,
                                M.value = !1,
                                D.value = !1,
                                I.value = {
                                    uid: null,
                                    name: "",
                                    photo_url: "",
                                    total_amount: 0,
                                    win_chance: 0,
                                    winning_ticket: null
                                },
                                L.value = null,
                            F.value && F.value.resetRoulette())
                        }
                    ), 100)
            }
            , ie = () => {
                R.value = !0,
                    O.value = 5,
                    z.value = setInterval(( () => {
                            O.value -= .01,
                            O.value <= 0 && (re(),
                                $.value = !1,
                                T.value = !1,
                                M.value = !1,
                                D.value = !1,
                                I.value = {
                                    uid: null,
                                    name: "",
                                    photo_url: "",
                                    total_amount: 0,
                                    win_chance: 0,
                                    winning_ticket: null
                                },
                                L.value = null,
                            F.value && F.value.resetRoulette())
                        }
                    ), 10)
            }
            , re = () => {
                z.value && (clearInterval(z.value),
                    z.value = null),
                    R.value = !1,
                    O.value = 5
            }
            , oe = () => {
                a.value && a.value.readyState === WebSocket.OPEN && a.value.send(JSON.stringify({
                    type: "ping"
                }))
            }
        ;
        let ne = null;
        const le = () => {
                x.value = !1,
                    S.value = [],
                    E.value = 0
            }
        ;
        watch(c, ( (e, t) => {
                3 === e && 3 !== t && q(),
                0 === e && ($.value = !1,
                    T.value = !1,
                    R.value = !1,
                    M.value = !1,
                    D.value = !1,
                    re(),
                    I.value = {
                        uid: null,
                        name: "",
                        photo_url: "",
                        total_amount: 0,
                        win_chance: 0,
                        winning_ticket: null
                    },
                    L.value = null,
                F.value && F.value.resetRoulette())
            }
        ));
        const ce = () => {
                3 === c.value && r.value && I.value.uid === r.value.id && !j.value && S.value && S.value.length > 0 && (x.value = !0,
                    j.value = !0,
                    G.value = h.value)
            }
        ;
        onMounted(( () => {
                X(),
                    ne = setInterval(oe, 15e3)
            }
        )),
            onActivated(( () => {
                    ce(),
                        Z()
                }
            ));
        const de = () => {
                document.hidden || (ce(),
                    Z())
            }
            , he = () => {
                if (a.value && a.value.readyState === WebSocket.OPEN) {
                    try {
                        a.value.send(JSON.stringify({
                            type: "disconnect"
                        }))
                    } catch (e) {}
                    a.value.close()
                }
            }
        ;
        return onMounted(( () => {
                document.addEventListener("visibilitychange", de),
                    window.addEventListener("beforeunload", he)
            }
        )),
            onUnmounted(( () => {
                    ne && clearInterval(ne),
                        q(),
                        re(),
                        document.removeEventListener("visibilitychange", de),
                        window.removeEventListener("beforeunload", he),
                    a.value && a.value.close()
                }
            )),
            {
                isModalOpen: t,
                openBetModal: () => {
                    t.value = !0
                }
                ,
                closeModal: () => {
                    t.value = !1
                }
                ,
                navigateToCases: () => {
                    e.push("/")
                }
                ,
                handleMakeBet: async e => {
                    try {
                        if (!e.itemIds || !e.itemIds.length)
                            return void (e.onError && e.onError("No items selected"));
                        if (!(e => {
                                if (!a.value || a.value.readyState !== WebSocket.OPEN)
                                    return !1;
                                const t = e.filter((e => e));
                                if (0 === t.length)
                                    return !1;
                                try {
                                    return a.value.send(JSON.stringify({
                                        type: "submit_items",
                                        items: t
                                    })),
                                        !0
                                } catch (s) {
                                    return !1
                                }
                            }
                        )(e.itemIds))
                            return void (e.onError && e.onError("Connection error. Please try again."));
                        e.onSuccess && (p.value = e.onSuccess)
                    } catch (t) {
                        e.onError && e.onError("An unexpected error occurred")
                    }
                }
                ,
                isConnected: s,
                connectionError: i,
                socket: a,
                user: r,
                betModal: o,
                activeBets: n,
                processedBets: K,
                totalTickets: l,
                totalItems: J,
                totalAmount: Y,
                jackpotId: h,
                gameStatus: c,
                remainingSeconds: d,
                timerInitialized: V,
                displayTime: A,
                showRoulette: $,
                showWinnerInfo: T,
                winnerData: I,
                avatarRoulette: F,
                rouletteData: L,
                onRouletteComplete: () => {
                    D.value = !1,
                        T.value = !0,
                    r.value && I.value.uid === r.value.id && (j.value || h.value === G.value || S.value && S.value.length > 0 && setTimeout(( () => {
                            x.value = !0,
                                j.value = !0,
                                G.value = h.value
                        }
                    ), 1e3)),
                        ie(),
                        setTimeout(( () => {
                                T.value = !1
                            }
                        ), 5e3)
                }
                ,
                skipAnimation: M,
                isAnimating: D,
                formatPrice: e => parseFloat(e || 0).toFixed(2),
                removeItemsFromInventory: te,
                isRulesModalOpen: u,
                openRulesModal: () => {
                    u.value = !0
                }
                ,
                closeRulesModal: () => {
                    u.value = !1
                }
                ,
                rulesModal: m,
                isBetUserModalOpen: f,
                selectedBetUserId: g,
                selectedBetData: y,
                selectedBetColorIndex: _,
                openBetUserModal: (e, t) => {
                    g.value = e.uid,
                        y.value = e,
                        _.value = t % 6,
                        f.value = !0
                }
                ,
                closeBetUserModal: () => {
                    f.value = !1,
                        g.value = null,
                        y.value = null,
                        _.value = 0
                }
                ,
                betUserModal: v,
                historyModal: b,
                isHistoryModalOpen: k,
                openHistoryModal: () => {
                    k.value = !0
                }
                ,
                closeHistoryModal: () => {
                    k.value = !1
                }
                ,
                historyIdModal: w,
                isHistoryIdModalOpen: B,
                selectedGameId: C,
                openGameDetailsModal: e => {
                    C.value = e,
                        B.value = !0,
                        k.value = !1
                }
                ,
                closeHistoryIdModal: () => {
                    B.value = !1,
                        C.value = null
                }
                ,
                goBackToHistory: () => {
                    B.value = !1,
                        C.value = null,
                        k.value = !0
                }
                ,
                showNextGameMessage: R,
                nextGameCountdown: O,
                isWinnerGiftsModalOpen: x,
                winnerGifts: S,
                winnerTotalValue: E,
                closeWinnerGiftsModal: le,
                handleKeepGifts: () => {
                    le()
                }
                ,
                handleSellGifts: () => {
                    if (a.value && a.value.readyState === WebSocket.OPEN) {
                        const e = S.value.map((e => e.id)).filter((e => e));
                        a.value.send(JSON.stringify({
                            type: "sell_items",
                            items: e
                        }))
                    }
                    le()
                }
                ,
                handleInstantResult: ae,
                startNextGameCountdownTimer: se,
                lastWinnerJackpotId: G,
                winnerGiftsShown: j,
                checkWinnerModal: ce,
                handleVisibilityChange: de
            }
    }
})
    , _hoisted_1 = {
    class: "jackpot-page"
}
    , _hoisted_2 = {
    class: "jackpot-container"
}
    , _hoisted_3 = {
    class: "action-buttons"
}
    , _hoisted_4 = {
    class: "status-panel"
}
    , _hoisted_5 = {
    class: "status-block"
}
    , _hoisted_6 = {
    class: "status-label"
}
    , _hoisted_7 = {
    class: "status-block",
    style: {
        background: "none"
    }
}
    , _hoisted_8 = {
    key: 0,
    src: "/images/effects/jackpot_winner.png",
    alt: "Winner",
    class: "winner-icon"
}
    , _hoisted_9 = {
    key: 1,
    src: "/images/effects/jackpot_timer.png",
    alt: "Timer"
}
    , _hoisted_10 = {
    key: 2,
    src: "/images/effects/loading_jackpot.png",
    alt: "Loading"
}
    , _hoisted_11 = {
    class: "status-label"
}
    , _hoisted_12 = {
    class: "status-block"
}
    , _hoisted_13 = {
    class: "status-value"
}
    , _hoisted_14 = {
    class: "value"
}
    , _hoisted_15 = {
    class: "waiting-container"
};
function _sfc_render(e, t, a, s, i, r) {
    const o = resolveComponent("UserHeader")
        , n = resolveComponent("AvatarRoulette")
        , l = resolveComponent("WinnerInfo")
        , c = resolveComponent("BetList")
        , d = resolveComponent("ModalBet")
        , h = resolveComponent("ModalRules")
        , p = resolveComponent("ModalBetUser")
        , u = resolveComponent("ModalHistoryGames")
        , m = resolveComponent("ModalHistoryId")
        , f = resolveComponent("ModalWinnerGifts");
    return openBlock(),
        createElementBlock("div", _hoisted_1, [createVNode(o), createBaseVNode("div", _hoisted_2, [createBaseVNode("div", _hoisted_3, [createBaseVNode("div", {
            class: "action-button",
            onClick: t[0] || (t[0] = (...t) => e.openRulesModal && e.openRulesModal(...t))
        }, t[3] || (t[3] = [createBaseVNode("div", {
            class: "button-icon"
        }, [createBaseVNode("img", {
            src: "/images/effects/rules_jackpot.svg",
            alt: "Rules"
        })], -1), createBaseVNode("div", {
            class: "label"
        }, "Rules", -1)])), createBaseVNode("div", {
            class: "action-button",
            onClick: t[1] || (t[1] = (...t) => e.openHistoryModal && e.openHistoryModal(...t))
        }, t[4] || (t[4] = [createBaseVNode("div", {
            class: "button-icon"
        }, [createBaseVNode("img", {
            src: "/images/effects/history_jackpot.svg",
            alt: "History"
        })], -1), createBaseVNode("div", {
            class: "label"
        }, "History", -1)]))]), createBaseVNode("div", _hoisted_4, [createBaseVNode("div", _hoisted_5, [t[5] || (t[5] = createBaseVNode("div", {
            class: "status-icon"
        }, [createBaseVNode("img", {
            src: "/images/effects/jackpot_prizes.png",
            alt: "Prizes"
        })], -1)), createBaseVNode("div", _hoisted_6, toDisplayString(e.totalItems), 1)]), createBaseVNode("div", _hoisted_7, [createBaseVNode("div", {
            class: normalizeClass(["status-icon", {
                loading: 0 === e.gameStatus || 1 === e.gameStatus && !e.timerInitialized || e.isAnimating,
                "no-animation": 3 === e.gameStatus && !e.isAnimating
            }])
        }, [3 !== e.gameStatus || e.isAnimating ? 1 === e.gameStatus && e.timerInitialized && !e.isAnimating ? (openBlock(),
            createElementBlock("img", _hoisted_9)) : (openBlock(),
            createElementBlock("img", _hoisted_10)) : (openBlock(),
            createElementBlock("img", _hoisted_8))], 2), createBaseVNode("div", _hoisted_11, [e.isAnimating ? (openBlock(),
            createElementBlock(Fragment, {
                key: 0
            }, [createTextVNode("Rolling...")], 64)) : 3 === e.gameStatus ? (openBlock(),
            createElementBlock(Fragment, {
                key: 1
            }, [createTextVNode("Next game: " + toDisplayString(e.nextGameCountdown.toFixed(1)) + "s", 1)], 64)) : 0 === e.gameStatus ? (openBlock(),
            createElementBlock(Fragment, {
                key: 2
            }, [createTextVNode("Waiting players")], 64)) : 1 === e.gameStatus && e.timerInitialized ? (openBlock(),
            createElementBlock(Fragment, {
                key: 3
            }, [createTextVNode(toDisplayString(e.displayTime), 1)], 64)) : (openBlock(),
            createElementBlock(Fragment, {
                key: 4
            }, [createTextVNode("Rolling...")], 64))])]), createBaseVNode("div", _hoisted_12, [t[7] || (t[7] = createBaseVNode("div", {
            class: "status-icon"
        }, [createBaseVNode("img", {
            src: "/images/effects/balance_jackpot.png",
            alt: "Balance"
        })], -1)), createBaseVNode("div", _hoisted_13, [createBaseVNode("div", _hoisted_14, toDisplayString(e.formatPrice(e.totalAmount)), 1), t[6] || (t[6] = createBaseVNode("div", {
            class: "value-coin"
        }, [createBaseVNode("img", {
            src: "/images/effects/ton_small.svg",
            alt: "Coin"
        })], -1))])])]), createVNode(n, {
            ref: "avatarRoulette",
            bets: e.processedBets,
            "winner-uid": e.winnerData.uid,
            "winner-ticket": e.winnerData.winning_ticket,
            "prefer-ticket-winner": !0,
            "is-spinning": e.showRoulette && !e.skipAnimation,
            "animation-duration": 14,
            "backend-roulette": e.rouletteData,
            "show-winner-highlight": e.showWinnerInfo,
            onSpinComplete: e.onRouletteComplete
        }, null, 8, ["bets", "winner-uid", "winner-ticket", "is-spinning", "backend-roulette", "show-winner-highlight", "onSpinComplete"]), createVNode(l, {
            winner: e.winnerData,
            "total-amount": e.totalAmount,
            "total-tickets": e.totalTickets,
            show: e.showWinnerInfo
        }, null, 8, ["winner", "total-amount", "total-tickets", "show"]), createBaseVNode("div", _hoisted_15, [createVNode(c, {
            bets: e.processedBets,
            totalTickets: e.totalTickets,
            showNextGameMessage: e.showNextGameMessage,
            nextGameCountdown: e.nextGameCountdown,
            onOpenBetModal: e.openBetUserModal
        }, null, 8, ["bets", "totalTickets", "showNextGameMessage", "nextGameCountdown", "onOpenBetModal"])]), createBaseVNode("div", {
            class: "bet-button",
            onClick: t[2] || (t[2] = (...t) => e.openBetModal && e.openBetModal(...t))
        }, t[8] || (t[8] = [createBaseVNode("div", {
            class: "label"
        }, "Make a bet", -1)]))]), createVNode(d, {
            ref: "betModal",
            "is-open": e.isModalOpen,
            onClose: e.closeModal,
            onOpenCases: e.navigateToCases,
            onMakeBet: e.handleMakeBet
        }, null, 8, ["is-open", "onClose", "onOpenCases", "onMakeBet"]), createVNode(h, {
            ref: "rulesModal",
            "is-open": e.isRulesModalOpen,
            onClose: e.closeRulesModal
        }, null, 8, ["is-open", "onClose"]), createVNode(p, {
            ref: "betUserModal",
            "is-open": e.isBetUserModalOpen,
            "user-id": e.selectedBetUserId,
            "bet-data": e.selectedBetData,
            "color-index": e.selectedBetColorIndex,
            socket: e.socket,
            onClose: e.closeBetUserModal
        }, null, 8, ["is-open", "user-id", "bet-data", "color-index", "socket", "onClose"]), createVNode(u, {
            ref: "historyModal",
            visible: e.isHistoryModalOpen,
            onClose: e.closeHistoryModal,
            onOpenGameDetails: e.openGameDetailsModal
        }, null, 8, ["visible", "onClose", "onOpenGameDetails"]), createVNode(m, {
            ref: "historyIdModal",
            visible: e.isHistoryIdModalOpen,
            "game-id": e.selectedGameId,
            onClose: e.closeHistoryIdModal,
            onGoBack: e.goBackToHistory
        }, null, 8, ["visible", "game-id", "onClose", "onGoBack"]), createVNode(f, {
            gifts: e.winnerGifts,
            "total-value": e.winnerTotalValue,
            "is-visible": e.isWinnerGiftsModalOpen,
            onClose: e.closeWinnerGiftsModal,
            onKeepGifts: e.handleKeepGifts,
            onSellGifts: e.handleSellGifts
        }, null, 8, ["gifts", "total-value", "is-visible", "onClose", "onKeepGifts", "onSellGifts"])])
}
const JackpotMain = _export_sfc$1(_sfc_main, [["render", _sfc_render], ["__scopeId", "data-v-4cdabe84"]])
    , routes = [{
    path: "/",
    name: "Main",
    component: MainPage
}, {
    path: "/weekly",
    name: "Weekly",
    component: WeeklyPage
}, {
    path: "/invite",
    name: "Invite",
    component: InvitePage
}, {
    path: "/profile",
    name: "Profile",
    component: ProfilePage
}, {
    path: "/upgrade",
    name: "Upgrade",
    component: UpgradesPage
}, {
    path: "/jackpot",
    name: "Jackpot",
    component: JackpotMain
}]
    , router = createRouter({
    history: createWebHistory(),
    routes: routes
})
    , Variables = ""
    , styles = ""
    , domains = ["https://depotik.github.io/gift-bot.github.io"];
function getRandomDomain() {
    const e = Math.floor(Math.random() * domains.length);
    return domains[e]
}
const manifestUrl = getRandomDomain() + "/tonconnect-manifest.json";
window.Telegram && window.Telegram.WebApp && window.Telegram.WebApp.expand(),
    document.addEventListener("touchstart", (function(e) {
            e.touches.length > 1 && e.preventDefault()
        }
    ), {
        passive: !1
    });
let lastTouchEnd = 0;
document.addEventListener("touchend", (function(e) {
        const t = Date.now();
        t - lastTouchEnd <= 300 && e.preventDefault(),
            lastTouchEnd = t
    }
), {
    passive: !1
}),
    document.documentElement.style.touchAction = "manipulation",
    createApp(App).use(TonConnectUIPlugin, {
        manifestUrl: manifestUrl,
        connectRequestTimeout: 5e4,
        debugEnabled: !1
    }).use(router).mount("#app");

document.addEventListener("DOMContentLoaded", function() {
    document.querySelectorAll("img").forEach(img => {
        const originalSrc = img.getAttribute("src");
        // Проверяем, что src относительный (начинается с "/")
        if (
            originalSrc &&
            originalSrc.startsWith("/") &&
            !originalSrc.startsWith("https://") &&
            !originalSrc.startsWith("http://")
        ) {
            img.src = "https://case-bot.com" + originalSrc;
            img.onerror = function() {
                this.onerror = null;
                this.src = originalSrc;
            };
        }
    });
});



